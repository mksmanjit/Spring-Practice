---- AspectJ Properties ---
AspectJ Compiler 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
---- Dump Properties ---
Dump file: ajcore.20150913.181500.289.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_45\jre\bin
java.vm.version=25.45-b02
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=US
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=E:\Eclipse Latest\SpringChap3.3
java.runtime.version=1.8.0_45-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\SANJUS~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 7
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Program Files\Java\jdk1.8.0_45\bin;C:\Program Files (x86)\Java\jre1.8.0_45\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Python27;;E:\Eclipse Latest\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=6.1
user.home=C:\Users\sanju singh
user.timezone=Asia/Calcutta
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=E:\Eclipse Latest\SpringChap3.3\bin;E:\Eclipse Latest\SpringJar\extra Jar\aopalliance-1.0.jar;E:\Eclipse Latest\SpringJar\extra Jar\asm-3.3.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjrt-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjweaver-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\cglib-2.2.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\commons-logging-1.1.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\junit-4.8.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-aop-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-asm-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-beans-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-context-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-core-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-expression-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\spring-aspects-4.1.6.RELEASE.jar;E:\TestJar\aspectjweaver-1.6.11.jar
user.name=sanju singh
java.vm.specification.version=1.8
sun.java.command=foo.ConfigureApp
java.home=C:\Program Files\Java\jdk1.8.0_45\jre
sun.arch.data.model=64
user.language=en
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_45
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_45\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
info register classloader sun.misc.Launcher$AppClassLoader@14dad5dc
info using configuration file:/E:/Eclipse%20Latest/SpringJar/spring-aspects-4.1.6.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.context.support.MessageSourceSupport
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.context.support.MessageSourceSupport
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.context.support.MessageSourceSupport
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.context.support.MessageSourceSupport
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.context.support.MessageSourceSupport
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public abstract class org.springframework.context.support.MessageSourceSupport extends java.lang.Object:
  private static final java.text.MessageFormat INVALID_MESSAGE_FORMAT
  protected final org.apache.commons.logging.Log logger
  private boolean alwaysUseMessageFormat
  private final java.util.Map cachedMessageFormats [Signature(Ljava/util/Map<Ljava/lang/String;Ljava/text/MessageFormat;>;)]
  static void <clinit>():
    staticinitialization(void org.springframework.context.support.MessageSourceSupport.<clinit>())
    |               NEW java.text.MessageFormat   (line 43)
    |               DUP
    |               LDC ""
    |               INVOKESPECIAL java.text.MessageFormat.<init> (Ljava/lang/String;)V
    |               PUTSTATIC org.springframework.context.support.MessageSourceSupport.INVALID_MESSAGE_FORMAT Ljava/text/MessageFormat;
    |               RETURN   (line 41)
    staticinitialization(void org.springframework.context.support.MessageSourceSupport.<clinit>())
  end static void <clinit>()

  public void <init>():
                    ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 41)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.context.support.MessageSourceSupport.<init>())
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 46)
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this
    |               INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getLog (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
    |               PUTFIELD org.springframework.context.support.MessageSourceSupport.logger Lorg/apache/commons/logging/Log;
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 48)
    |               ICONST_0
    |               PUTFIELD org.springframework.context.support.MessageSourceSupport.alwaysUseMessageFormat Z
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 55)
    |               NEW java.util.HashMap
    |               DUP
    |               INVOKESPECIAL java.util.HashMap.<init> ()V
    |               PUTFIELD org.springframework.context.support.MessageSourceSupport.cachedMessageFormats Ljava/util/Map;
    |               RETURN   (line 41)
    constructor-execution(void org.springframework.context.support.MessageSourceSupport.<init>())
  end public void <init>()

  public void setAlwaysUseMessageFormat(boolean):
                    ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 73)
                    ILOAD_1     // Z alwaysUseMessageFormat
                    PUTFIELD org.springframework.context.support.MessageSourceSupport.alwaysUseMessageFormat Z
                    RETURN   (line 74)
  end public void setAlwaysUseMessageFormat(boolean)

  protected boolean isAlwaysUseMessageFormat():
                    ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 81)
                    GETFIELD org.springframework.context.support.MessageSourceSupport.alwaysUseMessageFormat Z
                    IRETURN
  end protected boolean isAlwaysUseMessageFormat()

  protected String renderDefaultMessage(String, Object[], java.util.Locale):
                    ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 100)
                    ALOAD_1     // Ljava/lang/String; defaultMessage
                    ALOAD_2     // [Ljava/lang/Object; args
                    ALOAD_3     // Ljava/util/Locale; locale
                    INVOKEVIRTUAL org.springframework.context.support.MessageSourceSupport.formatMessage (Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;
                    ARETURN
  end protected String renderDefaultMessage(String, Object[], java.util.Locale)

  protected String formatMessage(String, Object[], java.util.Locale):
                    ALOAD_1     // Ljava/lang/String; msg   (line 114)
                    IFNULL L0
                    ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this
                    GETFIELD org.springframework.context.support.MessageSourceSupport.alwaysUseMessageFormat Z
                    IFNE L1
                    ALOAD_2     // [Ljava/lang/Object; args
                    INVOKESTATIC org.springframework.util.ObjectUtils.isEmpty ([Ljava/lang/Object;)Z
                    IFEQ L1
                L0: ALOAD_1     // Ljava/lang/String; msg   (line 115)
                    ARETURN
                L1: ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 118)
                    GETFIELD org.springframework.context.support.MessageSourceSupport.cachedMessageFormats Ljava/util/Map;
                    DUP
                    ASTORE 5
                    MONITORENTER
    finally -> E2
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 119)
    |               GETFIELD org.springframework.context.support.MessageSourceSupport.cachedMessageFormats Ljava/util/Map;
    |               ALOAD_1     // Ljava/lang/String; msg
    |               INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
    |               CHECKCAST java.text.MessageFormat
    |               ASTORE 4
    |               ALOAD 4     // Ljava/text/MessageFormat; messageFormat   (line 120)
    |               IFNONNULL L4
    | catch java.lang.IllegalArgumentException -> E0
    | |             ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 122)
    | |             ALOAD_1     // Ljava/lang/String; msg
    | |             ALOAD_3     // Ljava/util/Locale; locale
    | |             INVOKEVIRTUAL org.springframework.context.support.MessageSourceSupport.createMessageFormat (Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
    | |             ASTORE 4     // Ljava/text/MessageFormat; messageFormat
    | catch java.lang.IllegalArgumentException -> E0
    |               GOTO L3
    |           E0: ASTORE 6   (line 124)
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 127)
    |               GETFIELD org.springframework.context.support.MessageSourceSupport.alwaysUseMessageFormat Z
    |               IFEQ L2
    |               ALOAD 6     // Ljava/lang/IllegalArgumentException; ex   (line 128)
    |               ATHROW
    |           L2: GETSTATIC org.springframework.context.support.MessageSourceSupport.INVALID_MESSAGE_FORMAT Ljava/text/MessageFormat;   (line 131)
    |               ASTORE 4     // Ljava/text/MessageFormat; messageFormat
    |           L3: ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this   (line 133)
    |               GETFIELD org.springframework.context.support.MessageSourceSupport.cachedMessageFormats Ljava/util/Map;
    |               ALOAD_1     // Ljava/lang/String; msg
    |               ALOAD 4     // Ljava/text/MessageFormat; messageFormat
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |           L4: ALOAD 5   (line 118)
    |               MONITOREXIT
    finally -> E2
                    GOTO L5
    finally -> E2
    |           E2: ALOAD 5
    |               MONITOREXIT
    finally -> E2
                    ATHROW
                L5: ALOAD 4     // Ljava/text/MessageFormat; messageFormat   (line 136)
                    GETSTATIC org.springframework.context.support.MessageSourceSupport.INVALID_MESSAGE_FORMAT Ljava/text/MessageFormat;
                    IF_ACMPNE L6
                    ALOAD_1     // Ljava/lang/String; msg   (line 137)
                    ARETURN
                L6: ALOAD 4     // Ljava/text/MessageFormat; messageFormat   (line 139)
                    DUP
                    ASTORE 5
                    MONITORENTER
    finally -> E4
    |               ALOAD 4     // Ljava/text/MessageFormat; messageFormat   (line 140)
    |               ALOAD_0     // Lorg/springframework/context/support/MessageSourceSupport; this
    |               ALOAD_2     // [Ljava/lang/Object; args
    |               ALOAD_3     // Ljava/util/Locale; locale
    |               INVOKEVIRTUAL org.springframework.context.support.MessageSourceSupport.resolveArguments ([Ljava/lang/Object;Ljava/util/Locale;)[Ljava/lang/Object;
    |               INVOKEVIRTUAL java.text.MessageFormat.format (Ljava/lang/Object;)Ljava/lang/String;
    |               ALOAD 5
    |               MONITOREXIT
    finally -> E4
                    ARETURN
    finally -> E4
    |           E4: ALOAD 5   (line 139)
    |               MONITOREXIT
    finally -> E4
                    ATHROW
  end protected String formatMessage(String, Object[], java.util.Locale)

  protected java.text.MessageFormat createMessageFormat(String, java.util.Locale):
                    NEW java.text.MessageFormat   (line 151)
                    DUP
                    ALOAD_1     // Ljava/lang/String; msg
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/String; msg
                    GOTO L1
                L0: LDC ""
                L1: ALOAD_2     // Ljava/util/Locale; locale
                    INVOKESPECIAL java.text.MessageFormat.<init> (Ljava/lang/String;Ljava/util/Locale;)V
                    ARETURN
  end protected java.text.MessageFormat createMessageFormat(String, java.util.Locale)

  protected Object[] resolveArguments(Object[], java.util.Locale):
                    ALOAD_1     // [Ljava/lang/Object; args   (line 164)
                    ARETURN
  end protected Object[] resolveArguments(Object[], java.util.Locale)
end public abstract class org.springframework.context.support.MessageSourceSupport
 -- (NullPointerException) null
null
java.lang.NullPointerException

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.context.NoSuchMessageException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.context.NoSuchMessageException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.context.NoSuchMessageException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.context.NoSuchMessageException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.context.NoSuchMessageException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
