---- AspectJ Properties ---
AspectJ Compiler 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
---- Dump Properties ---
Dump file: ajcore.20150913.185855.613.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_45\jre\bin
java.vm.version=25.45-b02
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=US
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=E:\Eclipse Latest\SpringChap3.3
java.runtime.version=1.8.0_45-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\SANJUS~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 7
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Program Files\Java\jdk1.8.0_45\bin;C:\Program Files (x86)\Java\jre1.8.0_45\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Python27;;E:\Eclipse Latest\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=6.1
user.home=C:\Users\sanju singh
user.timezone=Asia/Calcutta
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=E:\Eclipse Latest\SpringChap3.3\bin;E:\Eclipse Latest\SpringJar\extra Jar\aopalliance-1.0.jar;E:\Eclipse Latest\SpringJar\extra Jar\asm-3.3.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjrt-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjweaver-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\cglib-2.2.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\commons-logging-1.1.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\junit-4.8.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-aop-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-asm-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-beans-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-context-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-core-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-expression-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\spring-aspects-4.1.6.RELEASE.jar;E:\TestJar\aspectjweaver-1.6.11.jar
user.name=sanju singh
java.vm.specification.version=1.8
sun.java.command=foo.ConfigureApp
java.home=C:\Program Files\Java\jdk1.8.0_45\jre
sun.arch.data.model=64
user.language=en
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_45
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_45\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
info register classloader sun.misc.Launcher$AppClassLoader@14dad5dc
info using configuration file:/E:/Eclipse%20Latest/SpringJar/spring-aspects-4.1.6.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.beans.PropertyValue
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.beans.PropertyValue
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.beans.PropertyValue
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.beans.PropertyValue
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.PropertyValue
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.PropertyValue extends org.springframework.beans.BeanMetadataAttributeAccessor implements java.io.Serializable:
  private final String name
  private final Object value
  private Object source
  private boolean optional
  private boolean converted
  private Object convertedValue
  volatile Boolean conversionNecessary
  volatile Object resolvedTokens
  volatile java.beans.PropertyDescriptor resolvedDescriptor
  public void <init>(String, Object):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 71)
                    INVOKESPECIAL org.springframework.beans.BeanMetadataAttributeAccessor.<init> ()V
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(java.lang.String, java.lang.Object))
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 50)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.optional Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 52)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.converted Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 72)
    |               ALOAD_1     // Ljava/lang/String; name
    |               PUTFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 73)
    |               ALOAD_2     // Ljava/lang/Object; value
    |               PUTFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
    |               RETURN   (line 74)
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(java.lang.String, java.lang.Object))
  end public void <init>(String, Object)

  public void <init>(org.springframework.beans.PropertyValue):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 80)
                    INVOKESPECIAL org.springframework.beans.BeanMetadataAttributeAccessor.<init> ()V
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(org.springframework.beans.PropertyValue))
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 50)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.optional Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 52)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.converted Z
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original   (line 81)
    |               LDC "Original must not be null"
    |               INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 82)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.getName ()Ljava/lang/String;
    |               PUTFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 83)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.getValue ()Ljava/lang/Object;
    |               PUTFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 84)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.getSource ()Ljava/lang/Object;
    |               PUTFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 85)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.isOptional ()Z
    |               PUTFIELD org.springframework.beans.PropertyValue.optional Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 86)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.converted Z
    |               PUTFIELD org.springframework.beans.PropertyValue.converted Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 87)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.convertedValue Ljava/lang/Object;
    |               PUTFIELD org.springframework.beans.PropertyValue.convertedValue Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 88)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.conversionNecessary Ljava/lang/Boolean;
    |               PUTFIELD org.springframework.beans.PropertyValue.conversionNecessary Ljava/lang/Boolean;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 89)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.resolvedTokens Ljava/lang/Object;
    |               PUTFIELD org.springframework.beans.PropertyValue.resolvedTokens Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 90)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.resolvedDescriptor Ljava/beans/PropertyDescriptor;
    |               PUTFIELD org.springframework.beans.PropertyValue.resolvedDescriptor Ljava/beans/PropertyDescriptor;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 91)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.copyAttributesFrom (Lorg/springframework/core/AttributeAccessor;)V
    |               RETURN   (line 92)
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(org.springframework.beans.PropertyValue))
  end public void <init>(org.springframework.beans.PropertyValue)

  public void <init>(org.springframework.beans.PropertyValue, Object):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 100)
                    INVOKESPECIAL org.springframework.beans.BeanMetadataAttributeAccessor.<init> ()V
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(org.springframework.beans.PropertyValue, java.lang.Object))
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 50)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.optional Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 52)
    |               ICONST_0
    |               PUTFIELD org.springframework.beans.PropertyValue.converted Z
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original   (line 101)
    |               LDC "Original must not be null"
    |               INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 102)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.getName ()Ljava/lang/String;
    |               PUTFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 103)
    |               ALOAD_2     // Ljava/lang/Object; newValue
    |               PUTFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 104)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               PUTFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 105)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.isOptional ()Z
    |               PUTFIELD org.springframework.beans.PropertyValue.optional Z
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 106)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.conversionNecessary Ljava/lang/Boolean;
    |               PUTFIELD org.springframework.beans.PropertyValue.conversionNecessary Ljava/lang/Boolean;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 107)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.resolvedTokens Ljava/lang/Object;
    |               PUTFIELD org.springframework.beans.PropertyValue.resolvedTokens Ljava/lang/Object;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 108)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               GETFIELD org.springframework.beans.PropertyValue.resolvedDescriptor Ljava/beans/PropertyDescriptor;
    |               PUTFIELD org.springframework.beans.PropertyValue.resolvedDescriptor Ljava/beans/PropertyDescriptor;
    |               ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 109)
    |               ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
    |               INVOKEVIRTUAL org.springframework.beans.PropertyValue.copyAttributesFrom (Lorg/springframework/core/AttributeAccessor;)V
    |               RETURN   (line 110)
    constructor-execution(void org.springframework.beans.PropertyValue.<init>(org.springframework.beans.PropertyValue, java.lang.Object))
  end public void <init>(org.springframework.beans.PropertyValue, Object)

  public String getName():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 117)
                    GETFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
                    ARETURN
  end public String getName()

  public Object getValue():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 127)
                    GETFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
                    ARETURN
  end public Object getValue()

  public org.springframework.beans.PropertyValue getOriginalPropertyValue():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 136)
                    ASTORE_1
                    GOTO L1   (line 137)
                L0: ALOAD_1     // Lorg/springframework/beans/PropertyValue; original   (line 138)
                    GETFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
                    CHECKCAST org.springframework.beans.PropertyValue
                    ASTORE_1     // Lorg/springframework/beans/PropertyValue; original
                L1: ALOAD_1     // Lorg/springframework/beans/PropertyValue; original   (line 137)
                    GETFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
                    INSTANCEOF org.springframework.beans.PropertyValue
                    IFEQ L2
                    ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
                    GETFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
                    ALOAD_1     // Lorg/springframework/beans/PropertyValue; original
                    IF_ACMPNE L0
                L2: ALOAD_1     // Lorg/springframework/beans/PropertyValue; original   (line 140)
                    ARETURN
  end public org.springframework.beans.PropertyValue getOriginalPropertyValue()

  public void setOptional(boolean):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 144)
                    ILOAD_1     // Z optional
                    PUTFIELD org.springframework.beans.PropertyValue.optional Z
                    RETURN   (line 145)
  end public void setOptional(boolean)

  public boolean isOptional():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 148)
                    GETFIELD org.springframework.beans.PropertyValue.optional Z
                    IRETURN
  end public boolean isOptional()

  public synchronized boolean isConverted():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 156)
                    GETFIELD org.springframework.beans.PropertyValue.converted Z
                    IRETURN
  end public synchronized boolean isConverted()

  public synchronized void setConvertedValue(Object):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 164)
                    ICONST_1
                    PUTFIELD org.springframework.beans.PropertyValue.converted Z
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 165)
                    ALOAD_1     // Ljava/lang/Object; value
                    PUTFIELD org.springframework.beans.PropertyValue.convertedValue Ljava/lang/Object;
                    RETURN   (line 166)
  end public synchronized void setConvertedValue(Object)

  public synchronized Object getConvertedValue():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 173)
                    GETFIELD org.springframework.beans.PropertyValue.convertedValue Ljava/lang/Object;
                    ARETURN
  end public synchronized Object getConvertedValue()

  public boolean equals(Object):
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 179)
                    ALOAD_1     // Ljava/lang/Object; other
                    IF_ACMPNE L0
                    ICONST_1   (line 180)
                    IRETURN
                L0: ALOAD_1     // Ljava/lang/Object; other   (line 182)
                    INSTANCEOF org.springframework.beans.PropertyValue
                    IFNE L1
                    ICONST_0   (line 183)
                    IRETURN
                L1: ALOAD_1     // Ljava/lang/Object; other   (line 185)
                    CHECKCAST org.springframework.beans.PropertyValue
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 186)
                    GETFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
                    ALOAD_2     // Lorg/springframework/beans/PropertyValue; otherPv
                    GETFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 187)
                    GETFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
                    ALOAD_2     // Lorg/springframework/beans/PropertyValue; otherPv
                    GETFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 188)
                    GETFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
                    ALOAD_2     // Lorg/springframework/beans/PropertyValue; otherPv
                    GETFIELD org.springframework.beans.PropertyValue.source Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ICONST_1
                    IRETURN
                L2: ICONST_0
                    IRETURN   (line 186)
  end public boolean equals(Object)

  public int hashCode():
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this   (line 193)
                    GETFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.hashCode ()I
                    BIPUSH 29
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this
                    GETFIELD org.springframework.beans.PropertyValue.value Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    IADD
                    IRETURN
  end public int hashCode()

  public String toString():
                    NEW java.lang.StringBuilder   (line 198)
                    DUP
                    LDC "bean property '"
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Lorg/springframework/beans/PropertyValue; this
                    GETFIELD org.springframework.beans.PropertyValue.name Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public String toString()

end public class org.springframework.beans.PropertyValue
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:361)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.createHelper(DefaultBeanDefinitionDocumentReader.java:98)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:90)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:126)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:92)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.beans.factory.support.MethodOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.beans.factory.support.MethodOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.beans.factory.support.MethodOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.beans.factory.support.MethodOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.factory.support.MethodOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public abstract class org.springframework.beans.factory.support.MethodOverride extends java.lang.Object implements org.springframework.beans.BeanMetadataElement:
  private final String methodName
  private boolean overloaded
  private Object source
  protected void <init>(String):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 49)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.beans.factory.support.MethodOverride.<init>(java.lang.String))
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 40)
    |               ICONST_1
    |               PUTFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
    |               ALOAD_1     // Ljava/lang/String; methodName   (line 50)
    |               LDC "Method name must not be null"
    |               INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 51)
    |               ALOAD_1     // Ljava/lang/String; methodName
    |               PUTFIELD org.springframework.beans.factory.support.MethodOverride.methodName Ljava/lang/String;
    |               RETURN   (line 52)
    constructor-execution(void org.springframework.beans.factory.support.MethodOverride.<init>(java.lang.String))
  end protected void <init>(String)

  public String getMethodName():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 58)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.methodName Ljava/lang/String;
                    ARETURN
  end public String getMethodName()

  protected void setOverloaded(boolean):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 67)
                    ILOAD_1     // Z overloaded
                    PUTFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
                    RETURN   (line 68)
  end protected void setOverloaded(boolean)

  protected boolean isOverloaded():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 75)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
                    IRETURN
  end protected boolean isOverloaded()

  public void setSource(Object):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 83)
                    ALOAD_1     // Ljava/lang/Object; source
                    PUTFIELD org.springframework.beans.factory.support.MethodOverride.source Ljava/lang/Object;
                    RETURN   (line 84)
  end public void setSource(Object)

  public Object getSource():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 87)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.source Ljava/lang/Object;
                    ARETURN
  end public Object getSource()

  public abstract boolean matches(java.lang.reflect.Method);

  public boolean equals(Object):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 103)
                    ALOAD_1     // Ljava/lang/Object; other
                    IF_ACMPNE L0
                    ICONST_1   (line 104)
                    IRETURN
                L0: ALOAD_1     // Ljava/lang/Object; other   (line 106)
                    INSTANCEOF org.springframework.beans.factory.support.MethodOverride
                    IFNE L1
                    ICONST_0   (line 107)
                    IRETURN
                L1: ALOAD_1     // Ljava/lang/Object; other   (line 109)
                    CHECKCAST org.springframework.beans.factory.support.MethodOverride
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 110)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.methodName Ljava/lang/String;
                    ALOAD_2     // Lorg/springframework/beans/factory/support/MethodOverride; that
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.methodName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 111)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
                    ALOAD_2     // Lorg/springframework/beans/factory/support/MethodOverride; that
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
                    IF_ICMPNE L2
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 112)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.source Ljava/lang/Object;
                    ALOAD_2     // Lorg/springframework/beans/factory/support/MethodOverride; that
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.source Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ICONST_1
                    IRETURN
                L2: ICONST_0
                    IRETURN   (line 110)
  end public boolean equals(Object)

  public int hashCode():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this   (line 117)
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.methodName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    ISTORE_1
                    BIPUSH 29   (line 118)
                    ILOAD_1     // I hashCode
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.source Ljava/lang/Object;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    IADD
                    ISTORE_1     // I hashCode
                    BIPUSH 29   (line 119)
                    ILOAD_1     // I hashCode
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/factory/support/MethodOverride; this
                    GETFIELD org.springframework.beans.factory.support.MethodOverride.overloaded Z
                    IFEQ L0
                    ICONST_1
                    GOTO L1
                L0: ICONST_0
                L1: IADD
                    ISTORE_1     // I hashCode
                    ILOAD_1     // I hashCode   (line 120)
                    IRETURN
  end public int hashCode()

end public abstract class org.springframework.beans.factory.support.MethodOverride
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:361)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.createHelper(DefaultBeanDefinitionDocumentReader.java:98)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:90)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:126)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:92)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.beans.factory.support.ReplaceOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.beans.factory.support.ReplaceOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.beans.factory.support.ReplaceOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.beans.factory.support.ReplaceOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.factory.support.ReplaceOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.factory.support.ReplaceOverride extends org.springframework.beans.factory.support.MethodOverride:
  private final String methodReplacerBeanName
  private java.util.List typeIdentifiers [Signature(Ljava/util/List<Ljava/lang/String;>;)]
  public void <init>(String, String):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 50)
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.<init> (Ljava/lang/String;)V
    constructor-execution(void org.springframework.beans.factory.support.ReplaceOverride.<init>(java.lang.String, java.lang.String))
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 41)
    |               NEW java.util.LinkedList
    |               DUP
    |               INVOKESPECIAL java.util.LinkedList.<init> ()V
    |               PUTFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
    |               ALOAD_1     // Ljava/lang/String; methodName   (line 51)
    |               LDC "Method replacer bean name must not be null"
    |               INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 52)
    |               ALOAD_2     // Ljava/lang/String; methodReplacerBeanName
    |               PUTFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
    |               RETURN   (line 53)
    constructor-execution(void org.springframework.beans.factory.support.ReplaceOverride.<init>(java.lang.String, java.lang.String))
  end public void <init>(String, String)

  public String getMethodReplacerBeanName():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 59)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
                    ARETURN
  end public String getMethodReplacerBeanName()

  public void addTypeIdentifier(String):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 68)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    ALOAD_1     // Ljava/lang/String; identifier
                    INVOKEINTERFACE java.util.List.add (Ljava/lang/Object;)Z
                    POP
                    RETURN   (line 69)
  end public void addTypeIdentifier(String)

  public boolean matches(java.lang.reflect.Method):
                    ALOAD_1     // Ljava/lang/reflect/Method; method   (line 75)
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    INVOKEVIRTUAL org.springframework.beans.factory.support.ReplaceOverride.getMethodName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ICONST_0   (line 77)
                    IRETURN
                L0: ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 80)
                    INVOKEVIRTUAL org.springframework.beans.factory.support.ReplaceOverride.isOverloaded ()Z
                    IFNE L1
                    ICONST_1   (line 82)
                    IRETURN
                L1: ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 86)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    INVOKEINTERFACE java.util.List.size ()I
                    ALOAD_1     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ARRAYLENGTH
                    IF_ICMPEQ L2
                    ICONST_0   (line 87)
                    IRETURN
                L2: ICONST_0   (line 89)
                    ISTORE_2
                    GOTO L5
                L3: ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 90)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    ILOAD_2     // I i
                    INVOKEINTERFACE java.util.List.get (I)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ASTORE_3
                    ALOAD_1     // Ljava/lang/reflect/Method; method   (line 91)
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ILOAD_2     // I i
                    AALOAD
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ALOAD_3     // Ljava/lang/String; identifier
                    INVOKEVIRTUAL java.lang.String.contains (Ljava/lang/CharSequence;)Z
                    IFNE L4
                    ICONST_0   (line 93)
                    IRETURN
                L4: IINC_2 1     // I i   (line 89)
                L5: ILOAD_2     // I i
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    INVOKEINTERFACE java.util.List.size ()I
                    IF_ICMPLT L3
                    ICONST_1   (line 96)
                    IRETURN
  end public boolean matches(java.lang.reflect.Method)

  public String toString():
                    NEW java.lang.StringBuilder   (line 102)
                    DUP
                    LDC "Replace override for method '"
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    INVOKEVIRTUAL org.springframework.beans.factory.support.ReplaceOverride.getMethodName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "; will call bean '"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 103)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;   (line 102)
                    ARETURN
  end public String toString()

  public boolean equals(Object):
                    ALOAD_1     // Ljava/lang/Object; other   (line 108)
                    INSTANCEOF org.springframework.beans.factory.support.ReplaceOverride
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    ALOAD_1     // Ljava/lang/Object; other
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.equals (Ljava/lang/Object;)Z
                    IFNE L1
                L0: ICONST_0   (line 109)
                    IRETURN
                L1: ALOAD_1     // Ljava/lang/Object; other   (line 111)
                    CHECKCAST org.springframework.beans.factory.support.ReplaceOverride
                    ASTORE_2
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 112)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
                    ALOAD_2     // Lorg/springframework/beans/factory/support/ReplaceOverride; that
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 113)
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    ALOAD_2     // Lorg/springframework/beans/factory/support/ReplaceOverride; that
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L2
                    ICONST_1
                    IRETURN
                L2: ICONST_0
                    IRETURN   (line 112)
  end public boolean equals(Object)

  public int hashCode():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this   (line 118)
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.hashCode ()I
                    ISTORE_1
                    BIPUSH 29   (line 119)
                    ILOAD_1     // I hashCode
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.methodReplacerBeanName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    IADD
                    ISTORE_1     // I hashCode
                    BIPUSH 29   (line 120)
                    ILOAD_1     // I hashCode
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/factory/support/ReplaceOverride; this
                    GETFIELD org.springframework.beans.factory.support.ReplaceOverride.typeIdentifiers Ljava/util/List;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    IADD
                    ISTORE_1     // I hashCode
                    ILOAD_1     // I hashCode   (line 121)
                    IRETURN
  end public int hashCode()

end public class org.springframework.beans.factory.support.ReplaceOverride
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:361)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.createHelper(DefaultBeanDefinitionDocumentReader.java:98)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:90)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:126)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:92)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.beans.factory.support.LookupOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.beans.factory.support.LookupOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.beans.factory.support.LookupOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.beans.factory.support.LookupOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.factory.support.LookupOverride
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.springframework.beans.factory.support.LookupOverride extends org.springframework.beans.factory.support.MethodOverride:
  private final String beanName
  public void <init>(String, String):
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this   (line 46)
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.<init> (Ljava/lang/String;)V
    constructor-execution(void org.springframework.beans.factory.support.LookupOverride.<init>(java.lang.String, java.lang.String))
    |               ALOAD_2     // Ljava/lang/String; beanName   (line 47)
    |               LDC "Bean name must not be null"
    |               INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    |               ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this   (line 48)
    |               ALOAD_2     // Ljava/lang/String; beanName
    |               PUTFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
    |               RETURN   (line 49)
    constructor-execution(void org.springframework.beans.factory.support.LookupOverride.<init>(java.lang.String, java.lang.String))
  end public void <init>(String, String)

  public String getBeanName():
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this   (line 55)
                    GETFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
                    ARETURN
  end public String getBeanName()

  public boolean matches(java.lang.reflect.Method):
                    ALOAD_1     // Ljava/lang/reflect/Method; method   (line 64)
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    INVOKEVIRTUAL org.springframework.beans.factory.support.LookupOverride.getMethodName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    ARRAYLENGTH
                    IFNE L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public boolean matches(java.lang.reflect.Method)

  public String toString():
                    NEW java.lang.StringBuilder   (line 70)
                    DUP
                    LDC "LookupOverride for method '"
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    INVOKEVIRTUAL org.springframework.beans.factory.support.LookupOverride.getMethodName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "'; will return bean '"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    GETFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public String toString()

  public boolean equals(Object):
                    ALOAD_1     // Ljava/lang/Object; other   (line 75)
                    INSTANCEOF org.springframework.beans.factory.support.LookupOverride
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    ALOAD_1     // Ljava/lang/Object; other
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this   (line 76)
                    GETFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
                    ALOAD_1     // Ljava/lang/Object; other
                    CHECKCAST org.springframework.beans.factory.support.LookupOverride
                    GETFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeEquals (Ljava/lang/Object;Ljava/lang/Object;)Z
                    IFEQ L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN   (line 75)
  end public boolean equals(Object)

  public int hashCode():
                    BIPUSH 29   (line 81)
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    INVOKESPECIAL org.springframework.beans.factory.support.MethodOverride.hashCode ()I
                    IMUL
                    ALOAD_0     // Lorg/springframework/beans/factory/support/LookupOverride; this
                    GETFIELD org.springframework.beans.factory.support.LookupOverride.beanName Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ObjectUtils.nullSafeHashCode (Ljava/lang/Object;)I
                    IADD
                    IRETURN
  end public int hashCode()

end public class org.springframework.beans.factory.support.LookupOverride
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:361)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.createHelper(DefaultBeanDefinitionDocumentReader.java:98)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:90)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:126)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:92)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.beans.factory.parsing.DefaultsDefinition
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.beans.factory.parsing.DefaultsDefinition
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.beans.factory.parsing.DefaultsDefinition
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.beans.factory.parsing.DefaultsDefinition
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.beans.factory.parsing.DefaultsDefinition
when weaving classes 
when weaving 
 [Xlint:cantFindType]
