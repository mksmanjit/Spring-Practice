---- AspectJ Properties ---
AspectJ Compiler 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
---- Dump Properties ---
Dump file: ajcore.20150913.181450.975.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_45\jre\bin
java.vm.version=25.45-b02
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=US
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=E:\Eclipse Latest\SpringChap3.3
java.runtime.version=1.8.0_45-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\SANJUS~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 7
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Program Files\Java\jdk1.8.0_45\bin;C:\Program Files (x86)\Java\jre1.8.0_45\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Python27;;E:\Eclipse Latest\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=6.1
user.home=C:\Users\sanju singh
user.timezone=Asia/Calcutta
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=E:\Eclipse Latest\SpringChap3.3\bin;E:\Eclipse Latest\SpringJar\extra Jar\aopalliance-1.0.jar;E:\Eclipse Latest\SpringJar\extra Jar\asm-3.3.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjrt-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjweaver-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\cglib-2.2.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\commons-logging-1.1.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\junit-4.8.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-aop-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-asm-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-beans-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-context-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-core-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-expression-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\spring-aspects-4.1.6.RELEASE.jar;E:\TestJar\aspectjweaver-1.6.11.jar
user.name=sanju singh
java.vm.specification.version=1.8
sun.java.command=foo.ConfigureApp
java.home=C:\Program Files\Java\jdk1.8.0_45\jre
sun.arch.data.model=64
user.language=en
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_45
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_45\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
info register classloader sun.misc.Launcher$AppClassLoader@14dad5dc
info using configuration file:/E:/Eclipse%20Latest/SpringJar/spring-aspects-4.1.6.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.impl.WeakHashtable
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.impl.WeakHashtable
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.impl.WeakHashtable
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.impl.WeakHashtable
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.impl.WeakHashtable
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public final class org.apache.commons.logging.impl.WeakHashtable extends java.util.Hashtable:
  private static final int MAX_CHANGES_BEFORE_PURGE = 100
  private static final int PARTIAL_PURGE_COUNT = 10
  private java.lang.ref.ReferenceQueue queue
  private int changeCount
  public void <init>():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 134)
                    INVOKESPECIAL java.util.Hashtable.<init> ()V
    constructor-execution(void org.apache.commons.logging.impl.WeakHashtable.<init>())
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 126)
    |               NEW java.lang.ref.ReferenceQueue
    |               DUP
    |               INVOKESPECIAL java.lang.ref.ReferenceQueue.<init> ()V
    |               PUTFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 128)
    |               ICONST_0
    |               PUTFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
    |               RETURN   (line 134)
    constructor-execution(void org.apache.commons.logging.impl.WeakHashtable.<init>())
  end public void <init>()

  public boolean containsKey(Object):
                    NEW org.apache.commons.logging.impl.WeakHashtable$Referenced   (line 142)
                    DUP
                    ALOAD_1     // Ljava/lang/Object; key
                    ACONST_NULL
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$Referenced.<init> (Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
                    ASTORE_2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 143)
                    ALOAD_2     // Lorg/apache/commons/logging/impl/WeakHashtable$Referenced; referenced
                    INVOKESPECIAL java.util.Hashtable.containsKey (Ljava/lang/Object;)Z
                    IRETURN
  end public boolean containsKey(Object)

  public java.util.Enumeration elements():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 150)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 151)
                    INVOKESPECIAL java.util.Hashtable.elements ()Ljava/util/Enumeration;
                    ARETURN
  end public java.util.Enumeration elements()

  public java.util.Set entrySet():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 158)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 159)
                    INVOKESPECIAL java.util.Hashtable.entrySet ()Ljava/util/Set;
                    ASTORE_1
                    NEW java.util.HashSet   (line 160)
                    DUP
                    INVOKESPECIAL java.util.HashSet.<init> ()V
                    ASTORE_2
                    ALOAD_1     // Ljava/util/Set; referencedEntries   (line 161)
                    INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                L0: ALOAD_3     // Ljava/util/Iterator; it
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L2
                    ALOAD_3     // Ljava/util/Iterator; it   (line 162)
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST java.util.Map$Entry
                    ASTORE 4
                    ALOAD 4     // Ljava/util/Map$Entry; entry   (line 163)
                    INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
                    CHECKCAST org.apache.commons.logging.impl.WeakHashtable$Referenced
                    ASTORE 5
                    ALOAD 5     // Lorg/apache/commons/logging/impl/WeakHashtable$Referenced; referencedKey   (line 164)
                    INVOKESTATIC org.apache.commons.logging.impl.WeakHashtable$Referenced.access$100 (Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;)Ljava/lang/Object;
                    ASTORE 6
                    ALOAD 4     // Ljava/util/Map$Entry; entry   (line 165)
                    INVOKEINTERFACE java.util.Map$Entry.getValue ()Ljava/lang/Object;
                    ASTORE 7
                    ALOAD 6     // Ljava/lang/Object; key   (line 166)
                    IFNULL L1
                    NEW org.apache.commons.logging.impl.WeakHashtable$Entry   (line 167)
                    DUP
                    ALOAD 6     // Ljava/lang/Object; key
                    ALOAD 7     // Ljava/lang/Object; value
                    ACONST_NULL
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$Entry.<init> (Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
                    ASTORE 8
                    ALOAD_2     // Ljava/util/Set; unreferencedEntries   (line 168)
                    ALOAD 8     // Lorg/apache/commons/logging/impl/WeakHashtable$Entry; dereferencedEntry
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                L1: GOTO L0
                L2: ALOAD_2     // Ljava/util/Set; unreferencedEntries   (line 171)
                    ARETURN
  end public java.util.Set entrySet()

  public Object get(Object):
                    NEW org.apache.commons.logging.impl.WeakHashtable$Referenced   (line 179)
                    DUP
                    ALOAD_1     // Ljava/lang/Object; key
                    ACONST_NULL
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$Referenced.<init> (Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
                    ASTORE_2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 180)
                    ALOAD_2     // Lorg/apache/commons/logging/impl/WeakHashtable$Referenced; referenceKey
                    INVOKESPECIAL java.util.Hashtable.get (Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public Object get(Object)

  public java.util.Enumeration keys():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 187)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 188)
                    INVOKESPECIAL java.util.Hashtable.keys ()Ljava/util/Enumeration;
                    ASTORE_1
                    NEW org.apache.commons.logging.impl.WeakHashtable$1   (line 189)
                    DUP
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this
                    ALOAD_1     // Ljava/util/Enumeration; enumer
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$1.<init> (Lorg/apache/commons/logging/impl/WeakHashtable;Ljava/util/Enumeration;)V
                    ARETURN
  end public java.util.Enumeration keys()

  public java.util.Set keySet():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 205)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 206)
                    INVOKESPECIAL java.util.Hashtable.keySet ()Ljava/util/Set;
                    ASTORE_1
                    NEW java.util.HashSet   (line 207)
                    DUP
                    INVOKESPECIAL java.util.HashSet.<init> ()V
                    ASTORE_2
                    ALOAD_1     // Ljava/util/Set; referencedKeys   (line 208)
                    INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                L0: ALOAD_3     // Ljava/util/Iterator; it
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L2
                    ALOAD_3     // Ljava/util/Iterator; it   (line 209)
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST org.apache.commons.logging.impl.WeakHashtable$Referenced
                    ASTORE 4
                    ALOAD 4     // Lorg/apache/commons/logging/impl/WeakHashtable$Referenced; referenceKey   (line 210)
                    INVOKESTATIC org.apache.commons.logging.impl.WeakHashtable$Referenced.access$100 (Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;)Ljava/lang/Object;
                    ASTORE 5
                    ALOAD 5     // Ljava/lang/Object; keyValue   (line 211)
                    IFNULL L1
                    ALOAD_2     // Ljava/util/Set; unreferencedKeys   (line 212)
                    ALOAD 5     // Ljava/lang/Object; keyValue
                    INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
                    POP
                L1: GOTO L0
                L2: ALOAD_2     // Ljava/util/Set; unreferencedKeys   (line 215)
                    ARETURN
  end public java.util.Set keySet()

  public Object put(Object, Object):
                    ALOAD_1     // Ljava/lang/Object; key   (line 223)
                    IFNONNULL L0
                    NEW java.lang.NullPointerException   (line 224)
                    DUP
                    LDC "Null keys are not allowed"
                    INVOKESPECIAL java.lang.NullPointerException.<init> (Ljava/lang/String;)V
                    ATHROW
                L0: ALOAD_2     // Ljava/lang/Object; value   (line 226)
                    IFNONNULL L1
                    NEW java.lang.NullPointerException   (line 227)
                    DUP
                    LDC "Null values are not allowed"
                    INVOKESPECIAL java.lang.NullPointerException.<init> (Ljava/lang/String;)V
                    ATHROW
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 232)
                    DUP
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    DUP_X1
                    ICONST_1
                    IADD
                    PUTFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    BIPUSH 100
                    IF_ICMPLE L2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 233)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 234)
                    ICONST_0
                    PUTFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    GOTO L3
                L2: ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 237)
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    BIPUSH 10
                    IREM
                    IFNE L3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 238)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purgeOne ()V
                L3: NEW org.apache.commons.logging.impl.WeakHashtable$Referenced   (line 241)
                    DUP
                    ALOAD_1     // Ljava/lang/Object; key
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
                    ACONST_NULL
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$Referenced.<init> (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
                    ASTORE_3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 242)
                    ALOAD_3     // Lorg/apache/commons/logging/impl/WeakHashtable$Referenced; keyRef
                    ALOAD_2     // Ljava/lang/Object; value
                    INVOKESPECIAL java.util.Hashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public Object put(Object, Object)

  public void putAll(java.util.Map):
                    ALOAD_1     // Ljava/util/Map; t   (line 249)
                    IFNULL L1
                    ALOAD_1     // Ljava/util/Map; t   (line 250)
                    INVOKEINTERFACE java.util.Map.entrySet ()Ljava/util/Set;
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Set; entrySet   (line 251)
                    INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
                    ASTORE_3
                L0: ALOAD_3     // Ljava/util/Iterator; it
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L1
                    ALOAD_3     // Ljava/util/Iterator; it   (line 252)
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST java.util.Map$Entry
                    ASTORE 4
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 253)
                    ALOAD 4     // Ljava/util/Map$Entry; entry
                    INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
                    ALOAD 4     // Ljava/util/Map$Entry; entry
                    INVOKEINTERFACE java.util.Map$Entry.getValue ()Ljava/lang/Object;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.WeakHashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    GOTO L0
                L1: RETURN   (line 256)
  end public void putAll(java.util.Map)

  public java.util.Collection values():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 262)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 263)
                    INVOKESPECIAL java.util.Hashtable.values ()Ljava/util/Collection;
                    ARETURN
  end public java.util.Collection values()

  public Object remove(Object):
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 272)
                    DUP
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    DUP_X1
                    ICONST_1
                    IADD
                    PUTFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    BIPUSH 100
                    IF_ICMPLE L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 273)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 274)
                    ICONST_0
                    PUTFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    GOTO L1
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 277)
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.changeCount I
                    BIPUSH 10
                    IREM
                    IFNE L1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 278)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purgeOne ()V
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 280)
                    NEW org.apache.commons.logging.impl.WeakHashtable$Referenced
                    DUP
                    ALOAD_1     // Ljava/lang/Object; key
                    ACONST_NULL
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable$Referenced.<init> (Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
                    INVOKESPECIAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public Object remove(Object)

  public boolean isEmpty():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 287)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 288)
                    INVOKESPECIAL java.util.Hashtable.isEmpty ()Z
                    IRETURN
  end public boolean isEmpty()

  public int size():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 295)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 296)
                    INVOKESPECIAL java.util.Hashtable.size ()I
                    IRETURN
  end public int size()

  public String toString():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 303)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 304)
                    INVOKESPECIAL java.util.Hashtable.toString ()Ljava/lang/String;
                    ARETURN
  end public String toString()

  protected void rehash():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 312)
                    INVOKESPECIAL org.apache.commons.logging.impl.WeakHashtable.purge ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 313)
                    INVOKESPECIAL java.util.Hashtable.rehash ()V
                    RETURN   (line 314)
  end protected void rehash()

  private void purge():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 321)
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
                    DUP
                    ASTORE_1
                    MONITORENTER
    finally -> E1
    |           L0: ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 323)
    |               GETFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
    |               INVOKEVIRTUAL java.lang.ref.ReferenceQueue.poll ()Ljava/lang/ref/Reference;
    |               CHECKCAST org.apache.commons.logging.impl.WeakHashtable$WeakKey
    |               DUP
    |               ASTORE_2
    |               IFNULL L1
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 324)
    |               ALOAD_2     // Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey; key
    |               INVOKESTATIC org.apache.commons.logging.impl.WeakHashtable$WeakKey.access$400 (Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;)Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;
    |               INVOKESPECIAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GOTO L0
    |           L1: ALOAD_1   (line 326)
    |               MONITOREXIT
    finally -> E1
                    GOTO L2
    finally -> E1
    |           E1: ASTORE_3
    |               ALOAD_1
    |               MONITOREXIT
    finally -> E1
                    ALOAD_3
                    ATHROW
                L2: RETURN   (line 327)
  end private void purge()

  private void purgeOne():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 335)
                    GETFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
                    DUP
                    ASTORE_1
                    MONITORENTER
    finally -> E1
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 336)
    |               GETFIELD org.apache.commons.logging.impl.WeakHashtable.queue Ljava/lang/ref/ReferenceQueue;
    |               INVOKEVIRTUAL java.lang.ref.ReferenceQueue.poll ()Ljava/lang/ref/Reference;
    |               CHECKCAST org.apache.commons.logging.impl.WeakHashtable$WeakKey
    |               ASTORE_2
    |               ALOAD_2     // Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey; key   (line 337)
    |               IFNULL L0
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/WeakHashtable; this   (line 338)
    |               ALOAD_2     // Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey; key
    |               INVOKESTATIC org.apache.commons.logging.impl.WeakHashtable$WeakKey.access$400 (Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;)Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;
    |               INVOKESPECIAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |           L0: ALOAD_1   (line 340)
    |               MONITOREXIT
    finally -> E1
                    GOTO L1
    finally -> E1
    |           E1: ASTORE_3
    |               ALOAD_1
    |               MONITOREXIT
    finally -> E1
                    ALOAD_3
                    ATHROW
                L1: RETURN   (line 341)
  end private void purgeOne()

end public final class org.apache.commons.logging.impl.WeakHashtable
 -- (ClassFormatException) File: 'java.util.Map$Entry': Invalid byte tag in constant pool: 15
File: 'java.util.Map$Entry': Invalid byte tag in constant pool: 15
org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.util.Map$Entry': Invalid byte tag in constant pool: 15
	at org.aspectj.apache.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:192)
	at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java:131)
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:323)
	at org.aspectj.weaver.bcel.BcelWorld.lookupJavaClass(BcelWorld.java:402)
	at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:376)
	at org.aspectj.weaver.ltw.LTWWorld.resolveDelegate(LTWWorld.java:111)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:467)
	at org.aspectj.weaver.World.resolve(World.java:308)
	at org.aspectj.weaver.World.resolve(World.java:218)
	at org.aspectj.weaver.UnresolvedType.resolve(UnresolvedType.java:593)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:72)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.fieldTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:114)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.typeArgument2TypeX(BcelGenericSignatureToTypeXConverter.java:182)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:87)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.fieldTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:114)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.typeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:201)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.typeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:189)
	at org.aspectj.weaver.bcel.BcelMethod.unpackGenericSignature(BcelMethod.java:596)
	at org.aspectj.weaver.bcel.BcelMethod.getGenericReturnType(BcelMethod.java:544)
	at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:757)
	at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:710)
	at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:766)
	at org.aspectj.weaver.ResolvedType$MethodGetterIncludingItds.get(ResolvedType.java:246)
	at org.aspectj.weaver.ResolvedType$MethodGetterIncludingItds.get(ResolvedType.java:244)
	at org.aspectj.weaver.Iterators$4$1.hasNext(Iterators.java:213)
	at org.aspectj.weaver.Iterators$4.hasNext(Iterators.java:230)
	at org.aspectj.weaver.ResolvedType.lookupResolvedMember(ResolvedType.java:611)
	at org.aspectj.weaver.JoinPointSignatureIterator.findSignaturesFromSupertypes(JoinPointSignatureIterator.java:192)
	at org.aspectj.weaver.JoinPointSignatureIterator.hasNext(JoinPointSignatureIterator.java:68)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:317)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:50)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.commons.logging.LogFactory.createFactoryStore(LogFactory.java:357)
	at org.apache.commons.logging.LogFactory.<clinit>(LogFactory.java:1819)
	at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:160)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:89)
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.<init>(AbstractRefreshableConfigApplicationContext.java:59)
	at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:61)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:136)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.LogFactory$1
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.LogFactory$1
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.LogFactory$1
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.LogFactory$1
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.LogFactory$1
when weaving classes 
when weaving 
 [Xlint:cantFindType]
