---- AspectJ Properties ---
AspectJ Compiler 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
---- Dump Properties ---
Dump file: ajcore.20150913.185847.818.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_45\jre\bin
java.vm.version=25.45-b02
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=US
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=E:\Eclipse Latest\SpringChap3.3
java.runtime.version=1.8.0_45-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\SANJUS~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 7
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Program Files\Java\jdk1.8.0_45\bin;C:\Program Files (x86)\Java\jre1.8.0_45\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Python27;;E:\Eclipse Latest\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=6.1
user.home=C:\Users\sanju singh
user.timezone=Asia/Calcutta
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=E:\Eclipse Latest\SpringChap3.3\bin;E:\Eclipse Latest\SpringJar\extra Jar\aopalliance-1.0.jar;E:\Eclipse Latest\SpringJar\extra Jar\asm-3.3.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjrt-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjweaver-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\cglib-2.2.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\commons-logging-1.1.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\junit-4.8.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-aop-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-asm-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-beans-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-context-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-core-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-expression-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\spring-aspects-4.1.6.RELEASE.jar;E:\TestJar\aspectjweaver-1.6.11.jar
user.name=sanju singh
java.vm.specification.version=1.8
sun.java.command=foo.ConfigureApp
java.home=C:\Program Files\Java\jdk1.8.0_45\jre
sun.arch.data.model=64
user.language=en
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_45
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_45\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
info register classloader sun.misc.Launcher$AppClassLoader@14dad5dc
info using configuration file:/E:/Eclipse%20Latest/SpringJar/spring-aspects-4.1.6.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.springframework.util.ClassUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.springframework.util.ClassUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.springframework.util.ClassUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.springframework.util.ClassUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.springframework.util.ClassUtils
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public abstract class org.springframework.util.ClassUtils extends java.lang.Object:
  public static final String ARRAY_SUFFIX = "[]"
  private static final String INTERNAL_ARRAY_PREFIX = "["
  private static final String NON_PRIMITIVE_ARRAY_PREFIX = "[L"
  private static final char PACKAGE_SEPARATOR = 46
  private static final char INNER_CLASS_SEPARATOR = 36
  public static final String CGLIB_CLASS_SEPARATOR = "$$"
  public static final String CLASS_FILE_SUFFIX = ".class"
  private static final java.util.Map primitiveWrapperTypeMap [Signature(Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Class<*>;>;)]
  private static final java.util.Map primitiveTypeToWrapperMap [Signature(Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/Class<*>;>;)]
  private static final java.util.Map primitiveTypeNameMap [Signature(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Class<*>;>;)]
  private static final java.util.Map commonClassCache [Signature(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Class<*>;>;)]
  static void <clinit>():
    staticinitialization(void org.springframework.util.ClassUtils.<clinit>())
    |               NEW java.util.HashMap   (line 78)
    |               DUP
    |               BIPUSH 8
    |               INVOKESPECIAL java.util.HashMap.<init> (I)V
    |               PUTSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;
    |               NEW java.util.HashMap   (line 84)
    |               DUP
    |               BIPUSH 8
    |               INVOKESPECIAL java.util.HashMap.<init> (I)V
    |               PUTSTATIC org.springframework.util.ClassUtils.primitiveTypeToWrapperMap Ljava/util/Map;
    |               NEW java.util.HashMap   (line 90)
    |               DUP
    |               BIPUSH 32
    |               INVOKESPECIAL java.util.HashMap.<init> (I)V
    |               PUTSTATIC org.springframework.util.ClassUtils.primitiveTypeNameMap Ljava/util/Map;
    |               NEW java.util.HashMap   (line 96)
    |               DUP
    |               BIPUSH 32
    |               INVOKESPECIAL java.util.HashMap.<init> (I)V
    |               PUTSTATIC org.springframework.util.ClassUtils.commonClassCache Ljava/util/Map;
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 100)
    |               LDC java.lang.Boolean
    |               GETSTATIC java.lang.Boolean.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 101)
    |               LDC java.lang.Byte
    |               GETSTATIC java.lang.Byte.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 102)
    |               LDC java.lang.Character
    |               GETSTATIC java.lang.Character.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 103)
    |               LDC java.lang.Double
    |               GETSTATIC java.lang.Double.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 104)
    |               LDC java.lang.Float
    |               GETSTATIC java.lang.Float.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 105)
    |               LDC java.lang.Integer
    |               GETSTATIC java.lang.Integer.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 106)
    |               LDC java.lang.Long
    |               GETSTATIC java.lang.Long.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 107)
    |               LDC java.lang.Short
    |               GETSTATIC java.lang.Short.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 109)
    |               INVOKEINTERFACE java.util.Map.entrySet ()Ljava/util/Set;
    |               INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
    |               ASTORE_1
    |               GOTO L1
    |           L0: ALOAD_1
    |               INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
    |               CHECKCAST java.util.Map$Entry
    |               ASTORE_0
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveTypeToWrapperMap Ljava/util/Map;   (line 110)
    |               ALOAD_0     // Ljava/util/Map$Entry; entry
    |               INVOKEINTERFACE java.util.Map$Entry.getValue ()Ljava/lang/Object;
    |               CHECKCAST java.lang.Class
    |               ALOAD_0     // Ljava/util/Map$Entry; entry
    |               INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
    |               CHECKCAST java.lang.Class
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |               ICONST_1   (line 111)
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               ALOAD_0     // Ljava/util/Map$Entry; entry
    |               INVOKEINTERFACE java.util.Map$Entry.getKey ()Ljava/lang/Object;
    |               CHECKCAST java.lang.Class
    |               AASTORE
    |               INVOKESTATIC org.springframework.util.ClassUtils.registerCommonClasses ([Ljava/lang/Class;)V
    |           L1: ALOAD_1   (line 109)
    |               INVOKEINTERFACE java.util.Iterator.hasNext ()Z
    |               IFNE L0
    |               NEW java.util.HashSet   (line 114)
    |               DUP
    |               BIPUSH 32
    |               INVOKESPECIAL java.util.HashSet.<init> (I)V
    |               ASTORE_0
    |               ALOAD_0     // Ljava/util/Set; primitiveTypes   (line 115)
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;
    |               INVOKEINTERFACE java.util.Map.values ()Ljava/util/Collection;
    |               INVOKEINTERFACE java.util.Set.addAll (Ljava/util/Collection;)Z
    |               POP
    |               ALOAD_0     // Ljava/util/Set; primitiveTypes   (line 116)
    |               BIPUSH 8
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               LDC [Z   (line 117)
    |               AASTORE
    |               DUP
    |               ICONST_1
    |               LDC [B
    |               AASTORE
    |               DUP
    |               ICONST_2
    |               LDC [C
    |               AASTORE
    |               DUP
    |               ICONST_3
    |               LDC [D
    |               AASTORE
    |               DUP
    |               ICONST_4
    |               LDC [F   (line 118)
    |               AASTORE
    |               DUP
    |               ICONST_5
    |               LDC [I
    |               AASTORE
    |               DUP
    |               BIPUSH 6
    |               LDC [J
    |               AASTORE
    |               DUP
    |               BIPUSH 7
    |               LDC [S
    |               AASTORE
    |               INVOKESTATIC java.util.Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;
    |               CHECKCAST java.util.Collection
    |               INVOKEINTERFACE java.util.Set.addAll (Ljava/util/Collection;)Z   (line 116)
    |               POP
    |               ALOAD_0     // Ljava/util/Set; primitiveTypes   (line 119)
    |               GETSTATIC java.lang.Void.TYPE Ljava/lang/Class;
    |               INVOKEINTERFACE java.util.Set.add (Ljava/lang/Object;)Z
    |               POP
    |               ALOAD_0     // Ljava/util/Set; primitiveTypes   (line 120)
    |               INVOKEINTERFACE java.util.Set.iterator ()Ljava/util/Iterator;
    |               ASTORE_2
    |               GOTO L3
    |           L2: ALOAD_2
    |               INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
    |               CHECKCAST java.lang.Class
    |               ASTORE_1
    |               GETSTATIC org.springframework.util.ClassUtils.primitiveTypeNameMap Ljava/util/Map;   (line 121)
    |               ALOAD_1     // Ljava/lang/Class; primitiveType
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               ALOAD_1     // Ljava/lang/Class; primitiveType
    |               INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |           L3: ALOAD_2   (line 120)
    |               INVOKEINTERFACE java.util.Iterator.hasNext ()Z
    |               IFNE L2
    |               BIPUSH 8   (line 124)
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               LDC [Ljava.lang.Boolean;
    |               AASTORE
    |               DUP
    |               ICONST_1
    |               LDC [Ljava.lang.Byte;
    |               AASTORE
    |               DUP
    |               ICONST_2
    |               LDC [Ljava.lang.Character;
    |               AASTORE
    |               DUP
    |               ICONST_3
    |               LDC [Ljava.lang.Double;
    |               AASTORE
    |               DUP
    |               ICONST_4
    |               LDC [Ljava.lang.Float;   (line 125)
    |               AASTORE
    |               DUP
    |               ICONST_5
    |               LDC [Ljava.lang.Integer;
    |               AASTORE
    |               DUP
    |               BIPUSH 6
    |               LDC [Ljava.lang.Long;
    |               AASTORE
    |               DUP
    |               BIPUSH 7
    |               LDC [Ljava.lang.Short;
    |               AASTORE
    |               INVOKESTATIC org.springframework.util.ClassUtils.registerCommonClasses ([Ljava/lang/Class;)V
    |               BIPUSH 8   (line 126)
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               LDC java.lang.Number
    |               AASTORE
    |               DUP
    |               ICONST_1
    |               LDC [Ljava.lang.Number;
    |               AASTORE
    |               DUP
    |               ICONST_2
    |               LDC java.lang.String
    |               AASTORE
    |               DUP
    |               ICONST_3
    |               LDC [Ljava.lang.String;
    |               AASTORE
    |               DUP
    |               ICONST_4
    |               LDC java.lang.Object   (line 127)
    |               AASTORE
    |               DUP
    |               ICONST_5
    |               LDC [Ljava.lang.Object;
    |               AASTORE
    |               DUP
    |               BIPUSH 6
    |               LDC java.lang.Class
    |               AASTORE
    |               DUP
    |               BIPUSH 7
    |               LDC [Ljava.lang.Class;
    |               AASTORE
    |               INVOKESTATIC org.springframework.util.ClassUtils.registerCommonClasses ([Ljava/lang/Class;)V
    |               BIPUSH 6   (line 128)
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               LDC java.lang.Throwable
    |               AASTORE
    |               DUP
    |               ICONST_1
    |               LDC java.lang.Exception
    |               AASTORE
    |               DUP
    |               ICONST_2
    |               LDC java.lang.RuntimeException
    |               AASTORE
    |               DUP
    |               ICONST_3
    |               LDC java.lang.Error   (line 129)
    |               AASTORE
    |               DUP
    |               ICONST_4
    |               LDC java.lang.StackTraceElement
    |               AASTORE
    |               DUP
    |               ICONST_5
    |               LDC [Ljava.lang.StackTraceElement;
    |               AASTORE
    |               INVOKESTATIC org.springframework.util.ClassUtils.registerCommonClasses ([Ljava/lang/Class;)V
    |               RETURN   (line 50)
    staticinitialization(void org.springframework.util.ClassUtils.<clinit>())
  end static void <clinit>()

  public void <init>():
                    ALOAD_0     // Lorg/springframework/util/ClassUtils; this   (line 50)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.springframework.util.ClassUtils.<init>())
    |               RETURN
    constructor-execution(void org.springframework.util.ClassUtils.<init>())
  end public void <init>()

  private static transient void registerCommonClasses(Class[]):
                    ALOAD_0     // [Ljava/lang/Class; commonClasses   (line 137)
                    DUP
                    ASTORE 4
                    ARRAYLENGTH
                    ISTORE_3
                    ICONST_0
                    ISTORE_2
                    GOTO L1
                L0: ALOAD 4
                    ILOAD_2
                    AALOAD
                    ASTORE_1
                    GETSTATIC org.springframework.util.ClassUtils.commonClassCache Ljava/util/Map;   (line 138)
                    ALOAD_1     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ALOAD_1     // Ljava/lang/Class; clazz
                    INVOKEINTERFACE java.util.Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    IINC_2 1   (line 137)
                L1: ILOAD_2
                    ILOAD_3
                    IF_ICMPLT L0
                    RETURN   (line 140)
  end private static transient void registerCommonClasses(Class[])

  public static ClassLoader getDefaultClassLoader():
                    ACONST_NULL   (line 155)
                    ASTORE_0
    catch java.lang.Throwable -> E0
    |               INVOKESTATIC java.lang.Thread.currentThread ()Ljava/lang/Thread;   (line 157)
    |               INVOKEVIRTUAL java.lang.Thread.getContextClassLoader ()Ljava/lang/ClassLoader;
    |               ASTORE_0     // Ljava/lang/ClassLoader; cl
    catch java.lang.Throwable -> E0
                    GOTO L0
                E0: POP   (line 159)
                L0: ALOAD_0     // Ljava/lang/ClassLoader; cl   (line 162)
                    IFNONNULL L1
                    LDC org.springframework.util.ClassUtils   (line 164)
                    INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
                    ASTORE_0     // Ljava/lang/ClassLoader; cl
                L1: ALOAD_0     // Ljava/lang/ClassLoader; cl   (line 166)
                    ARETURN
  end public static ClassLoader getDefaultClassLoader()

  public static ClassLoader overrideThreadContextClassLoader(ClassLoader):
                    INVOKESTATIC java.lang.Thread.currentThread ()Ljava/lang/Thread;   (line 177)
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Thread; currentThread   (line 178)
                    INVOKEVIRTUAL java.lang.Thread.getContextClassLoader ()Ljava/lang/ClassLoader;
                    ASTORE_2
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoaderToUse   (line 179)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoaderToUse
                    ALOAD_2     // Ljava/lang/ClassLoader; threadContextClassLoader
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/lang/Thread; currentThread   (line 180)
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoaderToUse
                    INVOKEVIRTUAL java.lang.Thread.setContextClassLoader (Ljava/lang/ClassLoader;)V
                    ALOAD_2     // Ljava/lang/ClassLoader; threadContextClassLoader   (line 181)
                    ARETURN
                L0: ACONST_NULL   (line 184)
                    ARETURN
  end public static ClassLoader overrideThreadContextClassLoader(ClassLoader)

  public static Class forName(String) throws java.lang.ClassNotFoundException, java.lang.LinkageError:
                    ALOAD_0     // Ljava/lang/String; name   (line 204)
                    INVOKESTATIC org.springframework.util.ClassUtils.getDefaultClassLoader ()Ljava/lang/ClassLoader;
                    INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
                    ARETURN
  end public static Class forName(String) throws java.lang.ClassNotFoundException, java.lang.LinkageError

  public static Class forName(String, ClassLoader) throws java.lang.ClassNotFoundException, java.lang.LinkageError:
                    ALOAD_0     // Ljava/lang/String; name   (line 221)
                    LDC_W "Name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; name   (line 223)
                    INVOKESTATIC org.springframework.util.ClassUtils.resolvePrimitiveClassName (Ljava/lang/String;)Ljava/lang/Class;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Class; clazz   (line 224)
                    IFNONNULL L0
                    GETSTATIC org.springframework.util.ClassUtils.commonClassCache Ljava/util/Map;   (line 225)
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    ASTORE_2     // Ljava/lang/Class; clazz
                L0: ALOAD_2     // Ljava/lang/Class; clazz   (line 227)
                    IFNULL L1
                    ALOAD_2     // Ljava/lang/Class; clazz   (line 228)
                    ARETURN
                L1: ALOAD_0     // Ljava/lang/String; name   (line 232)
                    LDC "[]"
                    INVOKEVIRTUAL java.lang.String.endsWith (Ljava/lang/String;)Z
                    IFEQ L2
                    ALOAD_0     // Ljava/lang/String; name   (line 233)
                    ICONST_0
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.lang.String.length ()I
                    LDC "[]"
                    INVOKEVIRTUAL java.lang.String.length ()I
                    ISUB
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; elementClassName   (line 234)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; elementClass   (line 235)
                    ICONST_0
                    INVOKESTATIC java.lang.reflect.Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ARETURN
                L2: ALOAD_0     // Ljava/lang/String; name   (line 239)
                    LDC "[L"
                    INVOKEVIRTUAL java.lang.String.startsWith (Ljava/lang/String;)Z
                    IFEQ L3
                    ALOAD_0     // Ljava/lang/String; name
                    LDC_W ";"
                    INVOKEVIRTUAL java.lang.String.endsWith (Ljava/lang/String;)Z
                    IFEQ L3
                    ALOAD_0     // Ljava/lang/String; name   (line 240)
                    LDC "[L"
                    INVOKEVIRTUAL java.lang.String.length ()I
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.lang.String.length ()I
                    ICONST_1
                    ISUB
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; elementName   (line 241)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; elementClass   (line 242)
                    ICONST_0
                    INVOKESTATIC java.lang.reflect.Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ARETURN
                L3: ALOAD_0     // Ljava/lang/String; name   (line 246)
                    LDC "["
                    INVOKEVIRTUAL java.lang.String.startsWith (Ljava/lang/String;)Z
                    IFEQ L4
                    ALOAD_0     // Ljava/lang/String; name   (line 247)
                    LDC "["
                    INVOKEVIRTUAL java.lang.String.length ()I
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; elementName   (line 248)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; elementClass   (line 249)
                    ICONST_0
                    INVOKESTATIC java.lang.reflect.Array.newInstance (Ljava/lang/Class;I)Ljava/lang/Object;
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ARETURN
                L4: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 252)
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/ClassLoader; classLoaderToUse   (line 253)
                    IFNONNULL L5
                    INVOKESTATIC org.springframework.util.ClassUtils.getDefaultClassLoader ()Ljava/lang/ClassLoader;   (line 254)
                    ASTORE_3     // Ljava/lang/ClassLoader; classLoaderToUse
    catch java.lang.ClassNotFoundException -> E0
    |           L5: ALOAD_3     // Ljava/lang/ClassLoader; classLoaderToUse   (line 257)
    |               ALOAD_0     // Ljava/lang/String; name
    |               INVOKEVIRTUAL java.lang.ClassLoader.loadClass (Ljava/lang/String;)Ljava/lang/Class;
    catch java.lang.ClassNotFoundException -> E0
                    ARETURN
                E0: ASTORE 4   (line 259)
                    ALOAD_0     // Ljava/lang/String; name   (line 260)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE 5
                    ILOAD 5     // I lastDotIndex   (line 261)
                    ICONST_M1
                    IF_ICMPEQ L6
                    NEW java.lang.StringBuilder   (line 262)
                    DUP
                    ALOAD_0     // Ljava/lang/String; name
                    ICONST_0
                    ILOAD 5     // I lastDotIndex
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    BIPUSH 36
                    INVOKEVIRTUAL java.lang.StringBuilder.append (C)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/String; name
                    ILOAD 5     // I lastDotIndex
                    ICONST_1
                    IADD
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ASTORE 6
    catch java.lang.ClassNotFoundException -> E1
    |               ALOAD_3     // Ljava/lang/ClassLoader; classLoaderToUse   (line 264)
    |               ALOAD 6     // Ljava/lang/String; innerClassName
    |               INVOKEVIRTUAL java.lang.ClassLoader.loadClass (Ljava/lang/String;)Ljava/lang/Class;
    catch java.lang.ClassNotFoundException -> E1
                    ARETURN
                E1: POP   (line 266)
                L6: ALOAD 4     // Ljava/lang/ClassNotFoundException; ex   (line 270)
                    ATHROW
  end public static Class forName(String, ClassLoader) throws java.lang.ClassNotFoundException, java.lang.LinkageError

  public static Class resolveClassName(String, ClassLoader) throws java.lang.IllegalArgumentException:
    catch java.lang.LinkageError -> E1
    | catch java.lang.ClassNotFoundException -> E0
    | |             ALOAD_0     // Ljava/lang/String; className   (line 290)
    | |             ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    | |             INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
    | catch java.lang.ClassNotFoundException -> E0
    catch java.lang.LinkageError -> E1
                    ARETURN
                E0: ASTORE_2   (line 292)
                    NEW java.lang.IllegalArgumentException   (line 293)
                    DUP
                    NEW java.lang.StringBuilder
                    DUP
                    LDC_W "Cannot find class ["
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; className
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ALOAD_2     // Ljava/lang/ClassNotFoundException; ex
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
                    ATHROW
                E1: ASTORE_2   (line 295)
                    NEW java.lang.IllegalArgumentException   (line 296)
                    DUP
                    NEW java.lang.StringBuilder   (line 297)
                    DUP
                    LDC_W "Error loading class ["
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; className
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    LDC_W "]: problem with class file or dependent class."
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ALOAD_2     // Ljava/lang/LinkageError; ex
                    INVOKESPECIAL java.lang.IllegalArgumentException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V   (line 296)
                    ATHROW
  end public static Class resolveClassName(String, ClassLoader) throws java.lang.IllegalArgumentException

  public static Class resolvePrimitiveClassName(String):
                    ACONST_NULL   (line 312)
                    ASTORE_1
                    ALOAD_0     // Ljava/lang/String; name   (line 315)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.lang.String.length ()I
                    BIPUSH 8
                    IF_ICMPGT L0
                    GETSTATIC org.springframework.util.ClassUtils.primitiveTypeNameMap Ljava/util/Map;   (line 317)
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    ASTORE_1     // Ljava/lang/Class; result
                L0: ALOAD_1     // Ljava/lang/Class; result   (line 319)
                    ARETURN
  end public static Class resolvePrimitiveClassName(String)

  public static boolean isPresent(String):
                    ALOAD_0     // Ljava/lang/String; className   (line 332)
                    INVOKESTATIC org.springframework.util.ClassUtils.getDefaultClassLoader ()Ljava/lang/ClassLoader;
                    INVOKESTATIC org.springframework.util.ClassUtils.isPresent (Ljava/lang/String;Ljava/lang/ClassLoader;)Z
                    IRETURN
  end public static boolean isPresent(String)

  public static boolean isPresent(String, ClassLoader):
    catch java.lang.Throwable -> E0
    |               ALOAD_0     // Ljava/lang/String; className   (line 346)
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    |               INVOKESTATIC org.springframework.util.ClassUtils.forName (Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
    |               POP
    catch java.lang.Throwable -> E0
                    ICONST_1   (line 347)
                    IRETURN
                E0: POP   (line 349)
                    ICONST_0   (line 351)
                    IRETURN
  end public static boolean isPresent(String, ClassLoader)

  public static Class getUserClass(Object):
                    ALOAD_0     // Ljava/lang/Object; instance   (line 363)
                    LDC_W "Instance must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Object; instance   (line 364)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.getUserClass (Ljava/lang/Class;)Ljava/lang/Class;
                    ARETURN
  end public static Class getUserClass(Object)

  public static Class getUserClass(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 374)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    LDC "$$"
                    INVOKEVIRTUAL java.lang.String.contains (Ljava/lang/CharSequence;)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 375)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Class; superClass   (line 376)
                    IFNULL L0
                    LDC java.lang.Object
                    ALOAD_1     // Ljava/lang/Class; superClass
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/lang/Class; superClass   (line 377)
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Class; clazz   (line 380)
                    ARETURN
  end public static Class getUserClass(Class)

  public static boolean isCacheSafe(Class, ClassLoader):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 390)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 391)
                    INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/ClassLoader; target   (line 392)
                    IFNONNULL L0
                    ICONST_0   (line 393)
                    IRETURN
                L0: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 395)
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/ClassLoader; cur   (line 396)
                    ALOAD_2     // Ljava/lang/ClassLoader; target
                    IF_ACMPNE L2
                    ICONST_1   (line 397)
                    IRETURN
                L1: ALOAD_3     // Ljava/lang/ClassLoader; cur   (line 400)
                    INVOKEVIRTUAL java.lang.ClassLoader.getParent ()Ljava/lang/ClassLoader;
                    ASTORE_3     // Ljava/lang/ClassLoader; cur
                    ALOAD_3     // Ljava/lang/ClassLoader; cur   (line 401)
                    ALOAD_2     // Ljava/lang/ClassLoader; target
                    IF_ACMPNE L2
                    ICONST_1   (line 402)
                    IRETURN
                L2: ALOAD_3     // Ljava/lang/ClassLoader; cur   (line 399)
                    IFNONNULL L1
                    ICONST_0   (line 405)
                    IRETURN
  end public static boolean isCacheSafe(Class, ClassLoader)

  public static String getShortName(String):
                    ALOAD_0     // Ljava/lang/String; className   (line 416)
                    LDC_W "Class name must not be empty"
                    INVOKESTATIC org.springframework.util.Assert.hasLength (Ljava/lang/String;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; className   (line 417)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE_1
                    ALOAD_0     // Ljava/lang/String; className   (line 418)
                    LDC "$$"
                    INVOKEVIRTUAL java.lang.String.indexOf (Ljava/lang/String;)I
                    ISTORE_2
                    ILOAD_2     // I nameEndIndex   (line 419)
                    ICONST_M1
                    IF_ICMPNE L0
                    ALOAD_0     // Ljava/lang/String; className   (line 420)
                    INVOKEVIRTUAL java.lang.String.length ()I
                    ISTORE_2     // I nameEndIndex
                L0: ALOAD_0     // Ljava/lang/String; className   (line 422)
                    ILOAD_1     // I lastDotIndex
                    ICONST_1
                    IADD
                    ILOAD_2     // I nameEndIndex
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; shortName   (line 423)
                    BIPUSH 36
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.replace (CC)Ljava/lang/String;
                    ASTORE_3     // Ljava/lang/String; shortName
                    ALOAD_3     // Ljava/lang/String; shortName   (line 424)
                    ARETURN
  end public static String getShortName(String)

  public static String getShortName(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 433)
                    INVOKESTATIC org.springframework.util.ClassUtils.getQualifiedName (Ljava/lang/Class;)Ljava/lang/String;
                    INVOKESTATIC org.springframework.util.ClassUtils.getShortName (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
  end public static String getShortName(Class)

  public static String getShortNameAsProperty(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 444)
                    INVOKESTATIC org.springframework.util.ClassUtils.getShortName (Ljava/lang/Class;)Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; shortName   (line 445)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE_2
                    ILOAD_2     // I dotIndex   (line 446)
                    ICONST_M1
                    IF_ICMPEQ L0
                    ALOAD_1     // Ljava/lang/String; shortName
                    ILOAD_2     // I dotIndex
                    ICONST_1
                    IADD
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    GOTO L1
                L0: ALOAD_1     // Ljava/lang/String; shortName
                L1: ASTORE_1     // Ljava/lang/String; shortName
                    ALOAD_1     // Ljava/lang/String; shortName   (line 447)
                    INVOKESTATIC java.beans.Introspector.decapitalize (Ljava/lang/String;)Ljava/lang/String;
                    ARETURN
  end public static String getShortNameAsProperty(Class)

  public static String getClassFileName(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 457)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 458)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; className   (line 459)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE_2
                    NEW java.lang.StringBuilder   (line 460)
                    DUP
                    ALOAD_1     // Ljava/lang/String; className
                    ILOAD_2     // I lastDotIndex
                    ICONST_1
                    IADD
                    INVOKEVIRTUAL java.lang.String.substring (I)Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC ".class"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public static String getClassFileName(Class)

  public static String getPackageName(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 471)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 472)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; className   (line 473)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE_2
                    ILOAD_2     // I lastDotIndex   (line 474)
                    ICONST_M1
                    IF_ICMPEQ L0
                    ALOAD_1     // Ljava/lang/String; className
                    ICONST_0
                    ILOAD_2     // I lastDotIndex
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    GOTO L1
                L0: LDC_W ""
                L1: ARETURN
  end public static String getPackageName(Class)

  public static String getQualifiedName(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 484)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 485)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 486)
                    INVOKESTATIC org.springframework.util.ClassUtils.getQualifiedNameForArray (Ljava/lang/Class;)Ljava/lang/String;
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Class; clazz   (line 489)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ARETURN
  end public static String getQualifiedName(Class)

  private static String getQualifiedNameForArray(Class):
                    NEW java.lang.StringBuilder   (line 500)
                    DUP
                    INVOKESPECIAL java.lang.StringBuilder.<init> ()V
                    ASTORE_1
                    GOTO L1   (line 501)
                L0: ALOAD_0     // Ljava/lang/Class; clazz   (line 502)
                    INVOKEVIRTUAL java.lang.Class.getComponentType ()Ljava/lang/Class;
                    ASTORE_0     // Ljava/lang/Class; clazz
                    ALOAD_1     // Ljava/lang/StringBuilder; result   (line 503)
                    LDC "[]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                L1: ALOAD_0     // Ljava/lang/Class; clazz   (line 501)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFNE L0
                    ALOAD_1     // Ljava/lang/StringBuilder; result   (line 505)
                    ICONST_0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.insert (ILjava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                    ALOAD_1     // Ljava/lang/StringBuilder; result   (line 506)
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end private static String getQualifiedNameForArray(Class)

  public static String getQualifiedMethodName(java.lang.reflect.Method):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 516)
                    LDC_W "Method must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    NEW java.lang.StringBuilder   (line 517)
                    DUP
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC_W "."
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public static String getQualifiedMethodName(java.lang.reflect.Method)

  public static String getDescriptiveType(Object):
                    ALOAD_0     // Ljava/lang/Object; value   (line 528)
                    IFNONNULL L0
                    ACONST_NULL   (line 529)
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Object; value   (line 531)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Class; clazz   (line 532)
                    INVOKESTATIC java.lang.reflect.Proxy.isProxyClass (Ljava/lang/Class;)Z
                    IFEQ L4
                    NEW java.lang.StringBuilder   (line 533)
                    DUP
                    ALOAD_1     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/StringBuilder; result   (line 534)
                    LDC_W " implementing "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                    ALOAD_1     // Ljava/lang/Class; clazz   (line 535)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    ASTORE_3
                    ICONST_0   (line 536)
                    ISTORE 4
                    GOTO L3
                L1: ALOAD_2     // Ljava/lang/StringBuilder; result   (line 537)
                    ALOAD_3     // [Ljava/lang/Class; ifcs
                    ILOAD 4     // I i
                    AALOAD
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                    ILOAD 4     // I i   (line 538)
                    ALOAD_3     // [Ljava/lang/Class; ifcs
                    ARRAYLENGTH
                    ICONST_1
                    ISUB
                    IF_ICMPGE L2
                    ALOAD_2     // Ljava/lang/StringBuilder; result   (line 539)
                    BIPUSH 44
                    INVOKEVIRTUAL java.lang.StringBuilder.append (C)Ljava/lang/StringBuilder;
                    POP
                L2: IINC 4 1     // I i   (line 536)
                L3: ILOAD 4     // I i
                    ALOAD_3     // [Ljava/lang/Class; ifcs
                    ARRAYLENGTH
                    IF_ICMPLT L1
                    ALOAD_2     // Ljava/lang/StringBuilder; result   (line 542)
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
                L4: ALOAD_1     // Ljava/lang/Class; clazz   (line 544)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L5
                    ALOAD_1     // Ljava/lang/Class; clazz   (line 545)
                    INVOKESTATIC org.springframework.util.ClassUtils.getQualifiedNameForArray (Ljava/lang/Class;)Ljava/lang/String;
                    ARETURN
                L5: ALOAD_1     // Ljava/lang/Class; clazz   (line 548)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ARETURN
  end public static String getDescriptiveType(Object)

  public static boolean matchesTypeName(Class, String):
                    ALOAD_1     // Ljava/lang/String; typeName   (line 558)
                    IFNULL L1
                    ALOAD_1     // Ljava/lang/String; typeName   (line 559)
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/lang/String; typeName
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getSimpleName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 560)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L1
                    ALOAD_1     // Ljava/lang/String; typeName
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKESTATIC org.springframework.util.ClassUtils.getQualifiedNameForArray (Ljava/lang/Class;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                L0: ICONST_1
                    IRETURN
                L1: ICONST_0
                    IRETURN   (line 558)
  end public static boolean matchesTypeName(Class, String)

  public static transient boolean hasConstructor(Class, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 573)
                    ALOAD_1     // [Ljava/lang/Class; paramTypes
                    INVOKESTATIC org.springframework.util.ClassUtils.getConstructorIfAvailable (Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
                    IFNULL L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static transient boolean hasConstructor(Class, Class[])

  public static transient java.lang.reflect.Constructor getConstructorIfAvailable(Class, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 586)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    catch java.lang.NoSuchMethodException -> E0
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 588)
    |               ALOAD_1     // [Ljava/lang/Class; paramTypes
    |               INVOKEVIRTUAL java.lang.Class.getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
    catch java.lang.NoSuchMethodException -> E0
                    ARETURN
                E0: POP   (line 590)
                    ACONST_NULL   (line 591)
                    ARETURN
  end public static transient java.lang.reflect.Constructor getConstructorIfAvailable(Class, Class[])

  public static transient boolean hasMethod(Class, String, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 605)
                    ALOAD_1     // Ljava/lang/String; methodName
                    ALOAD_2     // [Ljava/lang/Class; paramTypes
                    INVOKESTATIC org.springframework.util.ClassUtils.getMethodIfAvailable (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
                    IFNULL L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static transient boolean hasMethod(Class, String, Class[])

  public static transient java.lang.reflect.Method getMethodIfAvailable(Class, String, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 619)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; methodName   (line 620)
                    LDC_W "Method name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    catch java.lang.NoSuchMethodException -> E0
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 622)
    |               ALOAD_1     // Ljava/lang/String; methodName
    |               ALOAD_2     // [Ljava/lang/Class; paramTypes
    |               INVOKEVIRTUAL java.lang.Class.getMethod (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    catch java.lang.NoSuchMethodException -> E0
                    ARETURN
                E0: POP   (line 624)
                    ACONST_NULL   (line 625)
                    ARETURN
  end public static transient java.lang.reflect.Method getMethodIfAvailable(Class, String, Class[])

  public static int getMethodCountForName(Class, String):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 637)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; methodName   (line 638)
                    LDC_W "Method name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ICONST_0   (line 639)
                    ISTORE_2
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 640)
                    INVOKEVIRTUAL java.lang.Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;
                    ASTORE_3
                    ALOAD_3     // [Ljava/lang/reflect/Method; declaredMethods   (line 641)
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L2
                L0: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD_1     // Ljava/lang/String; methodName   (line 642)
                    ALOAD 4     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                    IINC_2 1     // I count   (line 643)
                L1: IINC 5 1   (line 641)
                L2: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 646)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    ASTORE 4
                    ALOAD 4     // [Ljava/lang/Class; ifcs   (line 647)
                    DUP
                    ASTORE 8
                    ARRAYLENGTH
                    ISTORE 7
                    ICONST_0
                    ISTORE 6
                    GOTO L4
                L3: ALOAD 8
                    ILOAD 6
                    AALOAD
                    ASTORE 5
                    ILOAD_2     // I count   (line 648)
                    ALOAD 5     // Ljava/lang/Class; ifc
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESTATIC org.springframework.util.ClassUtils.getMethodCountForName (Ljava/lang/Class;Ljava/lang/String;)I
                    IADD
                    ISTORE_2     // I count
                    IINC 6 1   (line 647)
                L4: ILOAD 6
                    ILOAD 7
                    IF_ICMPLT L3
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 650)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    IFNULL L5
                    ILOAD_2     // I count   (line 651)
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESTATIC org.springframework.util.ClassUtils.getMethodCountForName (Ljava/lang/Class;Ljava/lang/String;)I
                    IADD
                    ISTORE_2     // I count
                L5: ILOAD_2     // I count   (line 653)
                    IRETURN
  end public static int getMethodCountForName(Class, String)

  public static boolean hasAtLeastOneMethodWithName(Class, String):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 665)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; methodName   (line 666)
                    LDC_W "Method name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 667)
                    INVOKEVIRTUAL java.lang.Class.getDeclaredMethods ()[Ljava/lang/reflect/Method;
                    ASTORE_2
                    ALOAD_2     // [Ljava/lang/reflect/Method; declaredMethods   (line 668)
                    DUP
                    ASTORE 6
                    ARRAYLENGTH
                    ISTORE 5
                    ICONST_0
                    ISTORE 4
                    GOTO L2
                L0: ALOAD 6
                    ILOAD 4
                    AALOAD
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/reflect/Method; method   (line 669)
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L1
                    ICONST_1   (line 670)
                    IRETURN
                L1: IINC 4 1   (line 668)
                L2: ILOAD 4
                    ILOAD 5
                    IF_ICMPLT L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 673)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    ASTORE_3
                    ALOAD_3     // [Ljava/lang/Class; ifcs   (line 674)
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L5
                L3: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Class; ifc   (line 675)
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESTATIC org.springframework.util.ClassUtils.hasAtLeastOneMethodWithName (Ljava/lang/Class;Ljava/lang/String;)Z
                    IFEQ L4
                    ICONST_1   (line 676)
                    IRETURN
                L4: IINC 5 1   (line 674)
                L5: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L3
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 679)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    IFNULL L6
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ALOAD_1     // Ljava/lang/String; methodName
                    INVOKESTATIC org.springframework.util.ClassUtils.hasAtLeastOneMethodWithName (Ljava/lang/Class;Ljava/lang/String;)Z
                    IFEQ L6
                    ICONST_1
                    IRETURN
                L6: ICONST_0
                    IRETURN
  end public static boolean hasAtLeastOneMethodWithName(Class, String)

  public static java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method, Class):
                    ACONST_NULL   (line 700)
                    ASTORE_2
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 701)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    ALOAD_1     // Ljava/lang/Class; targetClass
                    INVOKESTATIC org.springframework.util.ClassUtils.isOverridable (Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
                    IFEQ L0
                    ALOAD_1     // Ljava/lang/Class; targetClass   (line 702)
                    IFNULL L0
                    ALOAD_1     // Ljava/lang/Class; targetClass
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFNE L0
                    ALOAD_1     // Ljava/lang/Class; targetClass   (line 703)
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getName ()Ljava/lang/String;
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getParameterTypes ()[Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ReflectionUtils.findMethod (Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
                    ASTORE_2     // Ljava/lang/reflect/Method; specificMethod
                L0: ALOAD_2     // Ljava/lang/reflect/Method; specificMethod   (line 705)
                    IFNULL L1
                    ALOAD_2     // Ljava/lang/reflect/Method; specificMethod
                    GOTO L2
                L1: ALOAD_0     // Ljava/lang/reflect/Method; method
                L2: ARETURN
  end public static java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method, Class)

  private static boolean isOverridable(java.lang.reflect.Method, Class):
                    ALOAD_0     // Ljava/lang/reflect/Method; method   (line 714)
                    INVOKEVIRTUAL java.lang.reflect.Method.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPrivate (I)Z
                    IFEQ L0
                    ICONST_0   (line 715)
                    IRETURN
                L0: ALOAD_0     // Ljava/lang/reflect/Method; method   (line 717)
                    INVOKEVIRTUAL java.lang.reflect.Method.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isPublic (I)Z
                    IFNE L1
                    ALOAD_0     // Ljava/lang/reflect/Method; method
                    INVOKEVIRTUAL java.lang.reflect.Method.getModifiers ()I
                    INVOKESTATIC java.lang.reflect.Modifier.isProtected (I)Z
                    IFEQ L2
                L1: ICONST_1   (line 718)
                    IRETURN
                L2: ALOAD_0     // Ljava/lang/reflect/Method; method   (line 720)
                    INVOKEVIRTUAL java.lang.reflect.Method.getDeclaringClass ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.getPackageName (Ljava/lang/Class;)Ljava/lang/String;
                    ALOAD_1     // Ljava/lang/Class; targetClass
                    INVOKESTATIC org.springframework.util.ClassUtils.getPackageName (Ljava/lang/Class;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IRETURN
  end private static boolean isOverridable(java.lang.reflect.Method, Class)

  public static transient java.lang.reflect.Method getStaticMethod(Class, String, Class[]):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 732)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; methodName   (line 733)
                    LDC_W "Method name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
    catch java.lang.NoSuchMethodException -> E0
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 735)
    |               ALOAD_1     // Ljava/lang/String; methodName
    |               ALOAD_2     // [Ljava/lang/Class; args
    |               INVOKEVIRTUAL java.lang.Class.getMethod (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    |               ASTORE_3
    |               ALOAD_3     // Ljava/lang/reflect/Method; method   (line 736)
    |               INVOKEVIRTUAL java.lang.reflect.Method.getModifiers ()I
    |               INVOKESTATIC java.lang.reflect.Modifier.isStatic (I)Z
    |               IFEQ L0
    |               ALOAD_3     // Ljava/lang/reflect/Method; method
    |               GOTO L1
    |           L0: ACONST_NULL
    catch java.lang.NoSuchMethodException -> E0
                L1: ARETURN
                E0: POP   (line 738)
                    ACONST_NULL   (line 739)
                    ARETURN
  end public static transient java.lang.reflect.Method getStaticMethod(Class, String, Class[])

  public static boolean isPrimitiveWrapper(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 751)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 752)
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEINTERFACE java.util.Map.containsKey (Ljava/lang/Object;)Z
                    IRETURN
  end public static boolean isPrimitiveWrapper(Class)

  public static boolean isPrimitiveOrWrapper(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 763)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 764)
                    INVOKEVIRTUAL java.lang.Class.isPrimitive ()Z
                    IFNE L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKESTATIC org.springframework.util.ClassUtils.isPrimitiveWrapper (Ljava/lang/Class;)Z
                    IFNE L0
                    ICONST_0
                    IRETURN
                L0: ICONST_1
                    IRETURN
  end public static boolean isPrimitiveOrWrapper(Class)

  public static boolean isPrimitiveArray(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 774)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 775)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getComponentType ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.isPrimitive ()Z
                    IFEQ L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean isPrimitiveArray(Class)

  public static boolean isPrimitiveWrapperArray(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 785)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 786)
                    INVOKEVIRTUAL java.lang.Class.isArray ()Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getComponentType ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.isPrimitiveWrapper (Ljava/lang/Class;)Z
                    IFEQ L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean isPrimitiveWrapperArray(Class)

  public static Class resolvePrimitiveIfNecessary(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 796)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 797)
                    INVOKEVIRTUAL java.lang.Class.isPrimitive ()Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    GETSTATIC java.lang.Void.TYPE Ljava/lang/Class;
                    IF_ACMPEQ L0
                    GETSTATIC org.springframework.util.ClassUtils.primitiveTypeToWrapperMap Ljava/util/Map;
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    GOTO L1
                L0: ALOAD_0     // Ljava/lang/Class; clazz
                L1: ARETURN
  end public static Class resolvePrimitiveIfNecessary(Class)

  public static boolean isAssignable(Class, Class):
                    ALOAD_0     // Ljava/lang/Class; lhsType   (line 810)
                    LDC_W "Left-hand side type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/Class; rhsType   (line 811)
                    LDC_W "Right-hand side type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; lhsType   (line 812)
                    ALOAD_1     // Ljava/lang/Class; rhsType
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFEQ L0
                    ICONST_1   (line 813)
                    IRETURN
                L0: ALOAD_0     // Ljava/lang/Class; lhsType   (line 815)
                    INVOKEVIRTUAL java.lang.Class.isPrimitive ()Z
                    IFEQ L1
                    GETSTATIC org.springframework.util.ClassUtils.primitiveWrapperTypeMap Ljava/util/Map;   (line 816)
                    ALOAD_1     // Ljava/lang/Class; rhsType
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Class; resolvedPrimitive   (line 817)
                    IFNULL L2
                    ALOAD_0     // Ljava/lang/Class; lhsType
                    ALOAD_2     // Ljava/lang/Class; resolvedPrimitive
                    INVOKEVIRTUAL java.lang.Object.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    ICONST_1   (line 818)
                    IRETURN
                L1: GETSTATIC org.springframework.util.ClassUtils.primitiveTypeToWrapperMap Ljava/util/Map;   (line 822)
                    ALOAD_1     // Ljava/lang/Class; rhsType
                    INVOKEINTERFACE java.util.Map.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Class; resolvedWrapper   (line 823)
                    IFNULL L2
                    ALOAD_0     // Ljava/lang/Class; lhsType
                    ALOAD_2     // Ljava/lang/Class; resolvedWrapper
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFEQ L2
                    ICONST_1   (line 824)
                    IRETURN
                L2: ICONST_0   (line 827)
                    IRETURN
  end public static boolean isAssignable(Class, Class)

  public static boolean isAssignableValue(Class, Object):
                    ALOAD_0     // Ljava/lang/Class; type   (line 839)
                    LDC_W "Type must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/Object; value   (line 840)
                    IFNULL L0
                    ALOAD_0     // Ljava/lang/Class; type
                    ALOAD_1     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.isAssignable (Ljava/lang/Class;Ljava/lang/Class;)Z
                    GOTO L2
                L0: ALOAD_0     // Ljava/lang/Class; type
                    INVOKEVIRTUAL java.lang.Class.isPrimitive ()Z
                    IFEQ L1
                    ICONST_0
                    GOTO L2
                L1: ICONST_1
                L2: IRETURN
  end public static boolean isAssignableValue(Class, Object)

  public static String convertResourcePathToClassName(String):
                    ALOAD_0     // Ljava/lang/String; resourcePath   (line 850)
                    LDC_W "Resource path must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; resourcePath   (line 851)
                    BIPUSH 47
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.replace (CC)Ljava/lang/String;
                    ARETURN
  end public static String convertResourcePathToClassName(String)

  public static String convertClassNameToResourcePath(String):
                    ALOAD_0     // Ljava/lang/String; className   (line 860)
                    LDC_W "Class name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/String; className   (line 861)
                    BIPUSH 46
                    BIPUSH 47
                    INVOKEVIRTUAL java.lang.String.replace (CC)Ljava/lang/String;
                    ARETURN
  end public static String convertClassNameToResourcePath(String)

  public static String addResourcePathToPackagePath(Class, String):
                    ALOAD_1     // Ljava/lang/String; resourceName   (line 881)
                    LDC_W "Resource name must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; resourceName   (line 882)
                    LDC_W "/"
                    INVOKEVIRTUAL java.lang.String.startsWith (Ljava/lang/String;)Z
                    IFNE L0
                    NEW java.lang.StringBuilder   (line 883)
                    DUP
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKESTATIC org.springframework.util.ClassUtils.classPackageAsResourcePath (Ljava/lang/Class;)Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    LDC_W "/"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    ALOAD_1     // Ljava/lang/String; resourceName
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
                L0: NEW java.lang.StringBuilder   (line 885)
                    DUP
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKESTATIC org.springframework.util.ClassUtils.classPackageAsResourcePath (Ljava/lang/Class;)Ljava/lang/String;
                    INVOKESTATIC java.lang.String.valueOf (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/String; resourceName
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public static String addResourcePathToPackagePath(Class, String)

  public static String classPackageAsResourcePath(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 903)
                    IFNONNULL L0
                    LDC_W ""   (line 904)
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/Class; clazz   (line 906)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; className   (line 907)
                    BIPUSH 46
                    INVOKEVIRTUAL java.lang.String.lastIndexOf (I)I
                    ISTORE_2
                    ILOAD_2     // I packageEndIndex   (line 908)
                    ICONST_M1
                    IF_ICMPNE L1
                    LDC_W ""   (line 909)
                    ARETURN
                L1: ALOAD_1     // Ljava/lang/String; className   (line 911)
                    ICONST_0
                    ILOAD_2     // I packageEndIndex
                    INVOKEVIRTUAL java.lang.String.substring (II)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; packageName   (line 912)
                    BIPUSH 46
                    BIPUSH 47
                    INVOKEVIRTUAL java.lang.String.replace (CC)Ljava/lang/String;
                    ARETURN
  end public static String classPackageAsResourcePath(Class)

  public static transient String classNamesToString(Class[]):
                    ALOAD_0     // [Ljava/lang/Class; classes   (line 925)
                    INVOKESTATIC java.util.Arrays.asList ([Ljava/lang/Object;)Ljava/util/List;
                    CHECKCAST java.util.Collection
                    INVOKESTATIC org.springframework.util.ClassUtils.classNamesToString (Ljava/util/Collection;)Ljava/lang/String;
                    ARETURN
  end public static transient String classNamesToString(Class[])

  public static String classNamesToString(java.util.Collection):
                    ALOAD_0     // Ljava/util/Collection; classes   (line 938)
                    INVOKESTATIC org.springframework.util.CollectionUtils.isEmpty (Ljava/util/Collection;)Z
                    IFEQ L0
                    LDC "[]"   (line 939)
                    ARETURN
                L0: NEW java.lang.StringBuilder   (line 941)
                    DUP
                    LDC "["
                    INVOKESPECIAL java.lang.StringBuilder.<init> (Ljava/lang/String;)V
                    ASTORE_1
                    ALOAD_0     // Ljava/util/Collection; classes   (line 942)
                    INVOKEINTERFACE java.util.Collection.iterator ()Ljava/util/Iterator;
                    ASTORE_2
                    GOTO L2
                L1: ALOAD_2     // Ljava/util/Iterator; it   (line 943)
                    INVOKEINTERFACE java.util.Iterator.next ()Ljava/lang/Object;
                    CHECKCAST java.lang.Class
                    ASTORE_3
                    ALOAD_1     // Ljava/lang/StringBuilder; sb   (line 944)
                    ALOAD_3     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                    ALOAD_2     // Ljava/util/Iterator; it   (line 945)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFEQ L2
                    ALOAD_1     // Ljava/lang/StringBuilder; sb   (line 946)
                    LDC_W ", "
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                L2: ALOAD_2     // Ljava/util/Iterator; it   (line 942)
                    INVOKEINTERFACE java.util.Iterator.hasNext ()Z
                    IFNE L1
                    ALOAD_1     // Ljava/lang/StringBuilder; sb   (line 949)
                    LDC_W "]"
                    INVOKEVIRTUAL java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
                    POP
                    ALOAD_1     // Ljava/lang/StringBuilder; sb   (line 950)
                    INVOKEVIRTUAL java.lang.StringBuilder.toString ()Ljava/lang/String;
                    ARETURN
  end public static String classNamesToString(java.util.Collection)

  public static Class[] getAllInterfaces(Object):
                    ALOAD_0     // Ljava/lang/Object; instance   (line 961)
                    LDC_W "Instance must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Object; instance   (line 962)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClass (Ljava/lang/Class;)[Ljava/lang/Class;
                    ARETURN
  end public static Class[] getAllInterfaces(Object)

  public static Class[] getAllInterfacesForClass(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 973)
                    ACONST_NULL
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClass (Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
                    ARETURN
  end public static Class[] getAllInterfacesForClass(Class)

  public static Class[] getAllInterfacesForClass(Class, ClassLoader):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 986)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClassAsSet (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;
                    ASTORE_2
                    ALOAD_2     // Ljava/util/Set; ifcs   (line 987)
                    ALOAD_2     // Ljava/util/Set; ifcs
                    INVOKEINTERFACE java.util.Set.size ()I
                    ANEWARRAY java.lang.Class
                    INVOKEINTERFACE java.util.Set.toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
                    CHECKCAST [Ljava.lang.Class;
                    ARETURN
  end public static Class[] getAllInterfacesForClass(Class, ClassLoader)

  public static java.util.Set getAllInterfacesAsSet(Object):
                    ALOAD_0     // Ljava/lang/Object; instance   (line 997)
                    LDC_W "Instance must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Object; instance   (line 998)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClassAsSet (Ljava/lang/Class;)Ljava/util/Set;
                    ARETURN
  end public static java.util.Set getAllInterfacesAsSet(Object)

  public static java.util.Set getAllInterfacesForClassAsSet(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 1009)
                    ACONST_NULL
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClassAsSet (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;
                    ARETURN
  end public static java.util.Set getAllInterfacesForClassAsSet(Class)

  public static java.util.Set getAllInterfacesForClassAsSet(Class, ClassLoader):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 1022)
                    LDC_W "Class must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 1023)
                    INVOKEVIRTUAL java.lang.Class.isInterface ()Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.isVisible (Ljava/lang/Class;Ljava/lang/ClassLoader;)Z
                    IFEQ L0
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 1024)
                    INVOKESTATIC java.util.Collections.singleton (Ljava/lang/Object;)Ljava/util/Set;
                    ARETURN
                L0: NEW java.util.LinkedHashSet   (line 1026)
                    DUP
                    INVOKESPECIAL java.util.LinkedHashSet.<init> ()V
                    ASTORE_2
                    GOTO L4   (line 1027)
                L1: ALOAD_0     // Ljava/lang/Class; clazz   (line 1028)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    ASTORE_3
                    ALOAD_3     // [Ljava/lang/Class; ifcs   (line 1029)
                    DUP
                    ASTORE 7
                    ARRAYLENGTH
                    ISTORE 6
                    ICONST_0
                    ISTORE 5
                    GOTO L3
                L2: ALOAD 7
                    ILOAD 5
                    AALOAD
                    ASTORE 4
                    ALOAD_2     // Ljava/util/Set; interfaces   (line 1030)
                    ALOAD 4     // Ljava/lang/Class; ifc
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.springframework.util.ClassUtils.getAllInterfacesForClassAsSet (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;
                    INVOKEINTERFACE java.util.Set.addAll (Ljava/util/Collection;)Z
                    POP
                    IINC 5 1   (line 1029)
                L3: ILOAD 5
                    ILOAD 6
                    IF_ICMPLT L2
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 1032)
                    INVOKEVIRTUAL java.lang.Class.getSuperclass ()Ljava/lang/Class;
                    ASTORE_0     // Ljava/lang/Class; clazz
                L4: ALOAD_0     // Ljava/lang/Class; clazz   (line 1027)
                    IFNONNULL L1
                    ALOAD_2     // Ljava/util/Set; interfaces   (line 1034)
                    ARETURN
  end public static java.util.Set getAllInterfacesForClassAsSet(Class, ClassLoader)

  public static Class createCompositeInterface(Class[], ClassLoader):
                    ALOAD_0     // [Ljava/lang/Class; interfaces   (line 1047)
                    LDC_W "Interfaces must not be empty"
                    INVOKESTATIC org.springframework.util.Assert.notEmpty ([Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1048)
                    LDC_W "ClassLoader must not be null"
                    INVOKESTATIC org.springframework.util.Assert.notNull (Ljava/lang/Object;Ljava/lang/String;)V
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1049)
                    ALOAD_0     // [Ljava/lang/Class; interfaces
                    INVOKESTATIC java.lang.reflect.Proxy.getProxyClass (Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;
                    ARETURN
  end public static Class createCompositeInterface(Class[], ClassLoader)

  public static boolean isVisible(Class, ClassLoader):
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1059)
                    IFNONNULL L0
                    ICONST_1   (line 1060)
                    IRETURN
    catch java.lang.ClassNotFoundException -> E0
    |           L0: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1063)
    |               ALOAD_0     // Ljava/lang/Class; clazz
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.ClassLoader.loadClass (Ljava/lang/String;)Ljava/lang/Class;
    |               ASTORE_2
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 1064)
    |               ALOAD_2     // Ljava/lang/Class; actualClass
    |               IF_ACMPNE L1
    |               ICONST_1
    |               IRETURN
    |           L1: ICONST_0
    catch java.lang.ClassNotFoundException -> E0
                    IRETURN
                E0: POP   (line 1067)
                    ICONST_0   (line 1069)
                    IRETURN
  end public static boolean isVisible(Class, ClassLoader)
end public abstract class org.springframework.util.ClassUtils
 -- (ClassFormatException) File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.lang.reflect.AnnotatedElement': Invalid byte tag in constant pool: 15
	at org.aspectj.apache.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:192)
	at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java:131)
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:323)
	at org.aspectj.weaver.bcel.BcelWorld.lookupJavaClass(BcelWorld.java:402)
	at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:376)
	at org.aspectj.weaver.ltw.LTWWorld.resolveDelegate(LTWWorld.java:111)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:467)
	at org.aspectj.weaver.World.resolve(World.java:308)
	at org.aspectj.weaver.World.resolve(World.java:218)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:97)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:41)
	at org.aspectj.weaver.bcel.BcelObjectType.ensureGenericSignatureUnpacked(BcelObjectType.java:810)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:257)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.core.io.DefaultResourceLoader.<init>(DefaultResourceLoader.java:53)
	at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:220)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:89)
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.<init>(AbstractRefreshableConfigApplicationContext.java:59)
	at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:61)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:136)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.LogFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.LogFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.LogFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.LogFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.LogFactory
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public abstract class org.apache.commons.logging.LogFactory extends java.lang.Object:
  public static final String PRIORITY_KEY = "priority"
  public static final String TCCL_KEY = "use_tccl"
  public static final String FACTORY_PROPERTY = "org.apache.commons.logging.LogFactory"
  public static final String FACTORY_DEFAULT = "org.apache.commons.logging.impl.LogFactoryImpl"
  public static final String FACTORY_PROPERTIES = "commons-logging.properties"
  protected static final String SERVICE_ID = "META-INF/services/org.apache.commons.logging.LogFactory"
  public static final String DIAGNOSTICS_DEST_PROPERTY = "org.apache.commons.logging.diagnostics.dest"
  private static java.io.PrintStream diagnosticsStream
  private static String diagnosticPrefix
  public static final String HASHTABLE_IMPLEMENTATION_PROPERTY = "org.apache.commons.logging.LogFactory.HashtableImpl"
  private static final String WEAK_HASHTABLE_CLASSNAME = "org.apache.commons.logging.impl.WeakHashtable"
  private static ClassLoader thisClassLoader
  protected static java.util.Hashtable factories
  protected static org.apache.commons.logging.LogFactory nullClassLoaderFactory
  static Class class$java$lang$Thread [Synthetic]
  static Class class$org$apache$commons$logging$LogFactory [Synthetic]
  protected void <init>():
                    ALOAD_0     // Lorg/apache/commons/logging/LogFactory; this   (line 214)
                    INVOKESPECIAL java.lang.Object.<init> ()V
    constructor-execution(void org.apache.commons.logging.LogFactory.<init>())
    |               RETURN   (line 215)
    constructor-execution(void org.apache.commons.logging.LogFactory.<init>())
  end protected void <init>()

  public abstract Object getAttribute(String);

  public abstract String[] getAttributeNames();

  public abstract org.apache.commons.logging.Log getInstance(Class) throws org.apache.commons.logging.LogConfigurationException;

  public abstract org.apache.commons.logging.Log getInstance(String) throws org.apache.commons.logging.LogConfigurationException;

  public abstract void release();

  public abstract void removeAttribute(String);

  public abstract void setAttribute(String, Object);

  private static final java.util.Hashtable createFactoryStore():
                    ACONST_NULL   (line 343)
                    ASTORE_0
    catch java.lang.SecurityException -> E0
    |               LDC "org.apache.commons.logging.LogFactory.HashtableImpl"   (line 346)
    |               ACONST_NULL
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE_1
    catch java.lang.SecurityException -> E0
                    GOTO L0   (line 351)
                E0: ASTORE_2   (line 347)
                    ACONST_NULL   (line 350)
                    ASTORE_1
                L0: ALOAD_1     // Ljava/lang/String; storeImplementationClass   (line 353)
                    IFNONNULL L1
                    LDC "org.apache.commons.logging.impl.WeakHashtable"   (line 354)
                    ASTORE_1     // Ljava/lang/String; storeImplementationClass
    catch java.lang.Throwable -> E1
    |           L1: ALOAD_1     // Ljava/lang/String; storeImplementationClass   (line 357)
    |               INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;
    |               ASTORE_2
    |               ALOAD_2     // Ljava/lang/Class; implementationClass   (line 358)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST java.util.Hashtable
    |               ASTORE_0     // Ljava/util/Hashtable; result
    catch java.lang.Throwable -> E1
                    GOTO L3   (line 373)
                E1: ASTORE_2   (line 360)
                    LDC "org.apache.commons.logging.impl.WeakHashtable"   (line 362)
                    ALOAD_1     // Ljava/lang/String; storeImplementationClass
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFNE L3
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 364)
                    IFEQ L2
                    LDC "[ERROR] LogFactory: Load of custom hashtable failed"   (line 366)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    GOTO L3
                L2: GETSTATIC java.lang.System.err Ljava/io/PrintStream;   (line 370)
                    LDC "[ERROR] LogFactory: Load of custom hashtable failed"
                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V
                L3: ALOAD_0     // Ljava/util/Hashtable; result   (line 374)
                    IFNONNULL L4
                    NEW java.util.Hashtable   (line 375)
                    DUP
                    INVOKESPECIAL java.util.Hashtable.<init> ()V
                    ASTORE_0     // Ljava/util/Hashtable; result
                L4: ALOAD_0     // Ljava/util/Hashtable; result   (line 377)
                    ARETURN
  end private static final java.util.Hashtable createFactoryStore()

  private static String trim(String):
                    ALOAD_0     // Ljava/lang/String; src   (line 385)
                    IFNONNULL L0
                    ACONST_NULL   (line 386)
                    ARETURN
                L0: ALOAD_0     // Ljava/lang/String; src   (line 388)
                    INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
                    ARETURN
  end private static String trim(String)

  public static org.apache.commons.logging.LogFactory getFactory() throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getContextClassLoaderInternal ()Ljava/lang/ClassLoader;   (line 423)
                    ASTORE_0
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 425)
                    IFNONNULL L0
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 429)
                    IFEQ L0
                    LDC "Context classloader is null."   (line 430)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 435)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getCachedFactory (Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
                    ASTORE_1
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 436)
                    IFNULL L1
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 437)
                    ARETURN
                L1: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 440)
                    IFEQ L2
                    NEW java.lang.StringBuffer   (line 441)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] LogFactory implementation requested for the first time for context classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    LDC "[LOOKUP] "   (line 444)
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logHierarchy (Ljava/lang/String;Ljava/lang/ClassLoader;)V
                L2: ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 457)
                    LDC "commons-logging.properties"
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getConfigurationFile (Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Properties;
                    ASTORE_2
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 461)
                    ASTORE_3
                    ALOAD_2     // Ljava/util/Properties; props   (line 462)
                    IFNULL L3
                    ALOAD_2     // Ljava/util/Properties; props   (line 463)
                    LDC "use_tccl"
                    INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/String; useTCCLStr   (line 464)
                    IFNULL L3
                    ALOAD 4     // Ljava/lang/String; useTCCLStr   (line 467)
                    INVOKESTATIC java.lang.Boolean.valueOf (Ljava/lang/String;)Ljava/lang/Boolean;
                    INVOKEVIRTUAL java.lang.Boolean.booleanValue ()Z
                    IFNE L3
                    GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;   (line 475)
                    ASTORE_3     // Ljava/lang/ClassLoader; baseClassLoader
                L3: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 482)
                    IFEQ L4
                    LDC "[LOOKUP] Looking for system property [org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use..."   (line 483)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.RuntimeException -> E1
    | catch java.lang.SecurityException -> E0
    | |         L4: LDC "org.apache.commons.logging.LogFactory"   (line 489)
    | |             ACONST_NULL
    | |             INVOKESTATIC org.apache.commons.logging.LogFactory.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    | |             ASTORE 4
    | |             ALOAD 4     // Ljava/lang/String; factoryClass   (line 490)
    | |             IFNULL L6
    | |             INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 491)
    | |             IFEQ L5
    | |             NEW java.lang.StringBuffer   (line 492)
    | |             DUP
    | |             INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | |             LDC "[LOOKUP] Creating an instance of LogFactory class '"
    | |             INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | |             ALOAD 4     // Ljava/lang/String; factoryClass
    | |             INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | |             LDC "' as specified by system property "
    | |             INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | |             LDC "org.apache.commons.logging.LogFactory"
    | |             INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | |             INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | |             INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | |         L5: ALOAD 4     // Ljava/lang/String; factoryClass   (line 497)
    | |             ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader
    | |             ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
    | |             INVOKESTATIC org.apache.commons.logging.LogFactory.newFactory (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
    | |             ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
    | |             GOTO L7
    | |         L6: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 499)
    | |             IFEQ L7
    | |             LDC "[LOOKUP] No system property [org.apache.commons.logging.LogFactory] defined."   (line 500)
    | |             INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | catch java.lang.SecurityException -> E0
    catch java.lang.RuntimeException -> E1
                L7: GOTO L10   (line 528)
                E0: ASTORE 4   (line 505)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 506)
                    IFEQ L8
                    NEW java.lang.StringBuffer   (line 507)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: ["
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 4     // Ljava/lang/SecurityException; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.trim (Ljava/lang/String;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "]. Trying alternative implementations..."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L8: GOTO L10   (line 528)
                E1: ASTORE 4   (line 514)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 520)
                    IFEQ L9
                    NEW java.lang.StringBuffer   (line 521)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] An exception occurred while trying to create an instance of the custom factory class: ["
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 4     // Ljava/lang/RuntimeException; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.trim (Ljava/lang/String;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "] as specified by a system property."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L9: ALOAD 4     // Ljava/lang/RuntimeException; e   (line 527)
                    ATHROW
               L10: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 537)
                    IFNONNULL L17
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 538)
                    IFEQ L11
                    LDC "[LOOKUP] Looking for a resource file of name [META-INF/services/org.apache.commons.logging.LogFactory] to define the LogFactory subclass to use..."   (line 539)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.Exception -> E3
    |          L11: ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 544)
    |               LDC "META-INF/services/org.apache.commons.logging.LogFactory"
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getResourceAsStream (Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;
    |               ASTORE 4
    |               ALOAD 4     // Ljava/io/InputStream; is   (line 547)
    |               IFNULL L15
    | catch java.io.UnsupportedEncodingException -> E2
    | |             NEW java.io.BufferedReader   (line 552)
    | |             DUP
    | |             NEW java.io.InputStreamReader
    | |             DUP
    | |             ALOAD 4     // Ljava/io/InputStream; is
    | |             LDC "UTF-8"
    | |             INVOKESPECIAL java.io.InputStreamReader.<init> (Ljava/io/InputStream;Ljava/lang/String;)V
    | |             INVOKESPECIAL java.io.BufferedReader.<init> (Ljava/io/Reader;)V
    | |             ASTORE 5
    | catch java.io.UnsupportedEncodingException -> E2
    |               GOTO L12   (line 555)
    |           E2: ASTORE 6   (line 553)
    |               NEW java.io.BufferedReader   (line 554)
    |               DUP
    |               NEW java.io.InputStreamReader
    |               DUP
    |               ALOAD 4     // Ljava/io/InputStream; is
    |               INVOKESPECIAL java.io.InputStreamReader.<init> (Ljava/io/InputStream;)V
    |               INVOKESPECIAL java.io.BufferedReader.<init> (Ljava/io/Reader;)V
    |               ASTORE 5
    |          L12: ALOAD 5     // Ljava/io/BufferedReader; rd   (line 557)
    |               INVOKEVIRTUAL java.io.BufferedReader.readLine ()Ljava/lang/String;
    |               ASTORE 6
    |               ALOAD 5     // Ljava/io/BufferedReader; rd   (line 558)
    |               INVOKEVIRTUAL java.io.BufferedReader.close ()V
    |               ALOAD 6     // Ljava/lang/String; factoryClassName   (line 560)
    |               IFNULL L14
    |               LDC ""
    |               ALOAD 6     // Ljava/lang/String; factoryClassName
    |               INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
    |               IFNE L14
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 562)
    |               IFEQ L13
    |               NEW java.lang.StringBuffer   (line 563)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[LOOKUP]  Creating an instance of LogFactory class "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 6     // Ljava/lang/String; factoryClassName
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " as specified by file '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "META-INF/services/org.apache.commons.logging.LogFactory"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "' which was present in the path of the context"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " classloader."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |          L13: ALOAD 6     // Ljava/lang/String; factoryClassName   (line 569)
    |               ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader
    |               ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.newFactory (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
    |               ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
    |          L14: GOTO L16
    |          L15: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 573)
    |               IFEQ L16
    |               LDC "[LOOKUP] No resource file with name 'META-INF/services/org.apache.commons.logging.LogFactory' found."   (line 574)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.Exception -> E3
               L16: GOTO L17   (line 591)
                E3: ASTORE 4   (line 579)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 583)
                    IFEQ L17
                    NEW java.lang.StringBuffer   (line 584)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] A security exception occurred while trying to create an instance of the custom factory class: ["
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 4     // Ljava/lang/Exception; ex
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.trim (Ljava/lang/String;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "]. Trying alternative implementations..."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L17: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 597)
                    IFNONNULL L23
                    ALOAD_2     // Ljava/util/Properties; props   (line 598)
                    IFNULL L22
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 599)
                    IFEQ L18
                    LDC "[LOOKUP] Looking in properties file for entry with key 'org.apache.commons.logging.LogFactory' to define the LogFactory subclass to use..."   (line 600)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L18: ALOAD_2     // Ljava/util/Properties; props   (line 605)
                    LDC "org.apache.commons.logging.LogFactory"
                    INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/String; factoryClass   (line 606)
                    IFNULL L20
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 607)
                    IFEQ L19
                    NEW java.lang.StringBuffer   (line 608)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] Properties file specifies LogFactory subclass '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 4     // Ljava/lang/String; factoryClass
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L19: ALOAD 4     // Ljava/lang/String; factoryClass   (line 612)
                    ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.newFactory (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
                    ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
                    GOTO L21
               L20: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 616)
                    IFEQ L21
                    LDC "[LOOKUP] Properties file has no entry specifying LogFactory subclass."   (line 617)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L21: GOTO L23
               L22: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 622)
                    IFEQ L23
                    LDC "[LOOKUP] No properties file available to determine LogFactory subclass from.."   (line 623)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L23: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 633)
                    IFNONNULL L25
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 634)
                    IFEQ L24
                    LDC "[LOOKUP] Loading the default LogFactory implementation 'org.apache.commons.logging.impl.LogFactoryImpl' via the same classloader that loaded this LogFactory class (ie not looking in the context classloader)."   (line 635)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L24: LDC "org.apache.commons.logging.impl.LogFactoryImpl"   (line 650)
                    GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.newFactory (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
                    ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
               L25: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 653)
                    IFNULL L27
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 657)
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory
                    INVOKESTATIC org.apache.commons.logging.LogFactory.cacheFactory (Ljava/lang/ClassLoader;Lorg/apache/commons/logging/LogFactory;)V
                    ALOAD_2     // Ljava/util/Properties; props   (line 659)
                    IFNULL L27
                    ALOAD_2     // Ljava/util/Properties; props   (line 660)
                    INVOKEVIRTUAL java.util.Properties.propertyNames ()Ljava/util/Enumeration;
                    ASTORE 4
               L26: ALOAD 4     // Ljava/util/Enumeration; names   (line 661)
                    INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
                    IFEQ L27
                    ALOAD 4     // Ljava/util/Enumeration; names   (line 662)
                    INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ASTORE 5
                    ALOAD_2     // Ljava/util/Properties; props   (line 663)
                    ALOAD 5     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
                    ASTORE 6
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 664)
                    ALOAD 5     // Ljava/lang/String; name
                    ALOAD 6     // Ljava/lang/String; value
                    INVOKEVIRTUAL org.apache.commons.logging.LogFactory.setAttribute (Ljava/lang/String;Ljava/lang/Object;)V
                    GOTO L26
               L27: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 669)
                    ARETURN
  end public static org.apache.commons.logging.LogFactory getFactory() throws org.apache.commons.logging.LogConfigurationException

  public static org.apache.commons.logging.Log getLog(Class) throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getFactory ()Lorg/apache/commons/logging/LogFactory;   (line 685)
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL org.apache.commons.logging.LogFactory.getInstance (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
                    ARETURN
  end public static org.apache.commons.logging.Log getLog(Class) throws org.apache.commons.logging.LogConfigurationException

  public static org.apache.commons.logging.Log getLog(String) throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getFactory ()Lorg/apache/commons/logging/LogFactory;   (line 704)
                    ALOAD_0     // Ljava/lang/String; name
                    INVOKEVIRTUAL org.apache.commons.logging.LogFactory.getInstance (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
                    ARETURN
  end public static org.apache.commons.logging.Log getLog(String) throws org.apache.commons.logging.LogConfigurationException

  public static void release(ClassLoader):
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 719)
                    IFEQ L0
                    NEW java.lang.StringBuffer   (line 720)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Releasing factory for classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L0: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 722)
                    DUP
                    ASTORE_1
                    MONITORENTER
    finally -> E1
    |               ALOAD_0     // Ljava/lang/ClassLoader; classLoader   (line 723)
    |               IFNONNULL L1
    |               GETSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;   (line 724)
    |               IFNULL L2
    |               GETSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;   (line 725)
    |               INVOKEVIRTUAL org.apache.commons.logging.LogFactory.release ()V
    |               ACONST_NULL   (line 726)
    |               PUTSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;
    |               GOTO L2
    |           L1: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 729)
    |               ALOAD_0     // Ljava/lang/ClassLoader; classLoader
    |               INVOKEVIRTUAL java.util.Hashtable.get (Ljava/lang/Object;)Ljava/lang/Object;
    |               CHECKCAST org.apache.commons.logging.LogFactory
    |               ASTORE_2
    |               ALOAD_2     // Lorg/apache/commons/logging/LogFactory; factory   (line 730)
    |               IFNULL L2
    |               ALOAD_2     // Lorg/apache/commons/logging/LogFactory; factory   (line 731)
    |               INVOKEVIRTUAL org.apache.commons.logging.LogFactory.release ()V
    |               GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 732)
    |               ALOAD_0     // Ljava/lang/ClassLoader; classLoader
    |               INVOKEVIRTUAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
    |               POP
    |           L2: ALOAD_1   (line 735)
    |               MONITOREXIT
    finally -> E1
                    GOTO L3
    finally -> E1
    |           E1: ASTORE_3
    |               ALOAD_1
    |               MONITOREXIT
    finally -> E1
                    ALOAD_3
                    ATHROW
                L3: RETURN   (line 737)
  end public static void release(ClassLoader)

  public static void releaseAll():
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 750)
                    IFEQ L0
                    LDC "Releasing factory for all classloaders."   (line 751)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L0: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 753)
                    DUP
                    ASTORE_0
                    MONITORENTER
    finally -> E1
    |               GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 754)
    |               INVOKEVIRTUAL java.util.Hashtable.elements ()Ljava/util/Enumeration;
    |               ASTORE_1
    |           L1: ALOAD_1     // Ljava/util/Enumeration; elements   (line 755)
    |               INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
    |               IFEQ L2
    |               ALOAD_1     // Ljava/util/Enumeration; elements   (line 756)
    |               INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
    |               CHECKCAST org.apache.commons.logging.LogFactory
    |               ASTORE_2
    |               ALOAD_2     // Lorg/apache/commons/logging/LogFactory; element   (line 757)
    |               INVOKEVIRTUAL org.apache.commons.logging.LogFactory.release ()V
    |               GOTO L1
    |           L2: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 759)
    |               INVOKEVIRTUAL java.util.Hashtable.clear ()V
    |               GETSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;   (line 761)
    |               IFNULL L3
    |               GETSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;   (line 762)
    |               INVOKEVIRTUAL org.apache.commons.logging.LogFactory.release ()V
    |               ACONST_NULL   (line 763)
    |               PUTSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;
    |           L3: ALOAD_0   (line 765)
    |               MONITOREXIT
    finally -> E1
                    GOTO L4
    finally -> E1
    |           E1: ASTORE_3
    |               ALOAD_0
    |               MONITOREXIT
    finally -> E1
                    ALOAD_3
                    ATHROW
                L4: RETURN   (line 767)
  end public static void releaseAll()

  protected static ClassLoader getClassLoader(Class):
    catch java.lang.SecurityException -> E0
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 801)
    |               INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
    catch java.lang.SecurityException -> E0
                    ARETURN
                E0: ASTORE_1   (line 802)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 803)
                    IFEQ L0
                    NEW java.lang.StringBuffer   (line 804)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Unable to get classloader for class '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_0     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
                    LDC "' due to security restrictions - "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/SecurityException; ex
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_1     // Ljava/lang/SecurityException; ex   (line 808)
                    ATHROW
  end protected static ClassLoader getClassLoader(Class)

  protected static ClassLoader getContextClassLoader() throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.directGetContextClassLoader ()Ljava/lang/ClassLoader;   (line 836)
                    ARETURN
  end protected static ClassLoader getContextClassLoader() throws org.apache.commons.logging.LogConfigurationException

  private static ClassLoader getContextClassLoaderInternal() throws org.apache.commons.logging.LogConfigurationException:
                    NEW org.apache.commons.logging.LogFactory$1   (line 859)
                    DUP
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$1.<init> ()V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.lang.ClassLoader
                    ARETURN
  end private static ClassLoader getContextClassLoaderInternal() throws org.apache.commons.logging.LogConfigurationException

  protected static ClassLoader directGetContextClassLoader() throws org.apache.commons.logging.LogConfigurationException:
                    ACONST_NULL   (line 892)
                    ASTORE_0
    catch java.lang.NoSuchMethodException -> E2
    |               GETSTATIC org.apache.commons.logging.LogFactory.class$java$lang$Thread Ljava/lang/Class;   (line 896)
    |               IFNONNULL L0
    |               LDC "java.lang.Thread"
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
    |               DUP
    |               PUTSTATIC org.apache.commons.logging.LogFactory.class$java$lang$Thread Ljava/lang/Class;
    |               GOTO L1
    |           L0: GETSTATIC org.apache.commons.logging.LogFactory.class$java$lang$Thread Ljava/lang/Class;
    |           L1: LDC "getContextClassLoader"
    |               ACONST_NULL
    |               CHECKCAST [Ljava.lang.Class;
    |               INVOKEVIRTUAL java.lang.Class.getMethod (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    |               ASTORE_1
    | catch java.lang.reflect.InvocationTargetException -> E1
    | | catch java.lang.IllegalAccessException -> E0
    | | |           ALOAD_1     // Ljava/lang/reflect/Method; method   (line 901)
    | | |           INVOKESTATIC java.lang.Thread.currentThread ()Ljava/lang/Thread;
    | | |           ACONST_NULL
    | | |           CHECKCAST [Ljava.lang.Object;
    | | |           INVOKEVIRTUAL java.lang.reflect.Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    | | |           CHECKCAST java.lang.ClassLoader
    | | |           ASTORE_0     // Ljava/lang/ClassLoader; classLoader
    | | catch java.lang.IllegalAccessException -> E0
    | catch java.lang.reflect.InvocationTargetException -> E1
    |               GOTO L3   (line 931)
    |           E0: ASTORE_2   (line 903)
    |               NEW org.apache.commons.logging.LogConfigurationException   (line 904)
    |               DUP
    |               LDC "Unexpected IllegalAccessException"
    |               ALOAD_2     // Ljava/lang/IllegalAccessException; e
    |               INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
    |               ATHROW
    |           E1: ASTORE_2   (line 906)
    |               ALOAD_2     // Ljava/lang/reflect/InvocationTargetException; e   (line 923)
    |               INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
    |               INSTANCEOF java.lang.SecurityException
    |               IFEQ L2
    |               GOTO L3   (line 924)
    |           L2: NEW org.apache.commons.logging.LogConfigurationException   (line 928)
    |               DUP
    |               LDC "Unexpected InvocationTargetException"
    |               ALOAD_2     // Ljava/lang/reflect/InvocationTargetException; e
    |               INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
    |               INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
    |               ATHROW
    catch java.lang.NoSuchMethodException -> E2
                L3: GOTO L6   (line 948)
                E2: ASTORE_1   (line 932)
                    GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;   (line 934)
                    IFNONNULL L4
                    LDC "org.apache.commons.logging.LogFactory"
                    INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                    GOTO L5
                L4: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                L5: INVOKESTATIC org.apache.commons.logging.LogFactory.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
                    ASTORE_0     // Ljava/lang/ClassLoader; classLoader
                L6: ALOAD_0     // Ljava/lang/ClassLoader; classLoader   (line 951)
                    ARETURN
  end protected static ClassLoader directGetContextClassLoader() throws org.apache.commons.logging.LogConfigurationException

  private static org.apache.commons.logging.LogFactory getCachedFactory(ClassLoader):
                    ACONST_NULL   (line 970)
                    ASTORE_1
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader   (line 972)
                    IFNONNULL L0
                    GETSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;   (line 977)
                    ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
                    GOTO L1
                L0: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 979)
                    ALOAD_0     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKEVIRTUAL java.util.Hashtable.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST org.apache.commons.logging.LogFactory
                    ASTORE_1     // Lorg/apache/commons/logging/LogFactory; factory
                L1: ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 982)
                    ARETURN
  end private static org.apache.commons.logging.LogFactory getCachedFactory(ClassLoader)

  private static void cacheFactory(ClassLoader, org.apache.commons.logging.LogFactory):
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 1000)
                    IFNULL L1
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoader   (line 1001)
                    IFNONNULL L0
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory   (line 1002)
                    PUTSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;
                    GOTO L1
                L0: GETSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;   (line 1004)
                    ALOAD_0     // Ljava/lang/ClassLoader; classLoader
                    ALOAD_1     // Lorg/apache/commons/logging/LogFactory; factory
                    INVOKEVIRTUAL java.util.Hashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                L1: RETURN   (line 1007)
  end private static void cacheFactory(ClassLoader, org.apache.commons.logging.LogFactory)

  protected static org.apache.commons.logging.LogFactory newFactory(String, ClassLoader, ClassLoader) throws org.apache.commons.logging.LogConfigurationException:
                    NEW org.apache.commons.logging.LogFactory$2   (line 1062)
                    DUP
                    ALOAD_0     // Ljava/lang/String; factoryClass
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$2.<init> (Ljava/lang/String;Ljava/lang/ClassLoader;)V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/Object; result   (line 1069)
                    INSTANCEOF org.apache.commons.logging.LogConfigurationException
                    IFEQ L1
                    ALOAD_3     // Ljava/lang/Object; result   (line 1070)
                    CHECKCAST org.apache.commons.logging.LogConfigurationException
                    ASTORE 4
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1071)
                    IFEQ L0
                    NEW java.lang.StringBuffer   (line 1072)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "An error occurred while loading the factory class:"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 4     // Lorg/apache/commons/logging/LogConfigurationException; ex
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD 4     // Lorg/apache/commons/logging/LogConfigurationException; ex   (line 1076)
                    ATHROW
                L1: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1078)
                    IFEQ L2
                    NEW java.lang.StringBuffer   (line 1079)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Created object "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/Object; result
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " to manage classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/ClassLoader; contextClassLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L2: ALOAD_3     // Ljava/lang/Object; result   (line 1083)
                    CHECKCAST org.apache.commons.logging.LogFactory
                    ARETURN
  end protected static org.apache.commons.logging.LogFactory newFactory(String, ClassLoader, ClassLoader) throws org.apache.commons.logging.LogConfigurationException

  protected static org.apache.commons.logging.LogFactory newFactory(String, ClassLoader):
                    ALOAD_0     // Ljava/lang/String; factoryClass   (line 1103)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    ACONST_NULL
                    INVOKESTATIC org.apache.commons.logging.LogFactory.newFactory (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Lorg/apache/commons/logging/LogFactory;
                    ARETURN
  end protected static org.apache.commons.logging.LogFactory newFactory(String, ClassLoader)

  protected static Object createFactory(String, ClassLoader):
                    ACONST_NULL   (line 1123)
                    ASTORE_2
    catch java.lang.Exception -> E4
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1125)
    |               IFNULL L15
    | catch java.lang.ClassCastException -> E2
    | | catch java.lang.NoClassDefFoundError -> E1
    | | | catch java.lang.ClassNotFoundException -> E0
    | | | |         ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1131)
    | | | |         ALOAD_0     // Ljava/lang/String; factoryClass
    | | | |         INVOKEVIRTUAL java.lang.ClassLoader.loadClass (Ljava/lang/String;)Ljava/lang/Class;
    | | | |         ASTORE_2     // Ljava/lang/Class; logFactoryClass
    | | | |         GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;   (line 1132)
    | | | |         IFNONNULL L0
    | | | |         LDC "org.apache.commons.logging.LogFactory"
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
    | | | |         DUP
    | | | |         PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    | | | |         GOTO L1
    | | | |     L0: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    | | | |     L1: ALOAD_2     // Ljava/lang/Class; logFactoryClass
    | | | |         INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
    | | | |         IFEQ L2
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1133)
    | | | |         IFEQ L5
    | | | |         NEW java.lang.StringBuffer   (line 1134)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "Loaded class "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_2     // Ljava/lang/Class; logFactoryClass
    | | | |         INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC " from classloader "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | | | |         GOTO L5
    | | | |     L2: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1150)
    | | | |         IFEQ L5
    | | | |         NEW java.lang.StringBuffer   (line 1151)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "Factory class "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_2     // Ljava/lang/Class; logFactoryClass
    | | | |         INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC " loaded from classloader "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_2     // Ljava/lang/Class; logFactoryClass
    | | | |         INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC " does not extend '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    | | | |         IFNONNULL L3
    | | | |         LDC "org.apache.commons.logging.LogFactory"
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
    | | | |         DUP
    | | | |         PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    | | | |         GOTO L4
    | | | |     L3: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    | | | |     L4: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "' as loaded by this classloader."
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | | | |         LDC "[BAD CL TREE] "   (line 1156)
    | | | |         ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.logHierarchy (Ljava/lang/String;Ljava/lang/ClassLoader;)V
    | | | |     L5: ALOAD_2     // Ljava/lang/Class; logFactoryClass   (line 1160)
    | | | |         INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    | | | |         CHECKCAST org.apache.commons.logging.LogFactory
    | | | catch java.lang.ClassNotFoundException -> E0
    | | catch java.lang.NoClassDefFoundError -> E1
    | catch java.lang.ClassCastException -> E2
    catch java.lang.Exception -> E4
                    ARETURN
    catch java.lang.Exception -> E4
    |           E0: ASTORE_3   (line 1162)
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1163)
    |               GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;
    |               IF_ACMPNE L7
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1165)
    |               IFEQ L6
    |               NEW java.lang.StringBuffer   (line 1166)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Unable to locate any class called '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_0     // Ljava/lang/String; factoryClass
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "' via classloader "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |           L6: ALOAD_3     // Ljava/lang/ClassNotFoundException; ex   (line 1170)
    |               ATHROW
    |           L7: GOTO L15   (line 1236)
    |           E1: ASTORE_3   (line 1173)
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1174)
    |               GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;
    |               IF_ACMPNE L9
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1176)
    |               IFEQ L8
    |               NEW java.lang.StringBuffer   (line 1177)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Class '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_0     // Ljava/lang/String; factoryClass
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "' cannot be loaded"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " via classloader "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " - it depends on some other class that cannot"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " be found."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |           L8: ALOAD_3     // Ljava/lang/NoClassDefFoundError; e   (line 1183)
    |               ATHROW
    |           L9: GOTO L15   (line 1236)
    |           E2: ASTORE_3   (line 1186)
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1187)
    |               GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;
    |               IF_ACMPNE L15
    |               ALOAD_2     // Ljava/lang/Class; logFactoryClass   (line 1193)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.implementsLogFactory (Ljava/lang/Class;)Z
    |               ISTORE 4
    |               NEW java.lang.StringBuffer   (line 1200)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "The application has specified that a custom LogFactory implementation should be used but Class '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_0     // Ljava/lang/String; factoryClass
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "' cannot be converted to '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |               IFNONNULL L10
    |               LDC "org.apache.commons.logging.LogFactory"
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
    |               DUP
    |               PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |               GOTO L11
    |          L10: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |          L11: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "'. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               ASTORE 5
    |               ILOAD 4     // Z implementsLogFactory   (line 1204)
    |               IFEQ L12
    |               NEW java.lang.StringBuffer   (line 1205)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               ALOAD 5     // Ljava/lang/String; msg
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "The conflict is caused by the presence of multiple LogFactory classes in incompatible classloaders. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "Background can be found in http://commons.apache.org/logging/tech.html. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "If you have not explicitly specified a custom LogFactory then it is likely that "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "the container has set one without your knowledge. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "In this case, consider using the commons-logging-adapters.jar file or "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "specifying the standard LogFactory from the command line. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               ASTORE 5     // Ljava/lang/String; msg
    |               GOTO L13
    |          L12: NEW java.lang.StringBuffer   (line 1212)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               ALOAD 5     // Ljava/lang/String; msg
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "Please check the custom implementation. "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               ASTORE 5     // Ljava/lang/String; msg
    |          L13: NEW java.lang.StringBuffer   (line 1214)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               ALOAD 5     // Ljava/lang/String; msg
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "Help can be found @http://commons.apache.org/logging/troubleshooting.html."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               ASTORE 5     // Ljava/lang/String; msg
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1216)
    |               IFEQ L14
    |               ALOAD 5     // Ljava/lang/String; msg   (line 1217)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |          L14: NEW java.lang.ClassCastException   (line 1220)
    |               DUP
    |               ALOAD 5     // Ljava/lang/String; msg
    |               INVOKESPECIAL java.lang.ClassCastException.<init> (Ljava/lang/String;)V
    |               ASTORE 6
    |               ALOAD 6     // Ljava/lang/ClassCastException; ex   (line 1221)
    |               ATHROW
    |          L15: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1255)
    |               IFEQ L16
    |               NEW java.lang.StringBuffer   (line 1256)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Unable to load factory class via classloader "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/ClassLoader; classLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " - trying the classloader associated with this LogFactory."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |          L16: ALOAD_0     // Ljava/lang/String; factoryClass   (line 1261)
    |               INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;
    |               ASTORE_2     // Ljava/lang/Class; logFactoryClass
    |               ALOAD_2     // Ljava/lang/Class; logFactoryClass   (line 1262)
    |               INVOKEVIRTUAL java.lang.Class.newInstance ()Ljava/lang/Object;
    |               CHECKCAST org.apache.commons.logging.LogFactory
    catch java.lang.Exception -> E4
                    ARETURN
                E4: ASTORE_3   (line 1263)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1265)
                    IFEQ L17
                    LDC "Unable to create LogFactory instance."   (line 1266)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L17: ALOAD_2     // Ljava/lang/Class; logFactoryClass   (line 1268)
                    IFNULL L20
                    GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                    IFNONNULL L18
                    LDC "org.apache.commons.logging.LogFactory"
                    INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                    GOTO L19
               L18: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
               L19: ALOAD_2     // Ljava/lang/Class; logFactoryClass
                    INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
                    IFNE L20
                    NEW org.apache.commons.logging.LogConfigurationException   (line 1271)
                    DUP
                    LDC "The chosen LogFactory implementation does not extend LogFactory. Please check your configuration."
                    ALOAD_3     // Ljava/lang/Exception; e
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;Ljava/lang/Throwable;)V
                    ARETURN
               L20: NEW org.apache.commons.logging.LogConfigurationException   (line 1276)
                    DUP
                    ALOAD_3     // Ljava/lang/Exception; e
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/Throwable;)V
                    ARETURN
  end protected static Object createFactory(String, ClassLoader)

  private static boolean implementsLogFactory(Class):
                    ICONST_0   (line 1293)
                    ISTORE_1
                    ALOAD_0     // Ljava/lang/Class; logFactoryClass   (line 1294)
                    IFNULL L3
    catch java.lang.ClassNotFoundException -> E2
    | catch java.lang.LinkageError -> E1
    | | catch java.lang.SecurityException -> E0
    | | |           ALOAD_0     // Ljava/lang/Class; logFactoryClass   (line 1296)
    | | |           INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
    | | |           ASTORE_2
    | | |           ALOAD_2     // Ljava/lang/ClassLoader; logFactoryClassLoader   (line 1297)
    | | |           IFNONNULL L0
    | | |           LDC "[CUSTOM LOG FACTORY] was loaded by the boot classloader"   (line 1298)
    | | |           INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | | |           GOTO L2
    | | |       L0: LDC "[CUSTOM LOG FACTORY] "   (line 1300)
    | | |           ALOAD_2     // Ljava/lang/ClassLoader; logFactoryClassLoader
    | | |           INVOKESTATIC org.apache.commons.logging.LogFactory.logHierarchy (Ljava/lang/String;Ljava/lang/ClassLoader;)V
    | | |           LDC "org.apache.commons.logging.LogFactory"   (line 1301)
    | | |           ICONST_0
    | | |           ALOAD_2     // Ljava/lang/ClassLoader; logFactoryClassLoader
    | | |           INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
    | | |           ASTORE_3
    | | |           ALOAD_3     // Ljava/lang/Class; factoryFromCustomLoader   (line 1303)
    | | |           ALOAD_0     // Ljava/lang/Class; logFactoryClass
    | | |           INVOKEVIRTUAL java.lang.Class.isAssignableFrom (Ljava/lang/Class;)Z
    | | |           ISTORE_1     // Z implementsLogFactory
    | | |           ILOAD_1     // Z implementsLogFactory   (line 1304)
    | | |           IFEQ L1
    | | |           NEW java.lang.StringBuffer   (line 1305)
    | | |           DUP
    | | |           INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | |           LDC "[CUSTOM LOG FACTORY] "
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           ALOAD_0     // Ljava/lang/Class; logFactoryClass
    | | |           INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           LDC " implements LogFactory but was loaded by an incompatible classloader."
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | |           INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | | |           GOTO L2
    | | |       L1: NEW java.lang.StringBuffer   (line 1308)
    | | |           DUP
    | | |           INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | |           LDC "[CUSTOM LOG FACTORY] "
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           ALOAD_0     // Ljava/lang/Class; logFactoryClass
    | | |           INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           LDC " does not implement LogFactory."
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | |           INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | |           INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    | | catch java.lang.SecurityException -> E0
    | catch java.lang.LinkageError -> E1
    catch java.lang.ClassNotFoundException -> E2
                L2: GOTO L3   (line 1341)
                E0: ASTORE_2   (line 1312)
                    NEW java.lang.StringBuffer   (line 1318)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[CUSTOM LOG FACTORY] SecurityException thrown whilst trying to determine whether the compatibility was caused by a classloader conflict: "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/SecurityException; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    GOTO L3   (line 1341)
                E1: ASTORE_2   (line 1321)
                    NEW java.lang.StringBuffer   (line 1328)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[CUSTOM LOG FACTORY] LinkageError thrown whilst trying to determine whether the compatibility was caused by a classloader conflict: "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/LinkageError; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    GOTO L3   (line 1341)
                E2: ASTORE_2   (line 1331)
                    LDC "[CUSTOM LOG FACTORY] LogFactory class cannot be loaded by classloader which loaded the custom LogFactory implementation. Is the custom factory in the right classloader?"   (line 1339)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L3: ILOAD_1     // Z implementsLogFactory   (line 1343)
                    IRETURN
  end private static boolean implementsLogFactory(Class)

  private static java.io.InputStream getResourceAsStream(ClassLoader, String):
                    NEW org.apache.commons.logging.LogFactory$3   (line 1355)
                    DUP
                    ALOAD_0     // Ljava/lang/ClassLoader; loader
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$3.<init> (Ljava/lang/ClassLoader;Ljava/lang/String;)V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.io.InputStream
                    ARETURN
  end private static java.io.InputStream getResourceAsStream(ClassLoader, String)

  private static java.util.Enumeration getResources(ClassLoader, String):
                    NEW org.apache.commons.logging.LogFactory$4   (line 1383)
                    DUP
                    ALOAD_0     // Ljava/lang/ClassLoader; loader
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$4.<init> (Ljava/lang/ClassLoader;Ljava/lang/String;)V
                    ASTORE_2
                    ALOAD_2     // Ljava/security/PrivilegedAction; action   (line 1407)
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/Object; result   (line 1408)
                    CHECKCAST java.util.Enumeration
                    ARETURN
  end private static java.util.Enumeration getResources(ClassLoader, String)

  private static java.util.Properties getProperties(java.net.URL):
                    NEW org.apache.commons.logging.LogFactory$5   (line 1420)
                    DUP
                    ALOAD_0     // Ljava/net/URL; url
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$5.<init> (Ljava/net/URL;)V
                    ASTORE_1
                    ALOAD_1     // Ljava/security/PrivilegedAction; action   (line 1440)
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.util.Properties
                    ARETURN
  end private static java.util.Properties getProperties(java.net.URL)

  private static final java.util.Properties getConfigurationFile(ClassLoader, String):
                    ACONST_NULL   (line 1465)
                    ASTORE_2
                    DCONST_0   (line 1466)
                    DSTORE_3
                    ACONST_NULL   (line 1467)
                    ASTORE 5
    catch java.lang.SecurityException -> E1
    |               ALOAD_0     // Ljava/lang/ClassLoader; classLoader   (line 1469)
    |               ALOAD_1     // Ljava/lang/String; fileName
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getResources (Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Enumeration;
    |               ASTORE 6
    |               ALOAD 6     // Ljava/util/Enumeration; urls   (line 1471)
    |               IFNONNULL L0
    |               ACONST_NULL   (line 1472)
    catch java.lang.SecurityException -> E1
                    ARETURN
    catch java.lang.SecurityException -> E1
    |           L0: ALOAD 6     // Ljava/util/Enumeration; urls   (line 1475)
    |               INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
    |               IFEQ L8
    |               ALOAD 6     // Ljava/util/Enumeration; urls   (line 1476)
    |               INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
    |               CHECKCAST java.net.URL
    |               ASTORE 7
    |               ALOAD 7     // Ljava/net/URL; url   (line 1478)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getProperties (Ljava/net/URL;)Ljava/util/Properties;
    |               ASTORE 8
    |               ALOAD 8     // Ljava/util/Properties; newProps   (line 1479)
    |               IFNULL L7
    |               ALOAD_2     // Ljava/util/Properties; props   (line 1480)
    |               IFNONNULL L3
    |               ALOAD 7     // Ljava/net/URL; url   (line 1481)
    |               ASTORE 5     // Ljava/net/URL; propsUrl
    |               ALOAD 8     // Ljava/util/Properties; newProps   (line 1482)
    |               ASTORE_2     // Ljava/util/Properties; props
    |               ALOAD_2     // Ljava/util/Properties; props   (line 1483)
    |               LDC "priority"
    |               INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE 9
    |               DCONST_0   (line 1484)
    |               DSTORE_3     // D priority
    |               ALOAD 9     // Ljava/lang/String; priorityStr   (line 1485)
    |               IFNULL L1
    |               ALOAD 9     // Ljava/lang/String; priorityStr   (line 1486)
    |               INVOKESTATIC java.lang.Double.parseDouble (Ljava/lang/String;)D
    |               DSTORE_3     // D priority
    |           L1: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1489)
    |               IFEQ L2
    |               NEW java.lang.StringBuffer   (line 1490)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[LOOKUP] Properties file found at '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 7     // Ljava/net/URL; url
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " with priority "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               DLOAD_3     // D priority
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (D)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |           L2: GOTO L7
    |           L3: ALOAD 8     // Ljava/util/Properties; newProps   (line 1495)
    |               LDC "priority"
    |               INVOKEVIRTUAL java.util.Properties.getProperty (Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE 9
    |               DCONST_0   (line 1496)
    |               DSTORE 10
    |               ALOAD 9     // Ljava/lang/String; newPriorityStr   (line 1497)
    |               IFNULL L4
    |               ALOAD 9     // Ljava/lang/String; newPriorityStr   (line 1498)
    |               INVOKESTATIC java.lang.Double.parseDouble (Ljava/lang/String;)D
    |               DSTORE 10     // D newPriority
    |           L4: DLOAD 10     // D newPriority   (line 1501)
    |               DLOAD_3     // D priority
    |               DCMPL
    |               IFLE L6
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1502)
    |               IFEQ L5
    |               NEW java.lang.StringBuffer   (line 1503)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[LOOKUP] Properties file at '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 7     // Ljava/net/URL; url
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " with priority "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               DLOAD 10     // D newPriority
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (D)Ljava/lang/StringBuffer;
    |               LDC " overrides file at '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 5     // Ljava/net/URL; propsUrl
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " with priority "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               DLOAD_3     // D priority
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (D)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |           L5: ALOAD 7     // Ljava/net/URL; url   (line 1510)
    |               ASTORE 5     // Ljava/net/URL; propsUrl
    |               ALOAD 8     // Ljava/util/Properties; newProps   (line 1511)
    |               ASTORE_2     // Ljava/util/Properties; props
    |               DLOAD 10     // D newPriority   (line 1512)
    |               DSTORE_3     // D priority
    |               GOTO L7
    |           L6: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1514)
    |               IFEQ L7
    |               NEW java.lang.StringBuffer   (line 1515)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[LOOKUP] Properties file at '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 7     // Ljava/net/URL; url
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " with priority "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               DLOAD 10     // D newPriority
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (D)Ljava/lang/StringBuffer;
    |               LDC " does not override file at '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 5     // Ljava/net/URL; propsUrl
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " with priority "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               DLOAD_3     // D priority
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (D)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |           L7: GOTO L0
    catch java.lang.SecurityException -> E1
                L8: GOTO L9   (line 1530)
                E1: ASTORE 6   (line 1526)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1527)
                    IFEQ L9
                    LDC "SecurityException thrown while trying to find/read config files."   (line 1528)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L9: INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1532)
                    IFEQ L11
                    ALOAD_2     // Ljava/util/Properties; props   (line 1533)
                    IFNONNULL L10
                    NEW java.lang.StringBuffer   (line 1534)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] No properties file of name '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; fileName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' found."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    GOTO L11
               L10: NEW java.lang.StringBuffer   (line 1538)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LOOKUP] Properties file of name '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; fileName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' found at '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 5     // Ljava/net/URL; propsUrl
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
                    BIPUSH 34
                    INVOKEVIRTUAL java.lang.StringBuffer.append (C)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
               L11: ALOAD_2     // Ljava/util/Properties; props   (line 1544)
                    ARETURN
  end private static final java.util.Properties getConfigurationFile(ClassLoader, String)

  private static String getSystemProperty(String, String) throws java.lang.SecurityException:
                    NEW org.apache.commons.logging.LogFactory$6   (line 1558)
                    DUP
                    ALOAD_0     // Ljava/lang/String; key
                    ALOAD_1     // Ljava/lang/String; def
                    INVOKESPECIAL org.apache.commons.logging.LogFactory$6.<init> (Ljava/lang/String;Ljava/lang/String;)V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ARETURN
  end private static String getSystemProperty(String, String) throws java.lang.SecurityException

  private static void initDiagnostics():
    catch java.lang.SecurityException -> E0
    |               LDC "org.apache.commons.logging.diagnostics.dest"   (line 1575)
    |               ACONST_NULL
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE_0
    |               ALOAD_0     // Ljava/lang/String; dest   (line 1576)
    |               IFNONNULL L0
    catch java.lang.SecurityException -> E0
                    RETURN   (line 1577)
                L0: GOTO L1   (line 1583)
                E0: ASTORE_1   (line 1579)
                    RETURN   (line 1582)
                L1: ALOAD_0     // Ljava/lang/String; dest   (line 1585)
                    LDC "STDOUT"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L2
                    GETSTATIC java.lang.System.out Ljava/io/PrintStream;   (line 1586)
                    PUTSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;
                    GOTO L4
                L2: ALOAD_0     // Ljava/lang/String; dest   (line 1587)
                    LDC "STDERR"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L3
                    GETSTATIC java.lang.System.err Ljava/io/PrintStream;   (line 1588)
                    PUTSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;
                    GOTO L4
    catch java.io.IOException -> E1
    |           L3: NEW java.io.FileOutputStream   (line 1592)
    |               DUP
    |               ALOAD_0     // Ljava/lang/String; dest
    |               ICONST_1
    |               INVOKESPECIAL java.io.FileOutputStream.<init> (Ljava/lang/String;Z)V
    |               ASTORE_1
    |               NEW java.io.PrintStream   (line 1593)
    |               DUP
    |               ALOAD_1     // Ljava/io/FileOutputStream; fos
    |               INVOKESPECIAL java.io.PrintStream.<init> (Ljava/io/OutputStream;)V
    |               PUTSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;
    catch java.io.IOException -> E1
                    GOTO L4   (line 1597)
                E1: ASTORE_1   (line 1594)
                    RETURN   (line 1596)
    catch java.lang.SecurityException -> E2
    |           L4: GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;   (line 1611)
    |               ASTORE_2
    |               GETSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;   (line 1612)
    |               IFNONNULL L5
    |               LDC "BOOTLOADER"   (line 1613)
    |               ASTORE_1
    |               GOTO L6
    |           L5: ALOAD_2     // Ljava/lang/ClassLoader; classLoader   (line 1615)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               ASTORE_1
    catch java.lang.SecurityException -> E2
                L6: GOTO L7   (line 1619)
                E2: ASTORE_2   (line 1617)
                    LDC "UNKNOWN"   (line 1618)
                    ASTORE_1
                L7: NEW java.lang.StringBuffer   (line 1620)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LogFactory from "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; classLoaderName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "] "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    PUTSTATIC org.apache.commons.logging.LogFactory.diagnosticPrefix Ljava/lang/String;
                    RETURN   (line 1621)
  end private static void initDiagnostics()

  protected static boolean isDiagnosticsEnabled():
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1633)
                    IFNULL L0
                    ICONST_1
                    GOTO L1
                L0: ICONST_0
                L1: IRETURN
  end protected static boolean isDiagnosticsEnabled()

  private static final void logDiagnostic(String):
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1655)
                    IFNULL L0
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1656)
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticPrefix Ljava/lang/String;
                    INVOKEVIRTUAL java.io.PrintStream.print (Ljava/lang/String;)V
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1657)
                    ALOAD_0     // Ljava/lang/String; msg
                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1658)
                    INVOKEVIRTUAL java.io.PrintStream.flush ()V
                L0: RETURN   (line 1660)
  end private static final void logDiagnostic(String)

  protected static final void logRawDiagnostic(String):
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1669)
                    IFNULL L0
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1670)
                    ALOAD_0     // Ljava/lang/String; msg
                    INVOKEVIRTUAL java.io.PrintStream.println (Ljava/lang/String;)V
                    GETSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;   (line 1671)
                    INVOKEVIRTUAL java.io.PrintStream.flush ()V
                L0: RETURN   (line 1673)
  end protected static final void logRawDiagnostic(String)

  private static void logClassLoaderEnvironment(Class):
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1693)
                    IFNE L0
                    RETURN   (line 1694)
    catch java.lang.SecurityException -> E0
    |           L0: NEW java.lang.StringBuffer   (line 1701)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[ENV] Extension directories (java.ext.dir): "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "java.ext.dir"
    |               INVOKESTATIC java.lang.System.getProperty (Ljava/lang/String;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    |               NEW java.lang.StringBuffer   (line 1702)
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[ENV] Application classpath (java.class.path): "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "java.class.path"
    |               INVOKESTATIC java.lang.System.getProperty (Ljava/lang/String;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E0
                    GOTO L1   (line 1705)
                E0: ASTORE_1   (line 1703)
                    LDC "[ENV] Security setting prevent interrogation of system classpaths."   (line 1704)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L1: ALOAD_0     // Ljava/lang/Class; clazz   (line 1707)
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ASTORE_1
    catch java.lang.SecurityException -> E1
    |               ALOAD_0     // Ljava/lang/Class; clazz   (line 1711)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
    |               ASTORE_2
    catch java.lang.SecurityException -> E1
                    GOTO L2   (line 1717)
                E1: ASTORE_3   (line 1712)
                    NEW java.lang.StringBuffer   (line 1714)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Security forbids determining the classloader for "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; className
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    RETURN   (line 1716)
                L2: NEW java.lang.StringBuffer   (line 1719)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Class "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; className
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " was loaded via classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    NEW java.lang.StringBuffer   (line 1722)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Ancestry of classloader which loaded "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; className
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " is "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    ALOAD_2     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logHierarchy (Ljava/lang/String;Ljava/lang/ClassLoader;)V
                    RETURN   (line 1723)
  end private static void logClassLoaderEnvironment(Class)

  private static void logHierarchy(String, ClassLoader):
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1733)
                    IFNE L0
                    RETURN   (line 1734)
                L0: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1737)
                    IFNULL L1
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1738)
                    INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;
                    ASTORE_3
                    NEW java.lang.StringBuffer   (line 1739)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ALOAD_0     // Ljava/lang/String; prefix
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " == '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/String; classLoaderString
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E0
    |           L1: INVOKESTATIC java.lang.ClassLoader.getSystemClassLoader ()Ljava/lang/ClassLoader;   (line 1743)
    |               ASTORE_2
    catch java.lang.SecurityException -> E0
                    GOTO L2   (line 1748)
                E0: ASTORE_3   (line 1744)
                    NEW java.lang.StringBuffer   (line 1745)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ALOAD_0     // Ljava/lang/String; prefix
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "Security forbids determining the system classloader."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    RETURN   (line 1747)
                L2: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1749)
                    IFNULL L7
                    NEW java.lang.StringBuffer   (line 1750)
                    DUP
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ALOAD_0     // Ljava/lang/String; prefix
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "ClassLoader tree:"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.StringBuffer.<init> (Ljava/lang/String;)V
                    ASTORE_3
                L3: ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1752)
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1753)
                    ALOAD_2     // Ljava/lang/ClassLoader; systemClassLoader
                    IF_ACMPNE L4
                    ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1754)
                    LDC " (SYSTEM) "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
    catch java.lang.SecurityException -> E1
    |           L4: ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1758)
    |               INVOKEVIRTUAL java.lang.ClassLoader.getParent ()Ljava/lang/ClassLoader;
    |               ASTORE_1     // Ljava/lang/ClassLoader; classLoader
    catch java.lang.SecurityException -> E1
                    GOTO L5   (line 1762)
                E1: ASTORE 4   (line 1759)
                    ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1760)
                    LDC " --> SECRET"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    GOTO L6   (line 1761)
                L5: ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1764)
                    LDC " --> "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_1     // Ljava/lang/ClassLoader; classLoader   (line 1765)
                    IFNONNULL L3
                    ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1766)
                    LDC "BOOT"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    GOTO L6   (line 1767)
                L6: ALOAD_3     // Ljava/lang/StringBuffer; buf   (line 1770)
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L7: RETURN   (line 1772)
  end private static void logHierarchy(String, ClassLoader)

  public static String objectId(Object):
                    ALOAD_0     // Ljava/lang/Object; o   (line 1787)
                    IFNONNULL L0
                    LDC "null"   (line 1788)
                    ARETURN
                L0: NEW java.lang.StringBuffer   (line 1790)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ALOAD_0     // Ljava/lang/Object; o
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "@"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_0     // Ljava/lang/Object; o
                    INVOKESTATIC java.lang.System.identityHashCode (Ljava/lang/Object;)I
                    INVOKEVIRTUAL java.lang.StringBuffer.append (I)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    ARETURN
  end public static String objectId(Object)

  static Class class$(String):
    catch java.lang.ClassNotFoundException -> E0
    |               ALOAD_0     // Ljava/lang/String; x0   (line 896)
    |               INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;
    catch java.lang.ClassNotFoundException -> E0
                    ARETURN
                E0: ASTORE_1
                    NEW java.lang.NoClassDefFoundError
                    DUP
                    ALOAD_1     // Ljava/lang/ClassNotFoundException; x1
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.NoClassDefFoundError.<init> (Ljava/lang/String;)V
                    ATHROW
  end static Class class$(String)

  static void access$000(String):
                    ALOAD_0     // Ljava/lang/String; x0   (line 52)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                    RETURN
  end static void access$000(String)

  static void <clinit>():
                    ACONST_NULL   (line 148)
                    PUTSTATIC org.apache.commons.logging.LogFactory.diagnosticsStream Ljava/io/PrintStream;
                    ACONST_NULL   (line 309)
                    PUTSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;
                    ACONST_NULL   (line 325)
                    PUTSTATIC org.apache.commons.logging.LogFactory.nullClassLoaderFactory Lorg/apache/commons/logging/LogFactory;
                    GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;   (line 1816)
                    IFNONNULL L0
                    LDC "org.apache.commons.logging.LogFactory"
                    INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                    GOTO L1
                L0: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                L1: INVOKESTATIC org.apache.commons.logging.LogFactory.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
                    PUTSTATIC org.apache.commons.logging.LogFactory.thisClassLoader Ljava/lang/ClassLoader;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.initDiagnostics ()V   (line 1817)
                    GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;   (line 1818)
                    IFNONNULL L2
                    LDC "org.apache.commons.logging.LogFactory"
                    INVOKESTATIC org.apache.commons.logging.LogFactory.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                    GOTO L3
                L2: GETSTATIC org.apache.commons.logging.LogFactory.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
                L3: INVOKESTATIC org.apache.commons.logging.LogFactory.logClassLoaderEnvironment (Ljava/lang/Class;)V
                    INVOKESTATIC org.apache.commons.logging.LogFactory.createFactoryStore ()Ljava/util/Hashtable;   (line 1819)
                    PUTSTATIC org.apache.commons.logging.LogFactory.factories Ljava/util/Hashtable;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 1820)
                    IFEQ L4
                    LDC "BOOTSTRAP COMPLETED"   (line 1821)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logDiagnostic (Ljava/lang/String;)V
                L4: RETURN   (line 1823)
  end static void <clinit>()
end public abstract class org.apache.commons.logging.LogFactory
 -- (ClassFormatException) File: 'java.lang.CharSequence': Invalid byte tag in constant pool: 15
File: 'java.lang.CharSequence': Invalid byte tag in constant pool: 15
org.aspectj.apache.bcel.classfile.ClassFormatException: File: 'java.lang.CharSequence': Invalid byte tag in constant pool: 15
	at org.aspectj.apache.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:192)
	at org.aspectj.apache.bcel.classfile.ClassParser.parse(ClassParser.java:131)
	at org.aspectj.apache.bcel.util.ClassLoaderRepository.loadClass(ClassLoaderRepository.java:323)
	at org.aspectj.weaver.bcel.BcelWorld.lookupJavaClass(BcelWorld.java:402)
	at org.aspectj.weaver.bcel.BcelWorld.resolveDelegate(BcelWorld.java:376)
	at org.aspectj.weaver.ltw.LTWWorld.resolveDelegate(LTWWorld.java:111)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:467)
	at org.aspectj.weaver.World.resolve(World.java:308)
	at org.aspectj.weaver.World.resolve(World.java:218)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:97)
	at org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter.classTypeSignature2TypeX(BcelGenericSignatureToTypeXConverter.java:41)
	at org.aspectj.weaver.bcel.BcelObjectType.ensureGenericSignatureUnpacked(BcelObjectType.java:810)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:257)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:160)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:89)
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.<init>(AbstractRefreshableConfigApplicationContext.java:59)
	at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:61)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:136)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.LogConfigurationException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.LogConfigurationException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.LogConfigurationException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.LogConfigurationException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.LogConfigurationException
when weaving classes 
when weaving 
 [Xlint:cantFindType]
