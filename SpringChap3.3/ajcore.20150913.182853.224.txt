---- AspectJ Properties ---
AspectJ Compiler 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
---- Dump Properties ---
Dump file: ajcore.20150913.182853.224.txt
Dump reason: abort
Dump on exception: true
Dump at exit condition: abort
---- System Properties ---
java.runtime.name=Java(TM) SE Runtime Environment
sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_45\jre\bin
java.vm.version=25.45-b02
java.vm.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
path.separator=;
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
file.encoding.pkg=sun.io
user.country=US
user.script=
sun.java.launcher=SUN_STANDARD
sun.os.patch.level=
java.vm.specification.name=Java Virtual Machine Specification
user.dir=E:\Eclipse Latest\SpringChap3.3
java.runtime.version=1.8.0_45-b15
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\endorsed
os.arch=amd64
java.io.tmpdir=C:\Users\SANJUS~1\AppData\Local\Temp\
line.separator=

java.vm.specification.vendor=Oracle Corporation
user.variant=
os.name=Windows 7
sun.jnu.encoding=Cp1252
java.library.path=C:\Program Files\Java\jdk1.8.0_45\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_45/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Program Files\Java\jdk1.8.0_45\bin;C:\Program Files (x86)\Java\jre1.8.0_45\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Python27;;E:\Eclipse Latest\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.
java.specification.name=Java Platform API Specification
java.class.version=52.0
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
os.version=6.1
user.home=C:\Users\sanju singh
user.timezone=Asia/Calcutta
java.awt.printerjob=sun.awt.windows.WPrinterJob
file.encoding=Cp1252
java.specification.version=1.8
java.class.path=E:\Eclipse Latest\SpringChap3.3\bin;E:\Eclipse Latest\SpringJar\extra Jar\aopalliance-1.0.jar;E:\Eclipse Latest\SpringJar\extra Jar\asm-3.3.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjrt-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\aspectjweaver-1.6.11.jar;E:\Eclipse Latest\SpringJar\extra Jar\cglib-2.2.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\commons-logging-1.1.1.jar;E:\Eclipse Latest\SpringJar\extra Jar\junit-4.8.2.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-aop-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-asm-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-beans-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-context-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-core-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\extra Jar\spring-expression-3.0.5.RELEASE.jar;E:\Eclipse Latest\SpringJar\spring-aspects-4.1.6.RELEASE.jar;E:\TestJar\aspectjweaver-1.6.11.jar
user.name=sanju singh
java.vm.specification.version=1.8
sun.java.command=foo.ConfigureApp
java.home=C:\Program Files\Java\jdk1.8.0_45\jre
sun.arch.data.model=64
user.language=en
java.specification.vendor=Oracle Corporation
awt.toolkit=sun.awt.windows.WToolkit
java.vm.info=mixed mode
java.version=1.8.0_45
java.ext.dirs=C:\Program Files\Java\jdk1.8.0_45\jre\lib\ext;C:\Windows\Sun\Java\lib\ext
sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_45\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_45\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_45\jre\classes
java.vendor=Oracle Corporation
file.separator=\
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding=UnicodeLittle
sun.cpu.endian=little
sun.desktop=windows
sun.cpu.isalist=amd64
---- Command Line ---
Empty
---- Full Classpath ---
Empty
---- Compiler Messages ---
info AspectJ Weaver Version 1.6.11 built on Tuesday Mar 15, 2011 at 15:31:04 GMT
info register classloader sun.misc.Launcher$AppClassLoader@14dad5dc
info using configuration file:/E:/Eclipse%20Latest/SpringJar/spring-aspects-4.1.6.RELEASE.jar!/META-INF/aop.xml
error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.impl.LogFactoryImpl
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.impl.LogFactoryImpl
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.impl.LogFactoryImpl
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.impl.LogFactoryImpl
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.impl.LogFactoryImpl
when weaving classes 
when weaving 
 [Xlint:cantFindType]
abort trouble in: 
public class org.apache.commons.logging.impl.LogFactoryImpl extends org.apache.commons.logging.LogFactory:
  private static final String LOGGING_IMPL_LOG4J_LOGGER = "org.apache.commons.logging.impl.Log4JLogger"
  private static final String LOGGING_IMPL_JDK14_LOGGER = "org.apache.commons.logging.impl.Jdk14Logger"
  private static final String LOGGING_IMPL_LUMBERJACK_LOGGER = "org.apache.commons.logging.impl.Jdk13LumberjackLogger"
  private static final String LOGGING_IMPL_SIMPLE_LOGGER = "org.apache.commons.logging.impl.SimpleLog"
  private static final String PKG_IMPL = "org.apache.commons.logging.impl."
  private static final int PKG_LEN
  public static final String LOG_PROPERTY = "org.apache.commons.logging.Log"
  protected static final String LOG_PROPERTY_OLD = "org.apache.commons.logging.log"
  public static final String ALLOW_FLAWED_CONTEXT_PROPERTY = "org.apache.commons.logging.Log.allowFlawedContext"
  public static final String ALLOW_FLAWED_DISCOVERY_PROPERTY = "org.apache.commons.logging.Log.allowFlawedDiscovery"
  public static final String ALLOW_FLAWED_HIERARCHY_PROPERTY = "org.apache.commons.logging.Log.allowFlawedHierarchy"
  private static final String[] classesToDiscover
  private boolean useTCCL
  private String diagnosticPrefix
  protected java.util.Hashtable attributes
  protected java.util.Hashtable instances
  private String logClassName
  protected java.lang.reflect.Constructor logConstructor
  protected Class[] logConstructorSignature
  protected java.lang.reflect.Method logMethod
  protected Class[] logMethodSignature
  private boolean allowFlawedContext
  private boolean allowFlawedDiscovery
  private boolean allowFlawedHierarchy
  static Class class$java$lang$String [Synthetic]
  static Class class$org$apache$commons$logging$LogFactory [Synthetic]
  static Class class$org$apache$commons$logging$impl$LogFactoryImpl [Synthetic]
  static Class class$org$apache$commons$logging$Log [Synthetic]
  public void <init>():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 94)
                    INVOKESPECIAL org.apache.commons.logging.LogFactory.<init> ()V
    constructor-execution(void org.apache.commons.logging.impl.LogFactoryImpl.<init>())
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 190)
    |               ICONST_1
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.useTCCL Z
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 201)
    |               NEW java.util.Hashtable
    |               DUP
    |               INVOKESPECIAL java.util.Hashtable.<init> ()V
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 208)
    |               NEW java.util.Hashtable
    |               DUP
    |               INVOKESPECIAL java.util.Hashtable.<init> ()V
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.instances Ljava/util/Hashtable;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 224)
    |               ACONST_NULL
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 230)
    |               ICONST_1
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$java$lang$String Ljava/lang/Class;
    |               IFNONNULL L0
    |               LDC "java.lang.String"
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
    |               DUP
    |               PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$java$lang$String Ljava/lang/Class;
    |               GOTO L1
    |           L0: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$java$lang$String Ljava/lang/Class;
    |           L1: AASTORE
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructorSignature [Ljava/lang/Class;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 238)
    |               ACONST_NULL
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 244)
    |               ICONST_1
    |               ANEWARRAY java.lang.Class
    |               DUP
    |               ICONST_0
    |               GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |               IFNONNULL L2
    |               LDC "org.apache.commons.logging.LogFactory"
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
    |               DUP
    |               PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |               GOTO L3
    |           L2: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$LogFactory Ljava/lang/Class;
    |           L3: AASTORE
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethodSignature [Ljava/lang/Class;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 95)
    |               INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.initDiagnostics ()V
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 96)
    |               IFEQ L4
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 97)
    |               LDC "Instance created."
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    |           L4: RETURN   (line 99)
    constructor-execution(void org.apache.commons.logging.impl.LogFactoryImpl.<init>())
  end public void <init>()

  public Object getAttribute(String):
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 273)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.util.Hashtable.get (Ljava/lang/Object;)Ljava/lang/Object;
                    ARETURN
  end public Object getAttribute(String)

  public String[] getAttributeNames():
                    NEW java.util.Vector   (line 285)
                    DUP
                    INVOKESPECIAL java.util.Vector.<init> ()V
                    ASTORE_1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 286)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
                    INVOKEVIRTUAL java.util.Hashtable.keys ()Ljava/util/Enumeration;
                    ASTORE_2
                L0: ALOAD_2     // Ljava/util/Enumeration; keys   (line 287)
                    INVOKEINTERFACE java.util.Enumeration.hasMoreElements ()Z
                    IFEQ L1
                    ALOAD_1     // Ljava/util/Vector; names   (line 288)
                    ALOAD_2     // Ljava/util/Enumeration; keys
                    INVOKEINTERFACE java.util.Enumeration.nextElement ()Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    INVOKEVIRTUAL java.util.Vector.addElement (Ljava/lang/Object;)V
                    GOTO L0
                L1: ALOAD_1     // Ljava/util/Vector; names   (line 290)
                    INVOKEVIRTUAL java.util.Vector.size ()I
                    ANEWARRAY java.lang.String
                    ASTORE_3
                    ICONST_0   (line 291)
                    ISTORE 4
                L2: ILOAD 4     // I i
                    ALOAD_3     // [Ljava/lang/String; results
                    ARRAYLENGTH
                    IF_ICMPGE L3
                    ALOAD_3     // [Ljava/lang/String; results   (line 292)
                    ILOAD 4     // I i
                    ALOAD_1     // Ljava/util/Vector; names
                    ILOAD 4     // I i
                    INVOKEVIRTUAL java.util.Vector.elementAt (I)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    AASTORE
                    IINC 4 1     // I i   (line 291)
                    GOTO L2
                L3: ALOAD_3     // [Ljava/lang/String; results   (line 294)
                    ARETURN
  end public String[] getAttributeNames()

  public org.apache.commons.logging.Log getInstance(Class) throws org.apache.commons.logging.LogConfigurationException:
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 310)
                    ALOAD_1     // Ljava/lang/Class; clazz
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.getInstance (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
                    ARETURN
  end public org.apache.commons.logging.Log getInstance(Class) throws org.apache.commons.logging.LogConfigurationException

  public org.apache.commons.logging.Log getInstance(String) throws org.apache.commons.logging.LogConfigurationException:
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 334)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.instances Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.util.Hashtable.get (Ljava/lang/Object;)Ljava/lang/Object;
                    CHECKCAST org.apache.commons.logging.Log
                    ASTORE_2
                    ALOAD_2     // Lorg/apache/commons/logging/Log; instance   (line 335)
                    IFNONNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 336)
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.newInstance (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
                    ASTORE_2     // Lorg/apache/commons/logging/Log; instance
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 337)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.instances Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    ALOAD_2     // Lorg/apache/commons/logging/Log; instance
                    INVOKEVIRTUAL java.util.Hashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                L0: ALOAD_2     // Lorg/apache/commons/logging/Log; instance   (line 339)
                    ARETURN
  end public org.apache.commons.logging.Log getInstance(String) throws org.apache.commons.logging.LogConfigurationException

  public void release():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 354)
                    LDC "Releasing all known loggers"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 355)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.instances Ljava/util/Hashtable;
                    INVOKEVIRTUAL java.util.Hashtable.clear ()V
                    RETURN   (line 356)
  end public void release()

  public void removeAttribute(String):
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 367)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    RETURN   (line 369)
  end public void removeAttribute(String)

  public void setAttribute(String, Object):
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 398)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
                    IFNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 399)
                    LDC "setAttribute: call too late; configuration already performed."
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_2     // Ljava/lang/Object; value   (line 402)
                    IFNONNULL L1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 403)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.util.Hashtable.remove (Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                    GOTO L2
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 405)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.attributes Ljava/util/Hashtable;
                    ALOAD_1     // Ljava/lang/String; name
                    ALOAD_2     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.util.Hashtable.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
                    POP
                L2: ALOAD_1     // Ljava/lang/String; name   (line 408)
                    LDC "use_tccl"
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 409)
                    ALOAD_2     // Ljava/lang/Object; value
                    INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;
                    INVOKESTATIC java.lang.Boolean.valueOf (Ljava/lang/String;)Ljava/lang/Boolean;
                    INVOKEVIRTUAL java.lang.Boolean.booleanValue ()Z
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.useTCCL Z
                L3: RETURN   (line 412)
  end public void setAttribute(String, Object)

  protected static ClassLoader getContextClassLoader() throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getContextClassLoader ()Ljava/lang/ClassLoader;   (line 428)
                    ARETURN
  end protected static ClassLoader getContextClassLoader() throws org.apache.commons.logging.LogConfigurationException

  protected static boolean isDiagnosticsEnabled():
                    INVOKESTATIC org.apache.commons.logging.LogFactory.isDiagnosticsEnabled ()Z   (line 437)
                    IRETURN
  end protected static boolean isDiagnosticsEnabled()

  protected static ClassLoader getClassLoader(Class):
                    ALOAD_0     // Ljava/lang/Class; clazz   (line 447)
                    INVOKESTATIC org.apache.commons.logging.LogFactory.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
                    ARETURN
  end protected static ClassLoader getClassLoader(Class)

  private void initDiagnostics():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 475)
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/Class; clazz   (line 476)
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
                    ASTORE_2
    catch java.lang.SecurityException -> E0
    |               ALOAD_2     // Ljava/lang/ClassLoader; classLoader   (line 479)
    |               IFNONNULL L0
    |               LDC "BOOTLOADER"   (line 480)
    |               ASTORE_3
    |               GOTO L1
    |           L0: ALOAD_2     // Ljava/lang/ClassLoader; classLoader   (line 482)
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               ASTORE_3
    catch java.lang.SecurityException -> E0
                L1: GOTO L2   (line 486)
                E0: ASTORE 4   (line 484)
                    LDC "UNKNOWN"   (line 485)
                    ASTORE_3
                L2: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 487)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[LogFactoryImpl@"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    INVOKESTATIC java.lang.System.identityHashCode (Ljava/lang/Object;)I
                    INVOKEVIRTUAL java.lang.StringBuffer.append (I)Ljava/lang/StringBuffer;
                    LDC " from "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/String; classLoaderName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "] "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.diagnosticPrefix Ljava/lang/String;
                    RETURN   (line 488)
  end private void initDiagnostics()

  protected void logDiagnostic(String):
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 499)
                    IFEQ L0
                    NEW java.lang.StringBuffer   (line 500)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.diagnosticPrefix Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.logRawDiagnostic (Ljava/lang/String;)V
                L0: RETURN   (line 502)
  end protected void logDiagnostic(String)

  protected String getLogClassName():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 513)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logClassName Ljava/lang/String;
                    IFNONNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 514)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.discoverLogImplementation (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
                    POP
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 517)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logClassName Ljava/lang/String;
                    ARETURN
  end protected String getLogClassName()

  protected java.lang.reflect.Constructor getLogConstructor() throws org.apache.commons.logging.LogConfigurationException:
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 540)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
                    IFNONNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 541)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.discoverLogImplementation (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
                    POP
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 544)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
                    ARETURN
  end protected java.lang.reflect.Constructor getLogConstructor() throws org.apache.commons.logging.LogConfigurationException

  protected boolean isJdk13LumberjackAvailable():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 555)
                    LDC "Jdk13Lumberjack"
                    LDC "org.apache.commons.logging.impl.Jdk13LumberjackLogger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.isLogLibraryAvailable (Ljava/lang/String;Ljava/lang/String;)Z
                    IRETURN
  end protected boolean isJdk13LumberjackAvailable()

  protected boolean isJdk14Available():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 571)
                    LDC "Jdk14"
                    LDC "org.apache.commons.logging.impl.Jdk14Logger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.isLogLibraryAvailable (Ljava/lang/String;Ljava/lang/String;)Z
                    IRETURN
  end protected boolean isJdk14Available()

  protected boolean isLog4JAvailable():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 584)
                    LDC "Log4J"
                    LDC "org.apache.commons.logging.impl.Log4JLogger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.isLogLibraryAvailable (Ljava/lang/String;Ljava/lang/String;)Z
                    IRETURN
  end protected boolean isLog4JAvailable()

  protected org.apache.commons.logging.Log newInstance(String) throws org.apache.commons.logging.LogConfigurationException:
                    ACONST_NULL   (line 601)
                    ASTORE_2
    catch java.lang.Throwable -> E2
    | catch java.lang.reflect.InvocationTargetException -> E1
    | | catch org.apache.commons.logging.LogConfigurationException -> E0
    | | |           ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 603)
    | | |           GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
    | | |           IFNONNULL L0
    | | |           ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 604)
    | | |           ALOAD_1     // Ljava/lang/String; name
    | | |           INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.discoverLogImplementation (Ljava/lang/String;)Lorg/apache/commons/logging/Log;
    | | |           ASTORE_2     // Lorg/apache/commons/logging/Log; instance
    | | |           GOTO L1
    | | |       L0: ICONST_1   (line 607)
    | | |           ANEWARRAY java.lang.Object
    | | |           DUP
    | | |           ICONST_0
    | | |           ALOAD_1     // Ljava/lang/String; name
    | | |           AASTORE
    | | |           ASTORE_3
    | | |           ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 608)
    | | |           GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
    | | |           ALOAD_3     // [Ljava/lang/Object; params
    | | |           INVOKEVIRTUAL java.lang.reflect.Constructor.newInstance ([Ljava/lang/Object;)Ljava/lang/Object;
    | | |           CHECKCAST org.apache.commons.logging.Log
    | | |           ASTORE_2     // Lorg/apache/commons/logging/Log; instance
    | | |       L1: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 611)
    | | |           GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethod Ljava/lang/reflect/Method;
    | | |           IFNULL L2
    | | |           ICONST_1   (line 612)
    | | |           ANEWARRAY java.lang.Object
    | | |           DUP
    | | |           ICONST_0
    | | |           ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
    | | |           AASTORE
    | | |           ASTORE_3
    | | |           ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 613)
    | | |           GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethod Ljava/lang/reflect/Method;
    | | |           ALOAD_2     // Lorg/apache/commons/logging/Log; instance
    | | |           ALOAD_3     // [Ljava/lang/Object; params
    | | |           INVOKEVIRTUAL java.lang.reflect.Method.invoke (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    | | |           POP
    | | |       L2: ALOAD_2     // Lorg/apache/commons/logging/Log; instance   (line 616)
    | | catch org.apache.commons.logging.LogConfigurationException -> E0
    | catch java.lang.reflect.InvocationTargetException -> E1
    catch java.lang.Throwable -> E2
                    ARETURN
                E0: ASTORE_3   (line 618)
                    ALOAD_3     // Lorg/apache/commons/logging/LogConfigurationException; lce   (line 623)
                    ATHROW
                E1: ASTORE_3   (line 625)
                    ALOAD_3     // Ljava/lang/reflect/InvocationTargetException; e   (line 628)
                    INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/Throwable; c   (line 629)
                    IFNULL L3
                    NEW org.apache.commons.logging.LogConfigurationException   (line 630)
                    DUP
                    ALOAD 4     // Ljava/lang/Throwable; c
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
                L3: NEW org.apache.commons.logging.LogConfigurationException   (line 632)
                    DUP
                    ALOAD_3     // Ljava/lang/reflect/InvocationTargetException; e
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
                E2: ASTORE_3   (line 634)
                    NEW org.apache.commons.logging.LogConfigurationException   (line 637)
                    DUP
                    ALOAD_3     // Ljava/lang/Throwable; t
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
  end protected org.apache.commons.logging.Log newInstance(String) throws org.apache.commons.logging.LogConfigurationException

  private static ClassLoader getContextClassLoaderInternal() throws org.apache.commons.logging.LogConfigurationException:
                    NEW org.apache.commons.logging.impl.LogFactoryImpl$1   (line 664)
                    DUP
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl$1.<init> ()V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.lang.ClassLoader
                    ARETURN
  end private static ClassLoader getContextClassLoaderInternal() throws org.apache.commons.logging.LogConfigurationException

  private static String getSystemProperty(String, String) throws java.lang.SecurityException:
                    NEW org.apache.commons.logging.impl.LogFactoryImpl$2   (line 683)
                    DUP
                    ALOAD_0     // Ljava/lang/String; key
                    ALOAD_1     // Ljava/lang/String; def
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl$2.<init> (Ljava/lang/String;Ljava/lang/String;)V
                    INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ARETURN
  end private static String getSystemProperty(String, String) throws java.lang.SecurityException

  private ClassLoader getParentClassLoader(ClassLoader):
    catch java.lang.SecurityException -> E0
    |               NEW org.apache.commons.logging.impl.LogFactoryImpl$3   (line 700)
    |               DUP
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
    |               ALOAD_1     // Ljava/lang/ClassLoader; cl
    |               INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl$3.<init> (Lorg/apache/commons/logging/impl/LogFactoryImpl;Ljava/lang/ClassLoader;)V
    |               INVOKESTATIC java.security.AccessController.doPrivileged (Ljava/security/PrivilegedAction;)Ljava/lang/Object;
    |               CHECKCAST java.lang.ClassLoader
    catch java.lang.SecurityException -> E0
                    ARETURN
                E0: ASTORE_2   (line 706)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 707)
                    LDC "[SECURITY] Unable to obtain parent classloader"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    ACONST_NULL   (line 708)
                    ARETURN
  end private ClassLoader getParentClassLoader(ClassLoader)

  private boolean isLogLibraryAvailable(String, String):
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 719)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 720)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Checking for '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "'."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch org.apache.commons.logging.LogConfigurationException -> E1
    |           L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 723)
    |               ALOAD_2     // Ljava/lang/String; classname
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
    |               INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               ICONST_0
    |               INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.createLogFromClass (Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/commons/logging/Log;
    |               ASTORE_3
    |               ALOAD_3     // Lorg/apache/commons/logging/Log; log   (line 728)
    |               IFNONNULL L2
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 729)
    |               IFEQ L1
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 730)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Did not find '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/String; name
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "'."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    |           L1: ICONST_0   (line 732)
    catch org.apache.commons.logging.LogConfigurationException -> E1
                    IRETURN
    catch org.apache.commons.logging.LogConfigurationException -> E1
    |           L2: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 734)
    |               IFEQ L3
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 735)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Found '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/String; name
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "'."
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    |           L3: ICONST_1   (line 737)
    catch org.apache.commons.logging.LogConfigurationException -> E1
                    IRETURN
                E1: ASTORE_3   (line 739)
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 740)
                    IFEQ L4
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 741)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Logging system '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; name
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' is available but not useable."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L4: ICONST_0   (line 743)
                    IRETURN
  end private boolean isLogLibraryAvailable(String, String)

  private String getConfigurationValue(String):
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 759)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 760)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Trying to get configuration for item "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 763)
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.getAttribute (Ljava/lang/String;)Ljava/lang/Object;
                    ASTORE_2
                    ALOAD_2     // Ljava/lang/Object; valueObj   (line 764)
                    IFNULL L2
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 765)
                    IFEQ L1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 766)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Found LogFactory attribute ["
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/Object; valueObj
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
                    LDC "] for "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L1: ALOAD_2     // Ljava/lang/Object; valueObj   (line 768)
                    INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;
                    ARETURN
                L2: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 771)
                    IFEQ L3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 772)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] No LogFactory attribute found for "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E1
    |           L3: ALOAD_1     // Ljava/lang/String; property   (line 780)
    |               ACONST_NULL
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE_3
    |               ALOAD_3     // Ljava/lang/String; value   (line 781)
    |               IFNULL L5
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 782)
    |               IFEQ L4
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 783)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[ENV] Found system property ["
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_3     // Ljava/lang/String; value
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "] for "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/String; property
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    |           L4: ALOAD_3     // Ljava/lang/String; value   (line 785)
    catch java.lang.SecurityException -> E1
                    ARETURN
    catch java.lang.SecurityException -> E1
    |           L5: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 788)
    |               IFEQ L6
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 789)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "[ENV] No system property found for property "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/String; property
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E1
                L6: GOTO L7   (line 795)
                E1: ASTORE_3   (line 791)
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 792)
                    IFEQ L7
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 793)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] Security prevented reading system property "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L7: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 797)
                    IFEQ L8
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 798)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[ENV] No configuration defined for item "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; property
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L8: ACONST_NULL   (line 801)
                    ARETURN
  end private String getConfigurationValue(String)

  private boolean getBooleanConfiguration(String, boolean):
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 809)
                    ALOAD_1     // Ljava/lang/String; key
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getConfigurationValue (Ljava/lang/String;)Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; val   (line 810)
                    IFNONNULL L0
                    ILOAD_2     // Z dflt   (line 811)
                    IRETURN
                L0: ALOAD_3     // Ljava/lang/String; val   (line 812)
                    INVOKESTATIC java.lang.Boolean.valueOf (Ljava/lang/String;)Ljava/lang/Boolean;
                    INVOKEVIRTUAL java.lang.Boolean.booleanValue ()Z
                    IRETURN
  end private boolean getBooleanConfiguration(String, boolean)

  private void initConfiguration():
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 823)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    LDC "org.apache.commons.logging.Log.allowFlawedContext"
                    ICONST_1
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getBooleanConfiguration (Ljava/lang/String;Z)Z
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedContext Z
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 824)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    LDC "org.apache.commons.logging.Log.allowFlawedDiscovery"
                    ICONST_1
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getBooleanConfiguration (Ljava/lang/String;Z)Z
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedDiscovery Z
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 825)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
                    LDC "org.apache.commons.logging.Log.allowFlawedHierarchy"
                    ICONST_1
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getBooleanConfiguration (Ljava/lang/String;Z)Z
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedHierarchy Z
                    RETURN   (line 826)
  end private void initConfiguration()

  private org.apache.commons.logging.Log discoverLogImplementation(String) throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 841)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 842)
                    LDC "Discovering a Log implementation..."
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 845)
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.initConfiguration ()V
                    ACONST_NULL   (line 847)
                    ASTORE_2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 850)
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.findUserSpecifiedLogClassName ()Ljava/lang/String;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName   (line 852)
                    IFNULL L4
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 853)
                    IFEQ L1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 854)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Attempting to load user-specified log class '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "'..."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 858)
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    ALOAD_1     // Ljava/lang/String; logCategory
                    ICONST_1
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.createLogFromClass (Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/commons/logging/Log;
                    ASTORE_2     // Lorg/apache/commons/logging/Log; result
                    ALOAD_2     // Lorg/apache/commons/logging/Log; result   (line 861)
                    IFNONNULL L3
                    NEW java.lang.StringBuffer   (line 862)
                    DUP
                    LDC "User-specified log class '"
                    INVOKESPECIAL java.lang.StringBuffer.<init> (Ljava/lang/String;)V
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer   (line 863)
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer   (line 864)
                    LDC "' cannot be found or is not useable."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName   (line 868)
                    IFNULL L2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 869)
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    LDC "org.apache.commons.logging.impl.Log4JLogger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.informUponSimilarName (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;)V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 870)
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    LDC "org.apache.commons.logging.impl.Jdk14Logger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.informUponSimilarName (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;)V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 871)
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    LDC "org.apache.commons.logging.impl.Jdk13LumberjackLogger"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.informUponSimilarName (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;)V
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 872)
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer
                    ALOAD_3     // Ljava/lang/String; specifiedLogClassName
                    LDC "org.apache.commons.logging.impl.SimpleLog"
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.informUponSimilarName (Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;)V
                L2: NEW org.apache.commons.logging.LogConfigurationException   (line 874)
                    DUP
                    ALOAD 4     // Ljava/lang/StringBuffer; messageBuffer
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
                L3: ALOAD_2     // Lorg/apache/commons/logging/Log; result   (line 877)
                    ARETURN
                L4: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 908)
                    IFEQ L5
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 909)
                    LDC "No user-specified Log implementation; performing discovery using the standard supported logging implementations..."
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L5: ICONST_0   (line 913)
                    ISTORE 4
                L6: ILOAD 4     // I i
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.classesToDiscover [Ljava/lang/String;
                    ARRAYLENGTH
                    IF_ICMPGE L7
                    ALOAD_2     // Lorg/apache/commons/logging/Log; result
                    IFNONNULL L7
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 914)
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.classesToDiscover [Ljava/lang/String;
                    ILOAD 4     // I i
                    AALOAD
                    ALOAD_1     // Ljava/lang/String; logCategory
                    ICONST_1
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.createLogFromClass (Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/commons/logging/Log;
                    ASTORE_2     // Lorg/apache/commons/logging/Log; result
                    IINC 4 1     // I i   (line 913)
                    GOTO L6
                L7: ALOAD_2     // Lorg/apache/commons/logging/Log; result   (line 917)
                    IFNONNULL L8
                    NEW org.apache.commons.logging.LogConfigurationException   (line 918)
                    DUP
                    LDC "No suitable Log implementation"
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
                L8: ALOAD_2     // Lorg/apache/commons/logging/Log; result   (line 922)
                    ARETURN
  end private org.apache.commons.logging.Log discoverLogImplementation(String) throws org.apache.commons.logging.LogConfigurationException

  private void informUponSimilarName(StringBuffer, String, String):
                    ALOAD_2     // Ljava/lang/String; name   (line 935)
                    ALOAD_3     // Ljava/lang/String; candidate
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L0
                    RETURN   (line 938)
                L0: ALOAD_2     // Ljava/lang/String; name   (line 944)
                    ICONST_1
                    ICONST_0
                    ALOAD_3     // Ljava/lang/String; candidate
                    ICONST_0
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.PKG_LEN I
                    ICONST_5
                    IADD
                    INVOKEVIRTUAL java.lang.String.regionMatches (ZILjava/lang/String;II)Z
                    IFEQ L1
                    ALOAD_1     // Ljava/lang/StringBuffer; messageBuffer   (line 945)
                    LDC " Did you mean '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_1     // Ljava/lang/StringBuffer; messageBuffer   (line 946)
                    ALOAD_3     // Ljava/lang/String; candidate
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_1     // Ljava/lang/StringBuffer; messageBuffer   (line 947)
                    LDC "'?"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                L1: RETURN   (line 949)
  end private void informUponSimilarName(StringBuffer, String, String)

  private String findUserSpecifiedLogClassName():
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 961)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 962)
                    LDC "Trying to get log class from attribute 'org.apache.commons.logging.Log'"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 964)
                    LDC "org.apache.commons.logging.Log"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.getAttribute (Ljava/lang/String;)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ASTORE_1
                    ALOAD_1     // Ljava/lang/String; specifiedClass   (line 966)
                    IFNONNULL L2
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 967)
                    IFEQ L1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 968)
                    LDC "Trying to get log class from attribute 'org.apache.commons.logging.log'"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 971)
                    LDC "org.apache.commons.logging.log"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.getAttribute (Ljava/lang/String;)Ljava/lang/Object;
                    CHECKCAST java.lang.String
                    ASTORE_1     // Ljava/lang/String; specifiedClass
                L2: ALOAD_1     // Ljava/lang/String; specifiedClass   (line 974)
                    IFNONNULL L4
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 975)
                    IFEQ L3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 976)
                    LDC "Trying to get log class from system property 'org.apache.commons.logging.Log'"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E0
    |           L3: LDC "org.apache.commons.logging.Log"   (line 980)
    |               ACONST_NULL
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE_1     // Ljava/lang/String; specifiedClass
    catch java.lang.SecurityException -> E0
                    GOTO L4   (line 986)
                E0: ASTORE_2   (line 981)
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 982)
                    IFEQ L4
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 983)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "No access allowed to system property 'org.apache.commons.logging.Log' - "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/SecurityException; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L4: ALOAD_1     // Ljava/lang/String; specifiedClass   (line 989)
                    IFNONNULL L6
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 990)
                    IFEQ L5
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 991)
                    LDC "Trying to get log class from system property 'org.apache.commons.logging.log'"
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.SecurityException -> E1
    |           L5: LDC "org.apache.commons.logging.log"   (line 995)
    |               ACONST_NULL
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getSystemProperty (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    |               ASTORE_1     // Ljava/lang/String; specifiedClass
    catch java.lang.SecurityException -> E1
                    GOTO L6   (line 1001)
                E1: ASTORE_2   (line 996)
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 997)
                    IFEQ L6
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 998)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "No access allowed to system property 'org.apache.commons.logging.log' - "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/SecurityException; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L6: ALOAD_1     // Ljava/lang/String; specifiedClass   (line 1007)
                    IFNULL L7
                    ALOAD_1     // Ljava/lang/String; specifiedClass   (line 1008)
                    INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
                    ASTORE_1     // Ljava/lang/String; specifiedClass
                L7: ALOAD_1     // Ljava/lang/String; specifiedClass   (line 1011)
                    ARETURN
  end private String findUserSpecifiedLogClassName()

  private org.apache.commons.logging.Log createLogFromClass(String, String, boolean) throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1039)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1040)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Attempting to instantiate '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ICONST_1   (line 1043)
                    ANEWARRAY java.lang.Object
                    DUP
                    ICONST_0
                    ALOAD_2     // Ljava/lang/String; logCategory
                    AASTORE
                    ASTORE 4
                    ACONST_NULL   (line 1044)
                    ASTORE 5
                    ACONST_NULL   (line 1045)
                    ASTORE 6
                    ACONST_NULL   (line 1047)
                    ASTORE 7
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1048)
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getBaseClassLoader ()Ljava/lang/ClassLoader;
                    ASTORE 8
                L1: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1053)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Trying to load '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' from classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.Throwable -> E13
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    | | catch java.lang.ExceptionInInitializerError -> E7
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | | |         INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1059)
    | | | |         IFEQ L5
    | | | |         NEW java.lang.StringBuffer   (line 1065)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         ALOAD_1     // Ljava/lang/String; logAdapterClassName
    | | | |         BIPUSH 46
    | | | |         BIPUSH 47
    | | | |         INVOKEVIRTUAL java.lang.String.replace (CC)Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC ".class"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         ASTORE 10
    | | | |         ALOAD 8     // Ljava/lang/ClassLoader; currentCL   (line 1066)
    | | | |         IFNULL L2
    | | | |         ALOAD 8     // Ljava/lang/ClassLoader; currentCL   (line 1067)
    | | | |         ALOAD 10     // Ljava/lang/String; resourceName
    | | | |         INVOKEVIRTUAL java.lang.ClassLoader.getResource (Ljava/lang/String;)Ljava/net/URL;
    | | | |         ASTORE 9
    | | | |         GOTO L3
    | | | |     L2: NEW java.lang.StringBuffer   (line 1069)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         ALOAD 10     // Ljava/lang/String; resourceName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC ".class"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKESTATIC java.lang.ClassLoader.getSystemResource (Ljava/lang/String;)Ljava/net/URL;
    | | | |         ASTORE 9
    | | | |     L3: ALOAD 9     // Ljava/net/URL; url   (line 1072)
    | | | |         IFNONNULL L4
    | | | |         ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1073)
    | | | |         NEW java.lang.StringBuffer
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "Class '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_1     // Ljava/lang/String; logAdapterClassName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "' ["
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 10     // Ljava/lang/String; resourceName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "] cannot be found."
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    | | | |         GOTO L5
    | | | |     L4: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1075)
    | | | |         NEW java.lang.StringBuffer
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "Class '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_1     // Ljava/lang/String; logAdapterClassName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "' was found at '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 9     // Ljava/net/URL; url
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
    | | | |         LDC "'"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    | | | |     L5: ACONST_NULL   (line 1079)
    | | | |         ASTORE 9
    | | | | catch java.lang.ClassNotFoundException -> E0
    | | | | |       ALOAD_1     // Ljava/lang/String; logAdapterClassName   (line 1081)
    | | | | |       ICONST_1
    | | | | |       ALOAD 8     // Ljava/lang/ClassLoader; currentCL
    | | | | |       INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
    | | | | |       ASTORE 9     // Ljava/lang/Class; c
    | | | | catch java.lang.ClassNotFoundException -> E0
    | | | |         GOTO L6   (line 1113)
    | | | |     E0: ASTORE 10   (line 1082)
    | | | |         NEW java.lang.StringBuffer   (line 1086)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC ""
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 10     // Ljava/lang/ClassNotFoundException; originalClassNotFoundException
    | | | |         INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         ASTORE 11
    | | | |         ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1087)
    | | | |         NEW java.lang.StringBuffer
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "The log adapter '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_1     // Ljava/lang/String; logAdapterClassName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "' is not available via classloader "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 8     // Ljava/lang/ClassLoader; currentCL
    | | | |         INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC ": "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 11     // Ljava/lang/String; msg
    | | | |         INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    | | | | catch java.lang.ClassNotFoundException -> E1
    | | | | |       ALOAD_1     // Ljava/lang/String; logAdapterClassName   (line 1102)
    | | | | |       INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;
    | | | | |       ASTORE 9     // Ljava/lang/Class; c
    | | | | catch java.lang.ClassNotFoundException -> E1
    | | | |         GOTO L6   (line 1112)
    | | | |     E1: ASTORE 12   (line 1103)
    | | | |         NEW java.lang.StringBuffer   (line 1105)
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC ""
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 12     // Ljava/lang/ClassNotFoundException; secondaryClassNotFoundException
    | | | |         INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         ASTORE 11     // Ljava/lang/String; msg
    | | | |         ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1106)
    | | | |         NEW java.lang.StringBuffer
    | | | |         DUP
    | | | |         INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    | | | |         LDC "The log adapter '"
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD_1     // Ljava/lang/String; logAdapterClassName
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         LDC "' is not available via the LogFactoryImpl class classloader: "
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         ALOAD 11     // Ljava/lang/String; msg
    | | | |         INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    | | | |         INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    | | | |         INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | catch java.lang.ExceptionInInitializerError -> E7
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    catch java.lang.Throwable -> E13
                    GOTO L10   (line 1111)
    catch java.lang.Throwable -> E13
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    | | catch java.lang.ExceptionInInitializerError -> E7
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | | |     L6: ALOAD 9     // Ljava/lang/Class; c   (line 1115)
    | | | |         ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
    | | | |         GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructorSignature [Ljava/lang/Class;
    | | | |         INVOKEVIRTUAL java.lang.Class.getConstructor ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
    | | | |         ASTORE 6     // Ljava/lang/reflect/Constructor; constructor
    | | | |         ALOAD 6     // Ljava/lang/reflect/Constructor; constructor   (line 1116)
    | | | |         ALOAD 4     // [Ljava/lang/Object; params
    | | | |         INVOKEVIRTUAL java.lang.reflect.Constructor.newInstance ([Ljava/lang/Object;)Ljava/lang/Object;
    | | | |         ASTORE 10
    | | | |         ALOAD 10     // Ljava/lang/Object; o   (line 1122)
    | | | |         INSTANCEOF org.apache.commons.logging.Log
    | | | |         IFEQ L7
    | | | |         ALOAD 9     // Ljava/lang/Class; c   (line 1123)
    | | | |         ASTORE 7     // Ljava/lang/Class; logAdapterClass
    | | | |         ALOAD 10     // Ljava/lang/Object; o   (line 1124)
    | | | |         CHECKCAST org.apache.commons.logging.Log
    | | | |         ASTORE 5     // Lorg/apache/commons/logging/Log; logAdapter
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | catch java.lang.ExceptionInInitializerError -> E7
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    catch java.lang.Throwable -> E13
                    GOTO L10   (line 1125)
    catch java.lang.Throwable -> E13
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    | | catch java.lang.ExceptionInInitializerError -> E7
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | | |     L7: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1138)
    | | | |         ALOAD 8     // Ljava/lang/ClassLoader; currentCL
    | | | |         ALOAD 9     // Ljava/lang/Class; c
    | | | |         INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.handleFlawedHierarchy (Ljava/lang/ClassLoader;Ljava/lang/Class;)V
    | | | catch java.lang.NoClassDefFoundError -> E4
    | | catch java.lang.ExceptionInInitializerError -> E7
    | catch org.apache.commons.logging.LogConfigurationException -> E10
    catch java.lang.Throwable -> E13
                    GOTO L8   (line 1179)
                E4: ASTORE 9   (line 1139)
                    NEW java.lang.StringBuffer   (line 1145)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC ""
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 9     // Ljava/lang/NoClassDefFoundError; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    ASTORE 10
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1146)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "The log adapter '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' is missing dependencies when loaded via classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 10     // Ljava/lang/String; msg
                    INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    GOTO L10   (line 1153)
                E7: ASTORE 9   (line 1154)
                    NEW java.lang.StringBuffer   (line 1161)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC ""
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 9     // Ljava/lang/ExceptionInInitializerError; e
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    ASTORE 10
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1162)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "The log adapter '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' is unable to initialize itself when loaded via classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 10     // Ljava/lang/String; msg
                    INVOKEVIRTUAL java.lang.String.trim ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    GOTO L10   (line 1169)
               E10: ASTORE 9   (line 1170)
                    ALOAD 9     // Lorg/apache/commons/logging/LogConfigurationException; e   (line 1173)
                    ATHROW
               E13: ASTORE 9   (line 1174)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1178)
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    ALOAD 9     // Ljava/lang/Throwable; t
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.handleFlawedDiscovery (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Throwable;)V
                L8: ALOAD 8     // Ljava/lang/ClassLoader; currentCL   (line 1181)
                    IFNONNULL L9
                    GOTO L10   (line 1182)
                L9: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1187)
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getParentClassLoader (Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
                    ASTORE 8     // Ljava/lang/ClassLoader; currentCL
                    GOTO L1
               L10: ALOAD 5     // Lorg/apache/commons/logging/Log; logAdapter   (line 1190)
                    IFNULL L12
                    ILOAD_3     // Z affectState
                    IFEQ L12
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1192)
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logClassName Ljava/lang/String;
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1193)
                    ALOAD 6     // Ljava/lang/reflect/Constructor; constructor
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logConstructor Ljava/lang/reflect/Constructor;
    catch java.lang.Throwable -> E14
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1197)
    |               ALOAD 7     // Ljava/lang/Class; logAdapterClass
    |               LDC "setLogFactory"
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this
    |               GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethodSignature [Ljava/lang/Class;
    |               INVOKEVIRTUAL java.lang.Class.getMethod (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    |               PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethod Ljava/lang/reflect/Method;
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1199)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Found method setLogFactory(LogFactory) in '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/String; logAdapterClassName
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "'"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.Throwable -> E14
                    GOTO L11   (line 1208)
               E14: ASTORE 9   (line 1201)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1202)
                    ACONST_NULL
                    PUTFIELD org.apache.commons.logging.impl.LogFactoryImpl.logMethod Ljava/lang/reflect/Method;
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1203)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "[INFO] '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' from classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 8     // Ljava/lang/ClassLoader; currentCL
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " does not declare optional method "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "setLogFactory(LogFactory)"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
               L11: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1210)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Log adapter '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' from classloader "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 7     // Ljava/lang/Class; logAdapterClass
                    INVOKEVIRTUAL java.lang.Class.getClassLoader ()Ljava/lang/ClassLoader;
                    INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC " has been selected for use."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
               L12: ALOAD 5     // Lorg/apache/commons/logging/Log; logAdapter   (line 1216)
                    ARETURN
  end private org.apache.commons.logging.Log createLogFromClass(String, String, boolean) throws org.apache.commons.logging.LogConfigurationException

  private ClassLoader getBaseClassLoader() throws org.apache.commons.logging.LogConfigurationException:
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$impl$LogFactoryImpl Ljava/lang/Class;   (line 1239)
                    IFNONNULL L0
                    LDC "org.apache.commons.logging.impl.LogFactoryImpl"
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$impl$LogFactoryImpl Ljava/lang/Class;
                    GOTO L1
                L0: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$impl$LogFactoryImpl Ljava/lang/Class;
                L1: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
                    ASTORE_1
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1241)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.useTCCL Z
                    IFNE L2
                    ALOAD_1     // Ljava/lang/ClassLoader; thisClassLoader   (line 1242)
                    ARETURN
                L2: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getContextClassLoaderInternal ()Ljava/lang/ClassLoader;   (line 1245)
                    ASTORE_2
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1247)
                    ALOAD_2     // Ljava/lang/ClassLoader; contextClassLoader
                    ALOAD_1     // Ljava/lang/ClassLoader; thisClassLoader
                    INVOKESPECIAL org.apache.commons.logging.impl.LogFactoryImpl.getLowestClassLoader (Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;
                    ASTORE_3
                    ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader   (line 1250)
                    IFNONNULL L5
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1255)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedContext Z
                    IFEQ L4
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1256)
                    IFEQ L3
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1257)
                    LDC "[WARNING] the context classloader is not part of a parent-child relationship with the classloader that loaded LogFactoryImpl."
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L3: ALOAD_2     // Ljava/lang/ClassLoader; contextClassLoader   (line 1265)
                    ARETURN
                L4: NEW org.apache.commons.logging.LogConfigurationException   (line 1268)
                    DUP
                    LDC "Bad classloader hierarchy; LogFactoryImpl was loaded via a classloader that is not related to the current context classloader."
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
                L5: ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader   (line 1275)
                    ALOAD_2     // Ljava/lang/ClassLoader; contextClassLoader
                    IF_ACMPEQ L7
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1281)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedContext Z
                    IFEQ L6
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1282)
                    IFEQ L7
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1283)
                    LDC "Warning: the context classloader is an ancestor of the classloader that loaded LogFactoryImpl; it should be the same or a descendant. The application using commons-logging should ensure the context classloader is used correctly."
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    GOTO L7
                L6: NEW org.apache.commons.logging.LogConfigurationException   (line 1291)
                    DUP
                    LDC "Bad classloader hierarchy; LogFactoryImpl was loaded via a classloader that is not related to the current context classloader."
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
                L7: ALOAD_3     // Ljava/lang/ClassLoader; baseClassLoader   (line 1298)
                    ARETURN
  end private ClassLoader getBaseClassLoader() throws org.apache.commons.logging.LogConfigurationException

  private ClassLoader getLowestClassLoader(ClassLoader, ClassLoader):
                    ALOAD_1     // Ljava/lang/ClassLoader; c1   (line 1314)
                    IFNONNULL L0
                    ALOAD_2     // Ljava/lang/ClassLoader; c2   (line 1315)
                    ARETURN
                L0: ALOAD_2     // Ljava/lang/ClassLoader; c2   (line 1317)
                    IFNONNULL L1
                    ALOAD_1     // Ljava/lang/ClassLoader; c1   (line 1318)
                    ARETURN
                L1: ALOAD_1     // Ljava/lang/ClassLoader; c1   (line 1323)
                    ASTORE_3
                L2: ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1324)
                    IFNULL L4
                    ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1325)
                    ALOAD_2     // Ljava/lang/ClassLoader; c2
                    IF_ACMPNE L3
                    ALOAD_1     // Ljava/lang/ClassLoader; c1   (line 1326)
                    ARETURN
                L3: ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1327)
                    INVOKEVIRTUAL java.lang.ClassLoader.getParent ()Ljava/lang/ClassLoader;
                    ASTORE_3     // Ljava/lang/ClassLoader; current
                    GOTO L2
                L4: ALOAD_2     // Ljava/lang/ClassLoader; c2   (line 1331)
                    ASTORE_3     // Ljava/lang/ClassLoader; current
                L5: ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1332)
                    IFNULL L7
                    ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1333)
                    ALOAD_1     // Ljava/lang/ClassLoader; c1
                    IF_ACMPNE L6
                    ALOAD_2     // Ljava/lang/ClassLoader; c2   (line 1334)
                    ARETURN
                L6: ALOAD_3     // Ljava/lang/ClassLoader; current   (line 1335)
                    INVOKEVIRTUAL java.lang.ClassLoader.getParent ()Ljava/lang/ClassLoader;
                    ASTORE_3     // Ljava/lang/ClassLoader; current
                    GOTO L5
                L7: ACONST_NULL   (line 1338)
                    ARETURN
  end private ClassLoader getLowestClassLoader(ClassLoader, ClassLoader)

  private void handleFlawedDiscovery(String, ClassLoader, Throwable):
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1360)
                    IFEQ L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1361)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Could not instantiate Log '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_1     // Ljava/lang/String; logAdapterClassName
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC "' -- "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/Throwable; discoveryFlaw
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_3     // Ljava/lang/Throwable; discoveryFlaw
                    INVOKEVIRTUAL java.lang.Throwable.getLocalizedMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    ALOAD_3     // Ljava/lang/Throwable; discoveryFlaw   (line 1366)
                    INSTANCEOF java.lang.reflect.InvocationTargetException
                    IFEQ L0
                    ALOAD_3     // Ljava/lang/Throwable; discoveryFlaw   (line 1370)
                    CHECKCAST java.lang.reflect.InvocationTargetException
                    ASTORE 4
                    ALOAD 4     // Ljava/lang/reflect/InvocationTargetException; ite   (line 1371)
                    INVOKEVIRTUAL java.lang.reflect.InvocationTargetException.getTargetException ()Ljava/lang/Throwable;
                    ASTORE 5
                    ALOAD 5     // Ljava/lang/Throwable; cause   (line 1372)
                    IFNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1373)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "... InvocationTargetException: "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 5     // Ljava/lang/Throwable; cause
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 5     // Ljava/lang/Throwable; cause
                    INVOKEVIRTUAL java.lang.Throwable.getLocalizedMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    ALOAD 5     // Ljava/lang/Throwable; cause   (line 1377)
                    INSTANCEOF java.lang.ExceptionInInitializerError
                    IFEQ L0
                    ALOAD 5     // Ljava/lang/Throwable; cause   (line 1378)
                    CHECKCAST java.lang.ExceptionInInitializerError
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/ExceptionInInitializerError; eiie   (line 1379)
                    INVOKEVIRTUAL java.lang.ExceptionInInitializerError.getException ()Ljava/lang/Throwable;
                    ASTORE 7
                    ALOAD 7     // Ljava/lang/Throwable; cause2   (line 1380)
                    IFNULL L0
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1381)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "... ExceptionInInitializerError: "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 7     // Ljava/lang/Throwable; cause2
                    INVOKEVIRTUAL java.lang.Object.getClass ()Ljava/lang/Class;
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    LDC ": "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD 7     // Ljava/lang/Throwable; cause2
                    INVOKEVIRTUAL java.lang.Throwable.getLocalizedMessage ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L0: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1390)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedDiscovery Z
                    IFNE L1
                    NEW org.apache.commons.logging.LogConfigurationException   (line 1391)
                    DUP
                    ALOAD_3     // Ljava/lang/Throwable; discoveryFlaw
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/Throwable;)V
                    ATHROW
                L1: RETURN   (line 1393)
  end private void handleFlawedDiscovery(String, ClassLoader, Throwable)

  private void handleFlawedHierarchy(ClassLoader, Class) throws org.apache.commons.logging.LogConfigurationException:
                    ICONST_0   (line 1425)
                    ISTORE_3
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;   (line 1426)
                    IFNONNULL L0
                    LDC "org.apache.commons.logging.Log"
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                    GOTO L1
                L0: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                L1: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    ASTORE 4
                    ALOAD_2     // Ljava/lang/Class; badClass   (line 1427)
                    INVOKEVIRTUAL java.lang.Class.getInterfaces ()[Ljava/lang/Class;
                    ASTORE 5
                    ICONST_0   (line 1428)
                    ISTORE 6
                L2: ILOAD 6     // I i
                    ALOAD 5     // [Ljava/lang/Class; interfaces
                    ARRAYLENGTH
                    IF_ICMPGE L4
                    ALOAD 4     // Ljava/lang/String; logInterfaceName   (line 1429)
                    ALOAD 5     // [Ljava/lang/Class; interfaces
                    ILOAD 6     // I i
                    AALOAD
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z
                    IFEQ L3
                    ICONST_1   (line 1430)
                    ISTORE_3     // Z implementsLog
                    GOTO L4   (line 1431)
                L3: IINC 6 1     // I i   (line 1428)
                    GOTO L2
                L4: ILOAD_3     // Z implementsLog   (line 1435)
                    IFEQ L14
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1438)
                    IFEQ L7
    catch java.lang.Throwable -> E0
    |               GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;   (line 1440)
    |               IFNONNULL L5
    |               LDC "org.apache.commons.logging.Log"
    |               INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
    |               DUP
    |               PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
    |               GOTO L6
    |           L5: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
    |           L6: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.getClassLoader (Ljava/lang/Class;)Ljava/lang/ClassLoader;
    |               ASTORE 6
    |               ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1441)
    |               NEW java.lang.StringBuffer
    |               DUP
    |               INVOKESPECIAL java.lang.StringBuffer.<init> ()V
    |               LDC "Class '"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_2     // Ljava/lang/Class; badClass
    |               INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC "' was found in classloader "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD_1     // Ljava/lang/ClassLoader; badClassLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC ". It is bound to a Log interface which is not"
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               LDC " the one loaded from classloader "
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               ALOAD 6     // Ljava/lang/ClassLoader; logInterfaceClassLoader
    |               INVOKESTATIC org.apache.commons.logging.LogFactory.objectId (Ljava/lang/Object;)Ljava/lang/String;
    |               INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
    |               INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
    |               INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
    catch java.lang.Throwable -> E0
                    GOTO L7   (line 1452)
                E0: ASTORE 6   (line 1448)
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1449)
                    NEW java.lang.StringBuffer
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    LDC "Error while trying to output diagnostics about bad class '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    ALOAD_2     // Ljava/lang/Class; badClass
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;
                    LDC "'"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                L7: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1455)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedHierarchy Z
                    IFNE L11
                    NEW java.lang.StringBuffer   (line 1456)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1457)
                    LDC "Terminating logging for this context "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1458)
                    LDC "due to bad log hierarchy. "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1459)
                    LDC "You have more than one version of '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1460)
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                    IFNONNULL L8
                    LDC "org.apache.commons.logging.Log"
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                    GOTO L9
                L8: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                L9: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1461)
                    LDC "' visible."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1462)
                    IFEQ L10
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1463)
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
               L10: NEW org.apache.commons.logging.LogConfigurationException   (line 1465)
                    DUP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
               L11: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1468)
                    IFEQ L17
                    NEW java.lang.StringBuffer   (line 1469)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1470)
                    LDC "Warning: bad log hierarchy. "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1471)
                    LDC "You have more than one version of '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1472)
                    GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                    IFNONNULL L12
                    LDC "org.apache.commons.logging.Log"
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$ (Ljava/lang/String;)Ljava/lang/Class;
                    DUP
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
                    GOTO L13
               L12: GETSTATIC org.apache.commons.logging.impl.LogFactoryImpl.class$org$apache$commons$logging$Log Ljava/lang/Class;
               L13: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1473)
                    LDC "' visible."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1474)
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
                    GOTO L17
               L14: ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1478)
                    GETFIELD org.apache.commons.logging.impl.LogFactoryImpl.allowFlawedDiscovery Z
                    IFNE L16
                    NEW java.lang.StringBuffer   (line 1479)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1480)
                    LDC "Terminating logging for this context. "
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1481)
                    LDC "Log class '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1482)
                    ALOAD_2     // Ljava/lang/Class; badClass
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1483)
                    LDC "' does not implement the Log interface."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1484)
                    IFEQ L15
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1485)
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
               L15: NEW org.apache.commons.logging.LogConfigurationException   (line 1488)
                    DUP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKESPECIAL org.apache.commons.logging.LogConfigurationException.<init> (Ljava/lang/String;)V
                    ATHROW
               L16: INVOKESTATIC org.apache.commons.logging.impl.LogFactoryImpl.isDiagnosticsEnabled ()Z   (line 1491)
                    IFEQ L17
                    NEW java.lang.StringBuffer   (line 1492)
                    DUP
                    INVOKESPECIAL java.lang.StringBuffer.<init> ()V
                    ASTORE 6
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1493)
                    LDC "[WARNING] Log class '"
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1494)
                    ALOAD_2     // Ljava/lang/Class; badClass
                    INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD 6     // Ljava/lang/StringBuffer; msg   (line 1495)
                    LDC "' does not implement the Log interface."
                    INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;
                    POP
                    ALOAD_0     // Lorg/apache/commons/logging/impl/LogFactoryImpl; this   (line 1496)
                    ALOAD 6     // Ljava/lang/StringBuffer; msg
                    INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;
                    INVOKEVIRTUAL org.apache.commons.logging.impl.LogFactoryImpl.logDiagnostic (Ljava/lang/String;)V
               L17: RETURN   (line 1499)
  end private void handleFlawedHierarchy(ClassLoader, Class) throws org.apache.commons.logging.LogConfigurationException

  static Class class$(String):
    catch java.lang.ClassNotFoundException -> E0
    |               ALOAD_0     // Ljava/lang/String; x0   (line 231)
    |               INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;
    catch java.lang.ClassNotFoundException -> E0
                    ARETURN
                E0: ASTORE_1
                    NEW java.lang.NoClassDefFoundError
                    DUP
                    ALOAD_1     // Ljava/lang/ClassNotFoundException; x1
                    INVOKEVIRTUAL java.lang.Throwable.getMessage ()Ljava/lang/String;
                    INVOKESPECIAL java.lang.NoClassDefFoundError.<init> (Ljava/lang/String;)V
                    ATHROW
  end static Class class$(String)

  static ClassLoader access$000() throws org.apache.commons.logging.LogConfigurationException:
                    INVOKESTATIC org.apache.commons.logging.LogFactory.directGetContextClassLoader ()Ljava/lang/ClassLoader;   (line 71)
                    ARETURN
  end static ClassLoader access$000() throws org.apache.commons.logging.LogConfigurationException

  static void <clinit>():
                    LDC "org.apache.commons.logging.impl."   (line 84)
                    INVOKEVIRTUAL java.lang.String.length ()I
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.PKG_LEN I
                    ICONST_4   (line 176)
                    ANEWARRAY java.lang.String
                    DUP
                    ICONST_0
                    LDC "org.apache.commons.logging.impl.Log4JLogger"
                    AASTORE
                    DUP
                    ICONST_1
                    LDC "org.apache.commons.logging.impl.Jdk14Logger"
                    AASTORE
                    DUP
                    ICONST_2
                    LDC "org.apache.commons.logging.impl.Jdk13LumberjackLogger"
                    AASTORE
                    DUP
                    ICONST_3
                    LDC "org.apache.commons.logging.impl.SimpleLog"
                    AASTORE
                    PUTSTATIC org.apache.commons.logging.impl.LogFactoryImpl.classesToDiscover [Ljava/lang/String;
                    RETURN
  end static void <clinit>()
end public class org.apache.commons.logging.impl.LogFactoryImpl
 -- (NullPointerException) null
null
java.lang.NullPointerException
	at org.aspectj.weaver.UnresolvedType.forSignature(UnresolvedType.java:361)
	at org.aspectj.weaver.bcel.BcelObjectType.getDeclaredInterfaces(BcelObjectType.java:275)
	at org.aspectj.weaver.ReferenceType.getDeclaredInterfaces(ReferenceType.java:624)
	at org.aspectj.weaver.ResolvedType.getDirectSupertypes(ResolvedType.java:76)
	at org.aspectj.weaver.patterns.TypePattern.matchesSubtypes(TypePattern.java:178)
	at org.aspectj.weaver.patterns.ExactTypePattern.matchesSubtypes(ExactTypePattern.java:74)
	at org.aspectj.weaver.patterns.TypePattern.matchesStatically(TypePattern.java:130)
	at org.aspectj.weaver.patterns.OrTypePattern.matchesStatically(OrTypePattern.java:76)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactlyMethod(SignaturePattern.java:505)
	at org.aspectj.weaver.patterns.SignaturePattern.matchesExactly(SignaturePattern.java:360)
	at org.aspectj.weaver.patterns.SignaturePattern.matches(SignaturePattern.java:320)
	at org.aspectj.weaver.patterns.KindedPointcut.matchInternal(KindedPointcut.java:202)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.AndPointcut.matchInternal(AndPointcut.java:51)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.patterns.OrPointcut.matchInternal(OrPointcut.java:54)
	at org.aspectj.weaver.patterns.Pointcut.match(Pointcut.java:137)
	at org.aspectj.weaver.ShadowMunger.match(ShadowMunger.java:113)
	at org.aspectj.weaver.Advice.match(Advice.java:109)
	at org.aspectj.weaver.bcel.BcelAdvice.match(BcelAdvice.java:149)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:3116)
	at org.aspectj.weaver.bcel.BcelClassWeaver.match(BcelClassWeaver.java:2550)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:474)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:100)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1687)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1631)
	at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1394)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1180)
	at org.aspectj.weaver.tools.WeavingAdaptor.getWovenBytes(WeavingAdaptor.java:467)
	at org.aspectj.weaver.tools.WeavingAdaptor.weaveClass(WeavingAdaptor.java:318)
	at org.aspectj.weaver.loadtime.Aj.preProcess(Aj.java:96)
	at org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:54)
	at sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:760)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.apache.commons.logging.LogFactory.createFactory(LogFactory.java:1131)
	at org.apache.commons.logging.LogFactory$2.run(LogFactory.java:1065)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.commons.logging.LogFactory.newFactory(LogFactory.java:1062)
	at org.apache.commons.logging.LogFactory.getFactory(LogFactory.java:650)
	at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:685)
	at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:160)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:89)
	at org.springframework.context.support.AbstractRefreshableConfigApplicationContext.<init>(AbstractRefreshableConfigApplicationContext.java:59)
	at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:61)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:136)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at foo.ConfigureApp.main(ConfigureApp.java:9)

error can't determine annotations of missing type org.springframework.cache.annotation.CachePut
when weaving type org.apache.commons.logging.impl.LogFactoryImpl$2
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Cacheable
when weaving type org.apache.commons.logging.impl.LogFactoryImpl$2
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.CacheEvict
when weaving type org.apache.commons.logging.impl.LogFactoryImpl$2
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.cache.annotation.Caching
when weaving type org.apache.commons.logging.impl.LogFactoryImpl$2
when weaving classes 
when weaving 
 [Xlint:cantFindType]
error can't determine annotations of missing type org.springframework.transaction.annotation.Transactional
when weaving type org.apache.commons.logging.impl.LogFactoryImpl$2
when weaving classes 
when weaving 
 [Xlint:cantFindType]
